/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.routines;


import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;

import ru.hh.jooq.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pgstatindex2 extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -1849995621;

    /**
     * The parameter <code>public.pgstatindex.relname</code>.
     */
    public static final Parameter<Object> RELNAME = createParameter("relname", org.jooq.impl.DefaultDataType.getDefaultDataType("regclass"), false, false);

    /**
     * The parameter <code>public.pgstatindex.version</code>.
     */
    public static final Parameter<Integer> VERSION = createParameter("version", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.pgstatindex.tree_level</code>.
     */
    public static final Parameter<Integer> TREE_LEVEL = createParameter("tree_level", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.pgstatindex.index_size</code>.
     */
    public static final Parameter<Long> INDEX_SIZE = createParameter("index_size", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>public.pgstatindex.root_block_no</code>.
     */
    public static final Parameter<Long> ROOT_BLOCK_NO = createParameter("root_block_no", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>public.pgstatindex.internal_pages</code>.
     */
    public static final Parameter<Long> INTERNAL_PAGES = createParameter("internal_pages", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>public.pgstatindex.leaf_pages</code>.
     */
    public static final Parameter<Long> LEAF_PAGES = createParameter("leaf_pages", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>public.pgstatindex.empty_pages</code>.
     */
    public static final Parameter<Long> EMPTY_PAGES = createParameter("empty_pages", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>public.pgstatindex.deleted_pages</code>.
     */
    public static final Parameter<Long> DELETED_PAGES = createParameter("deleted_pages", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>public.pgstatindex.avg_leaf_density</code>.
     */
    public static final Parameter<Double> AVG_LEAF_DENSITY = createParameter("avg_leaf_density", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.pgstatindex.leaf_fragmentation</code>.
     */
    public static final Parameter<Double> LEAF_FRAGMENTATION = createParameter("leaf_fragmentation", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * Create a new routine call instance
     */
    public Pgstatindex2() {
        super("pgstatindex", Public.PUBLIC);

        addInParameter(RELNAME);
        addOutParameter(VERSION);
        addOutParameter(TREE_LEVEL);
        addOutParameter(INDEX_SIZE);
        addOutParameter(ROOT_BLOCK_NO);
        addOutParameter(INTERNAL_PAGES);
        addOutParameter(LEAF_PAGES);
        addOutParameter(EMPTY_PAGES);
        addOutParameter(DELETED_PAGES);
        addOutParameter(AVG_LEAF_DENSITY);
        addOutParameter(LEAF_FRAGMENTATION);
        setOverloaded(true);
    }

    /**
     * Set the <code>relname</code> parameter IN value to the routine
     */
    public void setRelname(Object value) {
        setValue(RELNAME, value);
    }

    /**
     * Get the <code>version</code> parameter OUT value from the routine
     */
    public Integer getVersion() {
        return get(VERSION);
    }

    /**
     * Get the <code>tree_level</code> parameter OUT value from the routine
     */
    public Integer getTreeLevel() {
        return get(TREE_LEVEL);
    }

    /**
     * Get the <code>index_size</code> parameter OUT value from the routine
     */
    public Long getIndexSize() {
        return get(INDEX_SIZE);
    }

    /**
     * Get the <code>root_block_no</code> parameter OUT value from the routine
     */
    public Long getRootBlockNo() {
        return get(ROOT_BLOCK_NO);
    }

    /**
     * Get the <code>internal_pages</code> parameter OUT value from the routine
     */
    public Long getInternalPages() {
        return get(INTERNAL_PAGES);
    }

    /**
     * Get the <code>leaf_pages</code> parameter OUT value from the routine
     */
    public Long getLeafPages() {
        return get(LEAF_PAGES);
    }

    /**
     * Get the <code>empty_pages</code> parameter OUT value from the routine
     */
    public Long getEmptyPages() {
        return get(EMPTY_PAGES);
    }

    /**
     * Get the <code>deleted_pages</code> parameter OUT value from the routine
     */
    public Long getDeletedPages() {
        return get(DELETED_PAGES);
    }

    /**
     * Get the <code>avg_leaf_density</code> parameter OUT value from the routine
     */
    public Double getAvgLeafDensity() {
        return get(AVG_LEAF_DENSITY);
    }

    /**
     * Get the <code>leaf_fragmentation</code> parameter OUT value from the routine
     */
    public Double getLeafFragmentation() {
        return get(LEAF_FRAGMENTATION);
    }
}
