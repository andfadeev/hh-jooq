/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerDenyHostRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerDenyHost extends TableImpl<EmployerDenyHostRecord> {

    private static final long serialVersionUID = 666312129;

    /**
     * The reference instance of <code>public.employer_deny_host</code>
     */
    public static final EmployerDenyHost EMPLOYER_DENY_HOST = new EmployerDenyHost();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerDenyHostRecord> getRecordType() {
        return EmployerDenyHostRecord.class;
    }

    /**
     * The column <code>public.employer_deny_host.employer_deny_host_id</code>.
     */
    public final TableField<EmployerDenyHostRecord, Integer> EMPLOYER_DENY_HOST_ID = createField("employer_deny_host_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_deny_host_employer_deny_host_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_deny_host.employer_id</code>.
     */
    public final TableField<EmployerDenyHostRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_deny_host.remote_host</code>.
     */
    public final TableField<EmployerDenyHostRecord, String> REMOTE_HOST = createField("remote_host", org.jooq.impl.SQLDataType.VARCHAR.length(64).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.employer_deny_host.blocked</code>.
     */
    public final TableField<EmployerDenyHostRecord, Boolean> BLOCKED = createField("blocked", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.employer_deny_host</code> table reference
     */
    public EmployerDenyHost() {
        this("employer_deny_host", null);
    }

    /**
     * Create an aliased <code>public.employer_deny_host</code> table reference
     */
    public EmployerDenyHost(String alias) {
        this(alias, EMPLOYER_DENY_HOST);
    }

    private EmployerDenyHost(String alias, Table<EmployerDenyHostRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerDenyHost(String alias, Table<EmployerDenyHostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerDenyHostRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_DENY_HOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerDenyHostRecord> getPrimaryKey() {
        return Keys.EMPLOYER_DENY_HOST_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerDenyHostRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerDenyHostRecord>>asList(Keys.EMPLOYER_DENY_HOST_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerDenyHostRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerDenyHostRecord, ?>>asList(Keys.EMPLOYER_DENY_HOST__EMPLOYER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerDenyHost as(String alias) {
        return new EmployerDenyHost(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerDenyHost rename(String name) {
        return new EmployerDenyHost(name, null);
    }
}
