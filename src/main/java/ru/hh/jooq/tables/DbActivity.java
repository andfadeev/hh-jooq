/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.DbActivityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbActivity extends TableImpl<DbActivityRecord> {

    private static final long serialVersionUID = -1535754153;

    /**
     * The reference instance of <code>public.db_activity</code>
     */
    public static final DbActivity DB_ACTIVITY = new DbActivity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DbActivityRecord> getRecordType() {
        return DbActivityRecord.class;
    }

    /**
     * The column <code>public.db_activity.ts_age</code>.
     */
    public final TableField<DbActivityRecord, Object> TS_AGE = createField("ts_age", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

    /**
     * The column <code>public.db_activity.state</code>.
     */
    public final TableField<DbActivityRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.db_activity.query_age</code>.
     */
    public final TableField<DbActivityRecord, Object> QUERY_AGE = createField("query_age", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

    /**
     * The column <code>public.db_activity.change_age</code>.
     */
    public final TableField<DbActivityRecord, Object> CHANGE_AGE = createField("change_age", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

    /**
     * The column <code>public.db_activity.datname</code>.
     */
    public final TableField<DbActivityRecord, String> DATNAME = createField("datname", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.db_activity.pid</code>.
     */
    public final TableField<DbActivityRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.db_activity.usename</code>.
     */
    public final TableField<DbActivityRecord, String> USENAME = createField("usename", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.db_activity.waiting</code>.
     */
    public final TableField<DbActivityRecord, Boolean> WAITING = createField("waiting", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.db_activity.client_addr</code>.
     */
    public final TableField<DbActivityRecord, Object> CLIENT_ADDR = createField("client_addr", org.jooq.impl.DefaultDataType.getDefaultDataType("inet"), this, "");

    /**
     * The column <code>public.db_activity.client_port</code>.
     */
    public final TableField<DbActivityRecord, Integer> CLIENT_PORT = createField("client_port", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.db_activity.query</code>.
     */
    public final TableField<DbActivityRecord, String> QUERY = createField("query", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.db_activity</code> table reference
     */
    public DbActivity() {
        this("db_activity", null);
    }

    /**
     * Create an aliased <code>public.db_activity</code> table reference
     */
    public DbActivity(String alias) {
        this(alias, DB_ACTIVITY);
    }

    private DbActivity(String alias, Table<DbActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private DbActivity(String alias, Table<DbActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivity as(String alias) {
        return new DbActivity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DbActivity rename(String name) {
        return new DbActivity(name, null);
    }
}
