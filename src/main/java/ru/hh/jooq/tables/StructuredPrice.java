/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.StructuredPriceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StructuredPrice extends TableImpl<StructuredPriceRecord> {

    private static final long serialVersionUID = -1546749238;

    /**
     * The reference instance of <code>public.structured_price</code>
     */
    public static final StructuredPrice STRUCTURED_PRICE = new StructuredPrice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StructuredPriceRecord> getRecordType() {
        return StructuredPriceRecord.class;
    }

    /**
     * The column <code>public.structured_price.structured_price_id</code>.
     */
    public final TableField<StructuredPriceRecord, Integer> STRUCTURED_PRICE_ID = createField("structured_price_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('structured_price_structured_price_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.structured_price.mds_code</code>.
     */
    public final TableField<StructuredPriceRecord, String> MDS_CODE = createField("mds_code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.structured_price.amount</code>.
     */
    public final TableField<StructuredPriceRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.structured_price.currency</code>.
     */
    public final TableField<StructuredPriceRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>public.structured_price.product_id</code>.
     */
    public final TableField<StructuredPriceRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.structured_price.blocked_at</code>.
     */
    public final TableField<StructuredPriceRecord, LocalDateTime> BLOCKED_AT = createField("blocked_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>public.structured_price</code> table reference
     */
    public StructuredPrice() {
        this("structured_price", null);
    }

    /**
     * Create an aliased <code>public.structured_price</code> table reference
     */
    public StructuredPrice(String alias) {
        this(alias, STRUCTURED_PRICE);
    }

    private StructuredPrice(String alias, Table<StructuredPriceRecord> aliased) {
        this(alias, aliased, null);
    }

    private StructuredPrice(String alias, Table<StructuredPriceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StructuredPriceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STRUCTURED_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StructuredPriceRecord> getPrimaryKey() {
        return Keys.STRUCTURED_PRICE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StructuredPriceRecord>> getKeys() {
        return Arrays.<UniqueKey<StructuredPriceRecord>>asList(Keys.STRUCTURED_PRICE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StructuredPriceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StructuredPriceRecord, ?>>asList(Keys.STRUCTURED_PRICE__FK_STRUCTURED_PRICE_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StructuredPrice as(String alias) {
        return new StructuredPrice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StructuredPrice rename(String name) {
        return new StructuredPrice(name, null);
    }
}
