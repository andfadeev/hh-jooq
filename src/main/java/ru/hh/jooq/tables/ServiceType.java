/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceTypeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceType extends TableImpl<ServiceTypeRecord> {

    private static final long serialVersionUID = -815078544;

    /**
     * The reference instance of <code>public.service_type</code>
     */
    public static final ServiceType SERVICE_TYPE = new ServiceType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceTypeRecord> getRecordType() {
        return ServiceTypeRecord.class;
    }

    /**
     * The column <code>public.service_type.code</code>.
     */
    public final TableField<ServiceTypeRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.service_type.deed_subject_id</code>.
     */
    public final TableField<ServiceTypeRecord, Integer> DEED_SUBJECT_ID = createField("deed_subject_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("4", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_type.service_type_id</code>.
     */
    public final TableField<ServiceTypeRecord, Integer> SERVICE_TYPE_ID = createField("service_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('service_type_service_type_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_type.legacy</code>.
     */
    public final TableField<ServiceTypeRecord, Boolean> LEGACY = createField("legacy", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_type.view_order</code>.
     */
    public final TableField<ServiceTypeRecord, Integer> VIEW_ORDER = createField("view_order", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.service_type.group_name</code>. unused
     */
    public final TableField<ServiceTypeRecord, String> GROUP_NAME = createField("group_name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "unused");

    /**
     * The column <code>public.service_type.enable_notifications</code>.
     */
    public final TableField<ServiceTypeRecord, Boolean> ENABLE_NOTIFICATIONS = createField("enable_notifications", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_type.parent_code</code>.
     */
    public final TableField<ServiceTypeRecord, String> PARENT_CODE = createField("parent_code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.service_type.visible_for_sales</code>. HH-55260 visibility flag for products
     */
    public final TableField<ServiceTypeRecord, Boolean> VISIBLE_FOR_SALES = createField("visible_for_sales", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "HH-55260 visibility flag for products");

    /**
     * The column <code>public.service_type.category_type</code>. HH-55532 service category type
     */
    public final TableField<ServiceTypeRecord, Integer> CATEGORY_TYPE = createField("category_type", org.jooq.impl.SQLDataType.INTEGER, this, "HH-55532 service category type");

    /**
     * Create a <code>public.service_type</code> table reference
     */
    public ServiceType() {
        this("service_type", null);
    }

    /**
     * Create an aliased <code>public.service_type</code> table reference
     */
    public ServiceType(String alias) {
        this(alias, SERVICE_TYPE);
    }

    private ServiceType(String alias, Table<ServiceTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceType(String alias, Table<ServiceTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceTypeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVICE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceTypeRecord> getPrimaryKey() {
        return Keys.SERVICE_TYPE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceTypeRecord>>asList(Keys.SERVICE_TYPE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServiceTypeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServiceTypeRecord, ?>>asList(Keys.SERVICE_TYPE__FK15766A848DEC63E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceType as(String alias) {
        return new ServiceType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceType rename(String name) {
        return new ServiceType(name, null);
    }
}
