/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.HoldingRecord;


/**
 * Холдинги, состоящие из одного или нескольких работодателей. Перенесено 
 * из схемы hhservice.hhemployer по задаче HH-38267
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Holding extends TableImpl<HoldingRecord> {

    private static final long serialVersionUID = -302532079;

    /**
     * The reference instance of <code>public.holding</code>
     */
    public static final Holding HOLDING = new Holding();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HoldingRecord> getRecordType() {
        return HoldingRecord.class;
    }

    /**
     * The column <code>public.holding.code</code>.
     */
    public final TableField<HoldingRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>public.holding.region_mapping</code>.
     */
    public final TableField<HoldingRecord, Boolean> REGION_MAPPING = createField("region_mapping", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.holding.department_mapping</code>.
     */
    public final TableField<HoldingRecord, Boolean> DEPARTMENT_MAPPING = createField("department_mapping", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.holding</code> table reference
     */
    public Holding() {
        this("holding", null);
    }

    /**
     * Create an aliased <code>public.holding</code> table reference
     */
    public Holding(String alias) {
        this(alias, HOLDING);
    }

    private Holding(String alias, Table<HoldingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Holding(String alias, Table<HoldingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Холдинги, состоящие из одного или нескольких работодателей. Перенесено из схемы hhservice.hhemployer по задаче HH-38267");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HoldingRecord> getPrimaryKey() {
        return Keys.HOLDING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HoldingRecord>> getKeys() {
        return Arrays.<UniqueKey<HoldingRecord>>asList(Keys.HOLDING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Holding as(String alias) {
        return new Holding(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Holding rename(String name) {
        return new Holding(name, null);
    }
}
