/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.VacancyBodyRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyBody extends TableImpl<VacancyBodyRecord> {

    private static final long serialVersionUID = 941219530;

    /**
     * The reference instance of <code>public.vacancy_body</code>
     */
    public static final VacancyBody VACANCY_BODY = new VacancyBody();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacancyBodyRecord> getRecordType() {
        return VacancyBodyRecord.class;
    }

    /**
     * The column <code>public.vacancy_body.vacancy_body_id</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> VACANCY_BODY_ID = createField("vacancy_body_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('vacancy_body_vacancy_body_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_body.company_name</code>.
     */
    public final TableField<VacancyBodyRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.vacancy_body.name</code>.
     */
    public final TableField<VacancyBodyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(220).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.vacancy_body.area_id</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> AREA_ID = createField("area_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vacancy_body.work_experience</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> WORK_EXPERIENCE = createField("work_experience", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_body.compensation_from</code>.
     */
    public final TableField<VacancyBodyRecord, Long> COMPENSATION_FROM = createField("compensation_from", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.vacancy_body.compensation_to</code>.
     */
    public final TableField<VacancyBodyRecord, Long> COMPENSATION_TO = createField("compensation_to", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.vacancy_body.response_letter_required</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> RESPONSE_LETTER_REQUIRED = createField("response_letter_required", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.vacancy_body.notify</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> NOTIFY = createField("notify", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.vacancy_body.talentlink_email</code>.
     */
    public final TableField<VacancyBodyRecord, String> TALENTLINK_EMAIL = createField("talentlink_email", org.jooq.impl.SQLDataType.VARCHAR.length(128).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.vacancy_body.company_url</code>.
     */
    public final TableField<VacancyBodyRecord, String> COMPANY_URL = createField("company_url", org.jooq.impl.SQLDataType.VARCHAR.length(511).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.vacancy_body.insider_id</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> INSIDER_ID = createField("insider_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vacancy_body.prof_areas</code>.
     */
    public final TableField<VacancyBodyRecord, String> PROF_AREAS = createField("prof_areas", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.vacancy_body.address_id</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> ADDRESS_ID = createField("address_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vacancy_body.show_metro_only</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> SHOW_METRO_ONLY = createField("show_metro_only", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.vacancy_body.usertest_id</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> USERTEST_ID = createField("usertest_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vacancy_body.vacancy_code</code>.
     */
    public final TableField<VacancyBodyRecord, String> VACANCY_CODE = createField("vacancy_code", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.vacancy_body.test_solution_required</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> TEST_SOLUTION_REQUIRED = createField("test_solution_required", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.vacancy_body.compensation_currency_code</code>.
     */
    public final TableField<VacancyBodyRecord, String> COMPENSATION_CURRENCY_CODE = createField("compensation_currency_code", org.jooq.impl.SQLDataType.CHAR.length(3), this, "");

    /**
     * The column <code>public.vacancy_body.work_schedule_type</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> WORK_SCHEDULE_TYPE = createField("work_schedule_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_body.employment_type</code>.
     */
    public final TableField<VacancyBodyRecord, Integer> EMPLOYMENT_TYPE = createField("employment_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_body.contact</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> CONTACT = createField("contact", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.vacancy_body.department_code</code>.
     */
    public final TableField<VacancyBodyRecord, String> DEPARTMENT_CODE = createField("department_code", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>public.vacancy_body.page_template</code>.
     */
    public final TableField<VacancyBodyRecord, String> PAGE_TEMPLATE = createField("page_template", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>public.vacancy_body.accept_handicapped</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> ACCEPT_HANDICAPPED = createField("accept_handicapped", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.vacancy_body.inbox_possibility</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> INBOX_POSSIBILITY = createField("inbox_possibility", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.vacancy_body.accept_fast_responses</code>.
     */
    public final TableField<VacancyBodyRecord, Boolean> ACCEPT_FAST_RESPONSES = createField("accept_fast_responses", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.vacancy_body</code> table reference
     */
    public VacancyBody() {
        this("vacancy_body", null);
    }

    /**
     * Create an aliased <code>public.vacancy_body</code> table reference
     */
    public VacancyBody(String alias) {
        this(alias, VACANCY_BODY);
    }

    private VacancyBody(String alias, Table<VacancyBodyRecord> aliased) {
        this(alias, aliased, null);
    }

    private VacancyBody(String alias, Table<VacancyBodyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VacancyBodyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VACANCY_BODY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VacancyBodyRecord> getPrimaryKey() {
        return Keys.VACANCY_BODY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VacancyBodyRecord>> getKeys() {
        return Arrays.<UniqueKey<VacancyBodyRecord>>asList(Keys.VACANCY_BODY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VacancyBodyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VacancyBodyRecord, ?>>asList(Keys.VACANCY_BODY__VACANCY_AREA_ID_FKEY, Keys.VACANCY_BODY__VACANCY_ADDRESS_FKEY, Keys.VACANCY_BODY__VACANCY_CURRENCY_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyBody as(String alias) {
        return new VacancyBody(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VacancyBody rename(String name) {
        return new VacancyBody(name, null);
    }
}
