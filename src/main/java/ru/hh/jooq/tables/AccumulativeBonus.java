/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.AccumulativeBonusRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccumulativeBonus extends TableImpl<AccumulativeBonusRecord> {

    private static final long serialVersionUID = -101657717;

    /**
     * The reference instance of <code>public.accumulative_bonus</code>
     */
    public static final AccumulativeBonus ACCUMULATIVE_BONUS = new AccumulativeBonus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccumulativeBonusRecord> getRecordType() {
        return AccumulativeBonusRecord.class;
    }

    /**
     * The column <code>public.accumulative_bonus.account_id</code>.
     */
    public final TableField<AccumulativeBonusRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.accumulative_bonus.amount</code>.
     */
    public final TableField<AccumulativeBonusRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>public.accumulative_bonus.year</code>.
     */
    public final TableField<AccumulativeBonusRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.accumulative_bonus</code> table reference
     */
    public AccumulativeBonus() {
        this("accumulative_bonus", null);
    }

    /**
     * Create an aliased <code>public.accumulative_bonus</code> table reference
     */
    public AccumulativeBonus(String alias) {
        this(alias, ACCUMULATIVE_BONUS);
    }

    private AccumulativeBonus(String alias, Table<AccumulativeBonusRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccumulativeBonus(String alias, Table<AccumulativeBonusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccumulativeBonusRecord> getPrimaryKey() {
        return Keys.ACCUMULATIVE_BONUS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccumulativeBonusRecord>> getKeys() {
        return Arrays.<UniqueKey<AccumulativeBonusRecord>>asList(Keys.ACCUMULATIVE_BONUS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AccumulativeBonusRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AccumulativeBonusRecord, ?>>asList(Keys.ACCUMULATIVE_BONUS__FKBA4091F5A760195F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccumulativeBonus as(String alias) {
        return new AccumulativeBonus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccumulativeBonus rename(String name) {
        return new AccumulativeBonus(name, null);
    }
}
