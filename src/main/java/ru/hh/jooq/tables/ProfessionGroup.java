/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ProfessionGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfessionGroup extends TableImpl<ProfessionGroupRecord> {

    private static final long serialVersionUID = -1621345709;

    /**
     * The reference instance of <code>public.profession_group</code>
     */
    public static final ProfessionGroup PROFESSION_GROUP = new ProfessionGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfessionGroupRecord> getRecordType() {
        return ProfessionGroupRecord.class;
    }

    /**
     * The column <code>public.profession_group.profession_group_id</code>.
     */
    public final TableField<ProfessionGroupRecord, Integer> PROFESSION_GROUP_ID = createField("profession_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('profession_group_profession_group_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.profession_group</code> table reference
     */
    public ProfessionGroup() {
        this("profession_group", null);
    }

    /**
     * Create an aliased <code>public.profession_group</code> table reference
     */
    public ProfessionGroup(String alias) {
        this(alias, PROFESSION_GROUP);
    }

    private ProfessionGroup(String alias, Table<ProfessionGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProfessionGroup(String alias, Table<ProfessionGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProfessionGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROFESSION_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProfessionGroupRecord> getPrimaryKey() {
        return Keys.PROFESSION_GROUP_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProfessionGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<ProfessionGroupRecord>>asList(Keys.PROFESSION_GROUP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfessionGroup as(String alias) {
        return new ProfessionGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProfessionGroup rename(String name) {
        return new ProfessionGroup(name, null);
    }
}
