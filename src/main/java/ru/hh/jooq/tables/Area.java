/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.AreaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Area extends TableImpl<AreaRecord> {

    private static final long serialVersionUID = 253497308;

    /**
     * The reference instance of <code>public.area</code>
     */
    public static final Area AREA = new Area();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AreaRecord> getRecordType() {
        return AreaRecord.class;
    }

    /**
     * The column <code>public.area.area_id</code>.
     */
    public final TableField<AreaRecord, Integer> AREA_ID = createField("area_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('area_area_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.area.parent_id</code>.
     */
    public final TableField<AreaRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.area.name</code>.
     */
    public final TableField<AreaRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.area.priority</code>.
     */
    public final TableField<AreaRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.area.alias</code>.
     */
    public final TableField<AreaRecord, Integer> ALIAS = createField("alias", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.area.country</code>.
     */
    public final TableField<AreaRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(2).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.area.vacancy_post_status</code>. unused
     */
    public final TableField<AreaRecord, Integer> VACANCY_POST_STATUS = createField("vacancy_post_status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "unused");

    /**
     * The column <code>public.area.geoip_location_id</code>.
     */
    public final TableField<AreaRecord, Integer> GEOIP_LOCATION_ID = createField("geoip_location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.area.code</code>.
     */
    public final TableField<AreaRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(3).defaultValue(org.jooq.impl.DSL.field("''::bpchar", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.area.type</code>.
     */
    public final TableField<AreaRecord, Short> TYPE = createField("type", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>public.area.deprecated</code>.
     */
    public final TableField<AreaRecord, Boolean> DEPRECATED = createField("deprecated", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.area.path</code>.
     */
    public final TableField<AreaRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.area.bonus_program_id</code>.
     */
    public final TableField<AreaRecord, Integer> BONUS_PROGRAM_ID = createField("bonus_program_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.area.central_premium</code>.
     */
    public final TableField<AreaRecord, Boolean> CENTRAL_PREMIUM = createField("central_premium", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.area.iso_code</code>.
     */
    public final TableField<AreaRecord, String> ISO_CODE = createField("iso_code", org.jooq.impl.SQLDataType.VARCHAR.length(2), this, "");

    /**
     * The column <code>public.area.time_zone</code>.
     */
    public final TableField<AreaRecord, String> TIME_ZONE = createField("time_zone", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "");

    /**
     * The column <code>public.area.weight</code>.
     */
    public final TableField<AreaRecord, Integer> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.area.aho_office_email</code>.
     */
    public final TableField<AreaRecord, String> AHO_OFFICE_EMAIL = createField("aho_office_email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.area.lat</code>.
     */
    public final TableField<AreaRecord, BigDecimal> LAT = createField("lat", org.jooq.impl.SQLDataType.NUMERIC.precision(8, 6), this, "");

    /**
     * The column <code>public.area.lng</code>.
     */
    public final TableField<AreaRecord, BigDecimal> LNG = createField("lng", org.jooq.impl.SQLDataType.NUMERIC.precision(9, 6), this, "");

    /**
     * Create a <code>public.area</code> table reference
     */
    public Area() {
        this("area", null);
    }

    /**
     * Create an aliased <code>public.area</code> table reference
     */
    public Area(String alias) {
        this(alias, AREA);
    }

    private Area(String alias, Table<AreaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Area(String alias, Table<AreaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AreaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AREA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AreaRecord> getPrimaryKey() {
        return Keys.AREA_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AreaRecord>> getKeys() {
        return Arrays.<UniqueKey<AreaRecord>>asList(Keys.AREA_PK, Keys.AREA_PATH_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AreaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AreaRecord, ?>>asList(Keys.AREA__AREA_BONUS_PROGRAM_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Area as(String alias) {
        return new Area(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Area rename(String name) {
        return new Area(name, null);
    }
}
