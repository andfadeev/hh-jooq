/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.SettingsItemRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SettingsItem extends TableImpl<SettingsItemRecord> {

    private static final long serialVersionUID = -753797830;

    /**
     * The reference instance of <code>public.settings_item</code>
     */
    public static final SettingsItem SETTINGS_ITEM = new SettingsItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SettingsItemRecord> getRecordType() {
        return SettingsItemRecord.class;
    }

    /**
     * The column <code>public.settings_item.key_name</code>.
     */
    public final TableField<SettingsItemRecord, String> KEY_NAME = createField("key_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.settings_item.value</code>.
     */
    public final TableField<SettingsItemRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.settings_item.description</code>.
     */
    public final TableField<SettingsItemRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.settings_item</code> table reference
     */
    public SettingsItem() {
        this("settings_item", null);
    }

    /**
     * Create an aliased <code>public.settings_item</code> table reference
     */
    public SettingsItem(String alias) {
        this(alias, SETTINGS_ITEM);
    }

    private SettingsItem(String alias, Table<SettingsItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private SettingsItem(String alias, Table<SettingsItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SettingsItemRecord> getPrimaryKey() {
        return Keys.SETTINGS_ITEM_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SettingsItemRecord>> getKeys() {
        return Arrays.<UniqueKey<SettingsItemRecord>>asList(Keys.SETTINGS_ITEM_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SettingsItem as(String alias) {
        return new SettingsItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SettingsItem rename(String name) {
        return new SettingsItem(name, null);
    }
}
