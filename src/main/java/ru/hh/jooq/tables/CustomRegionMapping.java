/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.CustomRegionMappingRecord;


/**
 * Группировка вакансий по территориям (кастомным, определяемым самим работодателем). 
 * Перенесено из схемы hhservice.hhemployer по задаче HH-38267
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomRegionMapping extends TableImpl<CustomRegionMappingRecord> {

    private static final long serialVersionUID = -1033721611;

    /**
     * The reference instance of <code>public.custom_region_mapping</code>
     */
    public static final CustomRegionMapping CUSTOM_REGION_MAPPING = new CustomRegionMapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomRegionMappingRecord> getRecordType() {
        return CustomRegionMappingRecord.class;
    }

    /**
     * The column <code>public.custom_region_mapping.id</code>.
     */
    public final TableField<CustomRegionMappingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('custom_region_mapping_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.custom_region_mapping.area_id</code>.
     */
    public final TableField<CustomRegionMappingRecord, Integer> AREA_ID = createField("area_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.custom_region_mapping.code</code>.
     */
    public final TableField<CustomRegionMappingRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>public.custom_region_mapping.holding_code</code>.
     */
    public final TableField<CustomRegionMappingRecord, String> HOLDING_CODE = createField("holding_code", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * Create a <code>public.custom_region_mapping</code> table reference
     */
    public CustomRegionMapping() {
        this("custom_region_mapping", null);
    }

    /**
     * Create an aliased <code>public.custom_region_mapping</code> table reference
     */
    public CustomRegionMapping(String alias) {
        this(alias, CUSTOM_REGION_MAPPING);
    }

    private CustomRegionMapping(String alias, Table<CustomRegionMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomRegionMapping(String alias, Table<CustomRegionMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Группировка вакансий по территориям (кастомным, определяемым самим работодателем). Перенесено из схемы hhservice.hhemployer по задаче HH-38267");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CustomRegionMappingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CUSTOM_REGION_MAPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomRegionMappingRecord> getPrimaryKey() {
        return Keys.CUSTOM_REGION_MAPPING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomRegionMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomRegionMappingRecord>>asList(Keys.CUSTOM_REGION_MAPPING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CustomRegionMappingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CustomRegionMappingRecord, ?>>asList(Keys.CUSTOM_REGION_MAPPING__CUSTOM_REGION_MAPPING_HOLDING_CODE_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomRegionMapping as(String alias) {
        return new CustomRegionMapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomRegionMapping rename(String name) {
        return new CustomRegionMapping(name, null);
    }
}
