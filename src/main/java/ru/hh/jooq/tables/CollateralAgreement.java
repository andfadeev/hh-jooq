/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.CollateralAgreementRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollateralAgreement extends TableImpl<CollateralAgreementRecord> {

    private static final long serialVersionUID = -90782363;

    /**
     * The reference instance of <code>public.collateral_agreement</code>
     */
    public static final CollateralAgreement COLLATERAL_AGREEMENT = new CollateralAgreement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CollateralAgreementRecord> getRecordType() {
        return CollateralAgreementRecord.class;
    }

    /**
     * The column <code>public.collateral_agreement.collateral_agreement_id</code>.
     */
    public final TableField<CollateralAgreementRecord, Integer> COLLATERAL_AGREEMENT_ID = createField("collateral_agreement_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('collateral_agreement_collateral_agreement_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.collateral_agreement.agreement_id</code>.
     */
    public final TableField<CollateralAgreementRecord, Integer> AGREEMENT_ID = createField("agreement_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.collateral_agreement.name</code>.
     */
    public final TableField<CollateralAgreementRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.collateral_agreement.comment</code>.
     */
    public final TableField<CollateralAgreementRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.collateral_agreement.creation_time</code>.
     */
    public final TableField<CollateralAgreementRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.collateral_agreement.vfs_file_id</code>.
     */
    public final TableField<CollateralAgreementRecord, Integer> VFS_FILE_ID = createField("vfs_file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.collateral_agreement.agreement_state_id</code>.
     */
    public final TableField<CollateralAgreementRecord, Integer> AGREEMENT_STATE_ID = createField("agreement_state_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.collateral_agreement.billing_file_id</code>.
     */
    public final TableField<CollateralAgreementRecord, Integer> BILLING_FILE_ID = createField("billing_file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.collateral_agreement</code> table reference
     */
    public CollateralAgreement() {
        this("collateral_agreement", null);
    }

    /**
     * Create an aliased <code>public.collateral_agreement</code> table reference
     */
    public CollateralAgreement(String alias) {
        this(alias, COLLATERAL_AGREEMENT);
    }

    private CollateralAgreement(String alias, Table<CollateralAgreementRecord> aliased) {
        this(alias, aliased, null);
    }

    private CollateralAgreement(String alias, Table<CollateralAgreementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CollateralAgreementRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COLLATERAL_AGREEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CollateralAgreementRecord> getPrimaryKey() {
        return Keys.COLLATERAL_AGREEMENT_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CollateralAgreementRecord>> getKeys() {
        return Arrays.<UniqueKey<CollateralAgreementRecord>>asList(Keys.COLLATERAL_AGREEMENT_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CollateralAgreementRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CollateralAgreementRecord, ?>>asList(Keys.COLLATERAL_AGREEMENT__COLLATERAL_AGREEMENT_IBFK_1, Keys.COLLATERAL_AGREEMENT__VFS_FILE_ID_FKEY, Keys.COLLATERAL_AGREEMENT__FKD46B5E024CFB060, Keys.COLLATERAL_AGREEMENT__COLLATERAL_AGREEMENT_FILE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollateralAgreement as(String alias) {
        return new CollateralAgreement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CollateralAgreement rename(String name) {
        return new CollateralAgreement(name, null);
    }
}
