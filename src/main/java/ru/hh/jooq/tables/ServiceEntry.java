/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceEntryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceEntry extends TableImpl<ServiceEntryRecord> {

    private static final long serialVersionUID = -290685602;

    /**
     * The reference instance of <code>public.service_entry</code>
     */
    public static final ServiceEntry SERVICE_ENTRY = new ServiceEntry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceEntryRecord> getRecordType() {
        return ServiceEntryRecord.class;
    }

    /**
     * The column <code>public.service_entry.code</code>.
     */
    public final TableField<ServiceEntryRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.service_entry.type</code>.
     */
    public final TableField<ServiceEntryRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.service_entry.service_entry_id</code>.
     */
    public final TableField<ServiceEntryRecord, Integer> SERVICE_ENTRY_ID = createField("service_entry_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('service_entry_service_entry_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_entry.legacy</code>.
     */
    public final TableField<ServiceEntryRecord, Boolean> LEGACY = createField("legacy", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_entry.discrete</code>.
     */
    public final TableField<ServiceEntryRecord, Boolean> DISCRETE = createField("discrete", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_entry.alone</code>.
     */
    public final TableField<ServiceEntryRecord, Boolean> ALONE = createField("alone", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_entry.digest_client_name</code>.
     */
    public final TableField<ServiceEntryRecord, String> DIGEST_CLIENT_NAME = createField("digest_client_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.service_entry.specific_legal_name</code>.
     */
    public final TableField<ServiceEntryRecord, Boolean> SPECIFIC_LEGAL_NAME = createField("specific_legal_name", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_entry.category_type</code>. HH-55532 service category type
     */
    public final TableField<ServiceEntryRecord, Integer> CATEGORY_TYPE = createField("category_type", org.jooq.impl.SQLDataType.INTEGER, this, "HH-55532 service category type");

    /**
     * The column <code>public.service_entry.priority</code>. HH-52256 priority to sort service entries
     */
    public final TableField<ServiceEntryRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "HH-52256 priority to sort service entries");

    /**
     * Create a <code>public.service_entry</code> table reference
     */
    public ServiceEntry() {
        this("service_entry", null);
    }

    /**
     * Create an aliased <code>public.service_entry</code> table reference
     */
    public ServiceEntry(String alias) {
        this(alias, SERVICE_ENTRY);
    }

    private ServiceEntry(String alias, Table<ServiceEntryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceEntry(String alias, Table<ServiceEntryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceEntryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVICE_ENTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceEntryRecord> getPrimaryKey() {
        return Keys.SERVICE_ENTRY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceEntryRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceEntryRecord>>asList(Keys.SERVICE_ENTRY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServiceEntryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServiceEntryRecord, ?>>asList(Keys.SERVICE_ENTRY__SERVICE_ENTRY_DIGEST_CLIENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceEntry as(String alias) {
        return new ServiceEntry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceEntry rename(String name) {
        return new ServiceEntry(name, null);
    }
}
