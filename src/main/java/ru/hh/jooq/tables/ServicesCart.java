/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServicesCartRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServicesCart extends TableImpl<ServicesCartRecord> {

    private static final long serialVersionUID = -123709973;

    /**
     * The reference instance of <code>public.services_cart</code>
     */
    public static final ServicesCart SERVICES_CART = new ServicesCart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServicesCartRecord> getRecordType() {
        return ServicesCartRecord.class;
    }

    /**
     * The column <code>public.services_cart.cart_id</code>.
     */
    public final TableField<ServicesCartRecord, Integer> CART_ID = createField("cart_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.services_cart.service_id</code>.
     */
    public final TableField<ServicesCartRecord, Integer> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.services_cart.index_</code>.
     */
    public final TableField<ServicesCartRecord, Integer> INDEX_ = createField("index_", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.services_cart</code> table reference
     */
    public ServicesCart() {
        this("services_cart", null);
    }

    /**
     * Create an aliased <code>public.services_cart</code> table reference
     */
    public ServicesCart(String alias) {
        this(alias, SERVICES_CART);
    }

    private ServicesCart(String alias, Table<ServicesCartRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServicesCart(String alias, Table<ServicesCartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServicesCartRecord>> getKeys() {
        return Arrays.<UniqueKey<ServicesCartRecord>>asList(Keys.SERVICES_CART_CART_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServicesCartRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServicesCartRecord, ?>>asList(Keys.SERVICES_CART__FKBA45AE612778C393, Keys.SERVICES_CART__FKBA45AE612CE46C5F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServicesCart as(String alias) {
        return new ServicesCart(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServicesCart rename(String name) {
        return new ServicesCart(name, null);
    }
}
