/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.VacancyBodySpecializationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyBodySpecialization extends TableImpl<VacancyBodySpecializationRecord> {

    private static final long serialVersionUID = -412643308;

    /**
     * The reference instance of <code>public.vacancy_body_specialization</code>
     */
    public static final VacancyBodySpecialization VACANCY_BODY_SPECIALIZATION = new VacancyBodySpecialization();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacancyBodySpecializationRecord> getRecordType() {
        return VacancyBodySpecializationRecord.class;
    }

    /**
     * The column <code>public.vacancy_body_specialization.vacancy_body_specialization_id</code>.
     */
    public final TableField<VacancyBodySpecializationRecord, Integer> VACANCY_BODY_SPECIALIZATION_ID = createField("vacancy_body_specialization_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('vacancy_body_specialization_vacancy_body_specialization_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_body_specialization.vacancy_body_id</code>.
     */
    public final TableField<VacancyBodySpecializationRecord, Integer> VACANCY_BODY_ID = createField("vacancy_body_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_body_specialization.specialization_id</code>.
     */
    public final TableField<VacancyBodySpecializationRecord, Integer> SPECIALIZATION_ID = createField("specialization_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.vacancy_body_specialization</code> table reference
     */
    public VacancyBodySpecialization() {
        this("vacancy_body_specialization", null);
    }

    /**
     * Create an aliased <code>public.vacancy_body_specialization</code> table reference
     */
    public VacancyBodySpecialization(String alias) {
        this(alias, VACANCY_BODY_SPECIALIZATION);
    }

    private VacancyBodySpecialization(String alias, Table<VacancyBodySpecializationRecord> aliased) {
        this(alias, aliased, null);
    }

    private VacancyBodySpecialization(String alias, Table<VacancyBodySpecializationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VacancyBodySpecializationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VACANCY_BODY_SPECIALIZATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VacancyBodySpecializationRecord> getPrimaryKey() {
        return Keys.VACANCY_SPECIALIZATION_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VacancyBodySpecializationRecord>> getKeys() {
        return Arrays.<UniqueKey<VacancyBodySpecializationRecord>>asList(Keys.VACANCY_SPECIALIZATION_PK, Keys.VACANCY_SPECIALIZATION_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VacancyBodySpecializationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VacancyBodySpecializationRecord, ?>>asList(Keys.VACANCY_BODY_SPECIALIZATION__VACANCY_BODY_SPECIALIZATION_VACANCY_BODY_ID_FK, Keys.VACANCY_BODY_SPECIALIZATION__VACANCY_SPECIALIZATION_SPECIALIZATION_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyBodySpecialization as(String alias) {
        return new VacancyBodySpecialization(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VacancyBodySpecialization rename(String name) {
        return new VacancyBodySpecialization(name, null);
    }
}
