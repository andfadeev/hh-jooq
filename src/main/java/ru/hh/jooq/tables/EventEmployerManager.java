/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EventEmployerManagerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventEmployerManager extends TableImpl<EventEmployerManagerRecord> {

    private static final long serialVersionUID = 1154266243;

    /**
     * The reference instance of <code>public.event_employer_manager</code>
     */
    public static final EventEmployerManager EVENT_EMPLOYER_MANAGER = new EventEmployerManager();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventEmployerManagerRecord> getRecordType() {
        return EventEmployerManagerRecord.class;
    }

    /**
     * The column <code>public.event_employer_manager.event_employer_manager_id</code>.
     */
    public final TableField<EventEmployerManagerRecord, Integer> EVENT_EMPLOYER_MANAGER_ID = createField("event_employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('event_employer_manager_event_employer_manager_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.event_employer_manager.event_id</code>.
     */
    public final TableField<EventEmployerManagerRecord, Integer> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.event_employer_manager.employer_manager_id</code>.
     */
    public final TableField<EventEmployerManagerRecord, Integer> EMPLOYER_MANAGER_ID = createField("employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.event_employer_manager</code> table reference
     */
    public EventEmployerManager() {
        this("event_employer_manager", null);
    }

    /**
     * Create an aliased <code>public.event_employer_manager</code> table reference
     */
    public EventEmployerManager(String alias) {
        this(alias, EVENT_EMPLOYER_MANAGER);
    }

    private EventEmployerManager(String alias, Table<EventEmployerManagerRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventEmployerManager(String alias, Table<EventEmployerManagerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventEmployerManagerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EVENT_EMPLOYER_MANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventEmployerManagerRecord> getPrimaryKey() {
        return Keys.EVENT_EMPLOYER_MANAGER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventEmployerManagerRecord>> getKeys() {
        return Arrays.<UniqueKey<EventEmployerManagerRecord>>asList(Keys.EVENT_EMPLOYER_MANAGER_PK, Keys.EVENT_EMPLOYER_MANAGER_EVENT_ID_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EventEmployerManagerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EventEmployerManagerRecord, ?>>asList(Keys.EVENT_EMPLOYER_MANAGER__EVENT_ID_FKEY, Keys.EVENT_EMPLOYER_MANAGER__EMPLOYER_MANAGER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventEmployerManager as(String alias) {
        return new EventEmployerManager(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventEmployerManager rename(String name) {
        return new EventEmployerManager(name, null);
    }
}
