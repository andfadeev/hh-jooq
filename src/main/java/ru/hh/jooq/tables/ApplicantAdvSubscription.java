/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ApplicantAdvSubscriptionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicantAdvSubscription extends TableImpl<ApplicantAdvSubscriptionRecord> {

    private static final long serialVersionUID = 154168848;

    /**
     * The reference instance of <code>public.applicant_adv_subscription</code>
     */
    public static final ApplicantAdvSubscription APPLICANT_ADV_SUBSCRIPTION = new ApplicantAdvSubscription();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicantAdvSubscriptionRecord> getRecordType() {
        return ApplicantAdvSubscriptionRecord.class;
    }

    /**
     * The column <code>public.applicant_adv_subscription.applicant_adv_subscription_id</code>.
     */
    public final TableField<ApplicantAdvSubscriptionRecord, Integer> APPLICANT_ADV_SUBSCRIPTION_ID = createField("applicant_adv_subscription_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('applicant_adv_subscription_applicant_adv_subscription_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.applicant_adv_subscription.creation_date</code>.
     */
    public final TableField<ApplicantAdvSubscriptionRecord, LocalDateTime> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.applicant_adv_subscription.criteria</code>.
     */
    public final TableField<ApplicantAdvSubscriptionRecord, Integer> CRITERIA = createField("criteria", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.applicant_adv_subscription.guid</code>.
     */
    public final TableField<ApplicantAdvSubscriptionRecord, String> GUID = createField("guid", org.jooq.impl.SQLDataType.VARCHAR.length(38).nullable(false), this, "");

    /**
     * The column <code>public.applicant_adv_subscription.user_id</code>.
     */
    public final TableField<ApplicantAdvSubscriptionRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.applicant_adv_subscription.retries_left</code>.
     */
    public final TableField<ApplicantAdvSubscriptionRecord, Integer> RETRIES_LEFT = createField("retries_left", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.applicant_adv_subscription.last_processed_date</code>.
     */
    public final TableField<ApplicantAdvSubscriptionRecord, LocalDateTime> LAST_PROCESSED_DATE = createField("last_processed_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>public.applicant_adv_subscription</code> table reference
     */
    public ApplicantAdvSubscription() {
        this("applicant_adv_subscription", null);
    }

    /**
     * Create an aliased <code>public.applicant_adv_subscription</code> table reference
     */
    public ApplicantAdvSubscription(String alias) {
        this(alias, APPLICANT_ADV_SUBSCRIPTION);
    }

    private ApplicantAdvSubscription(String alias, Table<ApplicantAdvSubscriptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApplicantAdvSubscription(String alias, Table<ApplicantAdvSubscriptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ApplicantAdvSubscriptionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_APPLICANT_ADV_SUBSCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApplicantAdvSubscriptionRecord> getPrimaryKey() {
        return Keys.APPLICANT_ADV_SUBSCRIPTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApplicantAdvSubscriptionRecord>> getKeys() {
        return Arrays.<UniqueKey<ApplicantAdvSubscriptionRecord>>asList(Keys.APPLICANT_ADV_SUBSCRIPTION_PKEY, Keys.APPLICANT_ADV_SUBSCRIPTION_USER_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ApplicantAdvSubscriptionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ApplicantAdvSubscriptionRecord, ?>>asList(Keys.APPLICANT_ADV_SUBSCRIPTION__FK8BED2CC68E001D91);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicantAdvSubscription as(String alias) {
        return new ApplicantAdvSubscription(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicantAdvSubscription rename(String name) {
        return new ApplicantAdvSubscription(name, null);
    }
}
