/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ClassificationValuesRecord;


/**
 * Список типов классификаций у работодателя или холдинга. Перенесено из схемы 
 * hhservice.hhemployer по задаче HH-38267
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClassificationValues extends TableImpl<ClassificationValuesRecord> {

    private static final long serialVersionUID = -1311787953;

    /**
     * The reference instance of <code>public.classification_values</code>
     */
    public static final ClassificationValues CLASSIFICATION_VALUES = new ClassificationValues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClassificationValuesRecord> getRecordType() {
        return ClassificationValuesRecord.class;
    }

    /**
     * The column <code>public.classification_values.holding_code</code>.
     */
    public final TableField<ClassificationValuesRecord, String> HOLDING_CODE = createField("holding_code", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>public.classification_values.employer_id</code>.
     */
    public final TableField<ClassificationValuesRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.classification_values.code</code>.
     */
    public final TableField<ClassificationValuesRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>public.classification_values.position</code>.
     */
    public final TableField<ClassificationValuesRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.classification_values.classification_values_id</code>.
     */
    public final TableField<ClassificationValuesRecord, Integer> CLASSIFICATION_VALUES_ID = createField("classification_values_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('classification_values_classification_values_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.classification_values.classification_name</code>.
     */
    public final TableField<ClassificationValuesRecord, String> CLASSIFICATION_NAME = createField("classification_name", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * Create a <code>public.classification_values</code> table reference
     */
    public ClassificationValues() {
        this("classification_values", null);
    }

    /**
     * Create an aliased <code>public.classification_values</code> table reference
     */
    public ClassificationValues(String alias) {
        this(alias, CLASSIFICATION_VALUES);
    }

    private ClassificationValues(String alias, Table<ClassificationValuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClassificationValues(String alias, Table<ClassificationValuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Список типов классификаций у работодателя или холдинга. Перенесено из схемы hhservice.hhemployer по задаче HH-38267");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClassificationValuesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLASSIFICATION_VALUES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClassificationValuesRecord> getPrimaryKey() {
        return Keys.CLASSIFICATION_VALUES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClassificationValuesRecord>> getKeys() {
        return Arrays.<UniqueKey<ClassificationValuesRecord>>asList(Keys.CLASSIFICATION_VALUES_HOLDING_CODE_KEY, Keys.CLASSIFICATION_VALUES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ClassificationValuesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClassificationValuesRecord, ?>>asList(Keys.CLASSIFICATION_VALUES__CLASSIFICATION_VALUES_EMPLOYER_ID_FKEY, Keys.CLASSIFICATION_VALUES__CLASSIFICATION_VALUES_HOLDING_CODE_FKEY, Keys.CLASSIFICATION_VALUES__CLASSIFICATION_VALUES_CLASSIFICATION_NAME_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassificationValues as(String alias) {
        return new ClassificationValues(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClassificationValues rename(String name) {
        return new ClassificationValues(name, null);
    }
}
