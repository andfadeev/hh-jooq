/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.VacancyFastHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyFastHistory extends TableImpl<VacancyFastHistoryRecord> {

    private static final long serialVersionUID = -1752452468;

    /**
     * The reference instance of <code>public.vacancy_fast_history</code>
     */
    public static final VacancyFastHistory VACANCY_FAST_HISTORY = new VacancyFastHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacancyFastHistoryRecord> getRecordType() {
        return VacancyFastHistoryRecord.class;
    }

    /**
     * The column <code>public.vacancy_fast_history.vacancy_fast_history_id</code>.
     */
    public final TableField<VacancyFastHistoryRecord, Integer> VACANCY_FAST_HISTORY_ID = createField("vacancy_fast_history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('vacancy_fast_history_vacancy_fast_history_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_fast_history.vacancy_id</code>.
     */
    public final TableField<VacancyFastHistoryRecord, Integer> VACANCY_ID = createField("vacancy_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_fast_history.creation_date</code>.
     */
    public final TableField<VacancyFastHistoryRecord, LocalDateTime> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_fast_history.activation_date</code>.
     */
    public final TableField<VacancyFastHistoryRecord, LocalDateTime> ACTIVATION_DATE = createField("activation_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_fast_history.activation_code</code>.
     */
    public final TableField<VacancyFastHistoryRecord, Integer> ACTIVATION_CODE = createField("activation_code", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_fast_history.activation_uid</code>.
     */
    public final TableField<VacancyFastHistoryRecord, String> ACTIVATION_UID = createField("activation_uid", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>public.vacancy_fast_history.site_id</code>.
     */
    public final TableField<VacancyFastHistoryRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vacancy_fast_history.lang</code>.
     */
    public final TableField<VacancyFastHistoryRecord, String> LANG = createField("lang", org.jooq.impl.SQLDataType.VARCHAR.length(2), this, "");

    /**
     * Create a <code>public.vacancy_fast_history</code> table reference
     */
    public VacancyFastHistory() {
        this("vacancy_fast_history", null);
    }

    /**
     * Create an aliased <code>public.vacancy_fast_history</code> table reference
     */
    public VacancyFastHistory(String alias) {
        this(alias, VACANCY_FAST_HISTORY);
    }

    private VacancyFastHistory(String alias, Table<VacancyFastHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private VacancyFastHistory(String alias, Table<VacancyFastHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VacancyFastHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VACANCY_FAST_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VacancyFastHistoryRecord> getPrimaryKey() {
        return Keys.VACANCY_FAST_HISTORY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VacancyFastHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<VacancyFastHistoryRecord>>asList(Keys.VACANCY_FAST_HISTORY_PKEY, Keys.VACANCY_FAST_HISTORY_ACTIVATION_CODE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VacancyFastHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VacancyFastHistoryRecord, ?>>asList(Keys.VACANCY_FAST_HISTORY__VACANCY_FAST_HISTORY_VACANCY_ID_FKEY, Keys.VACANCY_FAST_HISTORY__VACANCY_FAST_HISTORY_SITE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyFastHistory as(String alias) {
        return new VacancyFastHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VacancyFastHistory rename(String name) {
        return new VacancyFastHistory(name, null);
    }
}
