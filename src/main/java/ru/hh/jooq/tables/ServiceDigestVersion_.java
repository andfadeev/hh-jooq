/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceDigestVersion_Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceDigestVersion_ extends TableImpl<ServiceDigestVersion_Record> {

    private static final long serialVersionUID = -1291596940;

    /**
     * The reference instance of <code>public.service_digest_version_</code>
     */
    public static final ServiceDigestVersion_ SERVICE_DIGEST_VERSION_ = new ServiceDigestVersion_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceDigestVersion_Record> getRecordType() {
        return ServiceDigestVersion_Record.class;
    }

    /**
     * The column <code>public.service_digest_version_.id</code>.
     */
    public final TableField<ServiceDigestVersion_Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.service_digest_version_.confirmed</code>. unused
     */
    public final TableField<ServiceDigestVersion_Record, Boolean> CONFIRMED = createField("confirmed", org.jooq.impl.SQLDataType.BOOLEAN, this, "unused");

    /**
     * The column <code>public.service_digest_version_.date</code>.
     */
    public final TableField<ServiceDigestVersion_Record, LocalDateTime> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.service_digest_version_.optimistic_lock</code>.
     */
    public final TableField<ServiceDigestVersion_Record, Integer> OPTIMISTIC_LOCK = createField("optimistic_lock", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.service_digest_version_.reset_mode</code>.
     */
    public final TableField<ServiceDigestVersion_Record, LocalDateTime> RESET_MODE = createField("reset_mode", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.service_digest_version_.sent</code>. unused
     */
    public final TableField<ServiceDigestVersion_Record, LocalDateTime> SENT = createField("sent", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "unused");

    /**
     * The column <code>public.service_digest_version_.version</code>.
     */
    public final TableField<ServiceDigestVersion_Record, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.service_digest_version_</code> table reference
     */
    public ServiceDigestVersion_() {
        this("service_digest_version_", null);
    }

    /**
     * Create an aliased <code>public.service_digest_version_</code> table reference
     */
    public ServiceDigestVersion_(String alias) {
        this(alias, SERVICE_DIGEST_VERSION_);
    }

    private ServiceDigestVersion_(String alias, Table<ServiceDigestVersion_Record> aliased) {
        this(alias, aliased, null);
    }

    private ServiceDigestVersion_(String alias, Table<ServiceDigestVersion_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceDigestVersion_Record> getPrimaryKey() {
        return Keys.SERVICE_DIGEST_VERSION__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceDigestVersion_Record>> getKeys() {
        return Arrays.<UniqueKey<ServiceDigestVersion_Record>>asList(Keys.SERVICE_DIGEST_VERSION__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_ as(String alias) {
        return new ServiceDigestVersion_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceDigestVersion_ rename(String name) {
        return new ServiceDigestVersion_(name, null);
    }
}
