/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.BillRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bill extends TableImpl<BillRecord> {

    private static final long serialVersionUID = 1079883909;

    /**
     * The reference instance of <code>public.bill</code>
     */
    public static final Bill BILL = new Bill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BillRecord> getRecordType() {
        return BillRecord.class;
    }

    /**
     * The column <code>public.bill.bill_id</code>.
     */
    public final TableField<BillRecord, Integer> BILL_ID = createField("bill_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bill_bill_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bill.creation_time</code>.
     */
    public final TableField<BillRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.bill.payment_time</code>.
     */
    public final TableField<BillRecord, LocalDateTime> PAYMENT_TIME = createField("payment_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.bill.status</code>.
     */
    public final TableField<BillRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bill.price</code>.
     */
    public final TableField<BillRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.bill.payment_type</code>.
     */
    public final TableField<BillRecord, Integer> PAYMENT_TYPE = createField("payment_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bill.delivery_address</code>.
     */
    public final TableField<BillRecord, String> DELIVERY_ADDRESS = createField("delivery_address", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.bill.original</code>.
     */
    public final TableField<BillRecord, Boolean> ORIGINAL = createField("original", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.bill.payment_order_num</code>.
     */
    public final TableField<BillRecord, String> PAYMENT_ORDER_NUM = createField("payment_order_num", org.jooq.impl.SQLDataType.VARCHAR.length(128).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.bill.payment_order_date</code>.
     */
    public final TableField<BillRecord, LocalDateTime> PAYMENT_ORDER_DATE = createField("payment_order_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.bill.is_deleted</code>.
     */
    public final TableField<BillRecord, Boolean> IS_DELETED = createField("is_deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.approved_by_manager_id</code>.
     */
    public final TableField<BillRecord, Integer> APPROVED_BY_MANAGER_ID = createField("approved_by_manager_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bill.uid</code>.
     */
    public final TableField<BillRecord, String> UID = createField("uid", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.bill.visibility</code>.
     */
    public final TableField<BillRecord, Boolean> VISIBILITY = createField("visibility", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.offshore</code>.
     */
    public final TableField<BillRecord, Boolean> OFFSHORE = createField("offshore", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.moneta</code>.
     */
    public final TableField<BillRecord, Boolean> MONETA = createField("moneta", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.type</code>.
     */
    public final TableField<BillRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bill.paid_deed</code>.
     */
    public final TableField<BillRecord, Long> PAID_DEED = createField("paid_deed", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.bill.bill_subject</code>.
     */
    public final TableField<BillRecord, String> BILL_SUBJECT = createField("bill_subject", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.bill.bank_detail_id</code>.
     */
    public final TableField<BillRecord, Integer> BANK_DETAIL_ID = createField("bank_detail_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bill.need_original</code>.
     */
    public final TableField<BillRecord, Integer> NEED_ORIGINAL = createField("need_original", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bill.blocked_price</code>.
     */
    public final TableField<BillRecord, Long> BLOCKED_PRICE = createField("blocked_price", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.bill.payment_order_date_tmp</code>.
     */
    public final TableField<BillRecord, LocalDateTime> PAYMENT_ORDER_DATE_TMP = createField("payment_order_date_tmp", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.bill.extract_order_date</code>.
     */
    public final TableField<BillRecord, LocalDateTime> EXTRACT_ORDER_DATE = createField("extract_order_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.bill.invoice_create</code>.
     */
    public final TableField<BillRecord, Boolean> INVOICE_CREATE = createField("invoice_create", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.wait_for_pay</code>.
     */
    public final TableField<BillRecord, LocalDateTime> WAIT_FOR_PAY = createField("wait_for_pay", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.bill.account_id</code>.
     */
    public final TableField<BillRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.bill.recipient_id</code>.
     */
    public final TableField<BillRecord, Integer> RECIPIENT_ID = createField("recipient_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bill.partial</code>.
     */
    public final TableField<BillRecord, Boolean> PARTIAL = createField("partial", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.credit_line</code>.
     */
    public final TableField<BillRecord, Boolean> CREDIT_LINE = createField("credit_line", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.currency</code>.
     */
    public final TableField<BillRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>public.bill.initial</code>.
     */
    public final TableField<BillRecord, Boolean> INITIAL = createField("initial", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.bill.emoney_type</code>.
     */
    public final TableField<BillRecord, Integer> EMONEY_TYPE = createField("emoney_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bill.vat</code>. unused
     */
    public final TableField<BillRecord, Boolean> VAT = createField("vat", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "unused");

    /**
     * The column <code>public.bill.bank</code>.
     */
    public final TableField<BillRecord, Integer> BANK = createField("bank", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bill.assist_type</code>.
     */
    public final TableField<BillRecord, String> ASSIST_TYPE = createField("assist_type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.bill.cart_id</code>.
     */
    public final TableField<BillRecord, Integer> CART_ID = createField("cart_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bill.created_by_manager_id</code>.
     */
    public final TableField<BillRecord, Integer> CREATED_BY_MANAGER_ID = createField("created_by_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.bill.credit</code>.
     */
    public final TableField<BillRecord, Boolean> CREDIT = createField("credit", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.bill.merchant_id</code>.
     */
    public final TableField<BillRecord, String> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.bill.version_</code>.
     */
    public final TableField<BillRecord, LocalDateTime> VERSION_ = createField("version_", org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.bill.vat_value</code>.
     */
    public final TableField<BillRecord, Integer> VAT_VALUE = createField("vat_value", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.bill.responsible_manager_id</code>.
     */
    public final TableField<BillRecord, Integer> RESPONSIBLE_MANAGER_ID = createField("responsible_manager_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bill.price_rollback</code>.
     */
    public final TableField<BillRecord, Long> PRICE_ROLLBACK = createField("price_rollback", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.bill.billing_template_id</code>.
     */
    public final TableField<BillRecord, Integer> BILLING_TEMPLATE_ID = createField("billing_template_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.bill</code> table reference
     */
    public Bill() {
        this("bill", null);
    }

    /**
     * Create an aliased <code>public.bill</code> table reference
     */
    public Bill(String alias) {
        this(alias, BILL);
    }

    private Bill(String alias, Table<BillRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bill(String alias, Table<BillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BillRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BILL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BillRecord> getPrimaryKey() {
        return Keys.BILL_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BillRecord>> getKeys() {
        return Arrays.<UniqueKey<BillRecord>>asList(Keys.BILL_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BillRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BillRecord, ?>>asList(Keys.BILL__BILL_APPROVED_BY_MANAGER_ID_FKEY, Keys.BILL__BILL_ACCOUNT_ID_FKEY, Keys.BILL__BILL_RECIPIENT_ID_FK, Keys.BILL__BILL_CURRENCY, Keys.BILL__BILL_CART_FK, Keys.BILL__BILL_CREATED_BY_MANAGER_ID_FKEY, Keys.BILL__BILL_CREATED_BY_MANAGER_ID_FKEY1, Keys.BILL__BILL_RESPONSIBLE_MANAGER_ID_FKEY, Keys.BILL__BILL_BILLING_TEMPLATE_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bill as(String alias) {
        return new Bill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bill rename(String name) {
        return new Bill(name, null);
    }
}
