/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerLogoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerLogo extends TableImpl<EmployerLogoRecord> {

    private static final long serialVersionUID = 496742824;

    /**
     * The reference instance of <code>public.employer_logo</code>
     */
    public static final EmployerLogo EMPLOYER_LOGO = new EmployerLogo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerLogoRecord> getRecordType() {
        return EmployerLogoRecord.class;
    }

    /**
     * The column <code>public.employer_logo.employer_logo_id</code>.
     */
    public final TableField<EmployerLogoRecord, Integer> EMPLOYER_LOGO_ID = createField("employer_logo_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_logo_employer_logo_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_logo.employer_id</code>.
     */
    public final TableField<EmployerLogoRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_logo.employer_logo_type</code>.
     */
    public final TableField<EmployerLogoRecord, Integer> EMPLOYER_LOGO_TYPE = createField("employer_logo_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_logo.url</code>.
     */
    public final TableField<EmployerLogoRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.employer_logo.creation_request_time</code>.
     */
    public final TableField<EmployerLogoRecord, LocalDateTime> CREATION_REQUEST_TIME = createField("creation_request_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.employer_logo.failed</code>.
     */
    public final TableField<EmployerLogoRecord, Boolean> FAILED = createField("failed", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.employer_logo</code> table reference
     */
    public EmployerLogo() {
        this("employer_logo", null);
    }

    /**
     * Create an aliased <code>public.employer_logo</code> table reference
     */
    public EmployerLogo(String alias) {
        this(alias, EMPLOYER_LOGO);
    }

    private EmployerLogo(String alias, Table<EmployerLogoRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerLogo(String alias, Table<EmployerLogoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerLogoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_LOGO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerLogoRecord> getPrimaryKey() {
        return Keys.EMPLOYER_LOGO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerLogoRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerLogoRecord>>asList(Keys.EMPLOYER_LOGO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerLogoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerLogoRecord, ?>>asList(Keys.EMPLOYER_LOGO__EMPLOYER_LOGO_EMPLOYER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerLogo as(String alias) {
        return new EmployerLogo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerLogo rename(String name) {
        return new EmployerLogo(name, null);
    }
}
