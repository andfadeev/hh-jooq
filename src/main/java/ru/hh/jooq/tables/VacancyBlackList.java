/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.VacancyBlackListRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyBlackList extends TableImpl<VacancyBlackListRecord> {

    private static final long serialVersionUID = 2068272198;

    /**
     * The reference instance of <code>public.vacancy_black_list</code>
     */
    public static final VacancyBlackList VACANCY_BLACK_LIST = new VacancyBlackList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacancyBlackListRecord> getRecordType() {
        return VacancyBlackListRecord.class;
    }

    /**
     * The column <code>public.vacancy_black_list.vacancy_black_list_id</code>.
     */
    public final TableField<VacancyBlackListRecord, Integer> VACANCY_BLACK_LIST_ID = createField("vacancy_black_list_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('vacancy_black_list_vacancy_black_list_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_black_list.creation_date</code>.
     */
    public final TableField<VacancyBlackListRecord, LocalDateTime> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_black_list.user_id</code>.
     */
    public final TableField<VacancyBlackListRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_black_list.vacancy_id</code>.
     */
    public final TableField<VacancyBlackListRecord, Integer> VACANCY_ID = createField("vacancy_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.vacancy_black_list</code> table reference
     */
    public VacancyBlackList() {
        this("vacancy_black_list", null);
    }

    /**
     * Create an aliased <code>public.vacancy_black_list</code> table reference
     */
    public VacancyBlackList(String alias) {
        this(alias, VACANCY_BLACK_LIST);
    }

    private VacancyBlackList(String alias, Table<VacancyBlackListRecord> aliased) {
        this(alias, aliased, null);
    }

    private VacancyBlackList(String alias, Table<VacancyBlackListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VacancyBlackListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VACANCY_BLACK_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VacancyBlackListRecord> getPrimaryKey() {
        return Keys.VACANCY_BLACK_LIST_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VacancyBlackListRecord>> getKeys() {
        return Arrays.<UniqueKey<VacancyBlackListRecord>>asList(Keys.VACANCY_BLACK_LIST_PKEY, Keys.VACANCY_BLACK_LIST_USER_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VacancyBlackListRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VacancyBlackListRecord, ?>>asList(Keys.VACANCY_BLACK_LIST__FK3F500F228E001D91, Keys.VACANCY_BLACK_LIST__FK3F500F2234416E37);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyBlackList as(String alias) {
        return new VacancyBlackList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VacancyBlackList rename(String name) {
        return new VacancyBlackList(name, null);
    }
}
