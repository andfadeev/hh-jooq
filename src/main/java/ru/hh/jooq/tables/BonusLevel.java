/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.BonusLevelRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BonusLevel extends TableImpl<BonusLevelRecord> {

    private static final long serialVersionUID = -1761371928;

    /**
     * The reference instance of <code>public.bonus_level</code>
     */
    public static final BonusLevel BONUS_LEVEL = new BonusLevel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BonusLevelRecord> getRecordType() {
        return BonusLevelRecord.class;
    }

    /**
     * The column <code>public.bonus_level.id</code>.
     */
    public final TableField<BonusLevelRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bonus_level_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bonus_level.amount</code>.
     */
    public final TableField<BonusLevelRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>public.bonus_level.bonus_program_id</code>.
     */
    public final TableField<BonusLevelRecord, Integer> BONUS_PROGRAM_ID = createField("bonus_program_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.bonus_level.threshold</code>.
     */
    public final TableField<BonusLevelRecord, Boolean> THRESHOLD = createField("threshold", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>public.bonus_level</code> table reference
     */
    public BonusLevel() {
        this("bonus_level", null);
    }

    /**
     * Create an aliased <code>public.bonus_level</code> table reference
     */
    public BonusLevel(String alias) {
        this(alias, BONUS_LEVEL);
    }

    private BonusLevel(String alias, Table<BonusLevelRecord> aliased) {
        this(alias, aliased, null);
    }

    private BonusLevel(String alias, Table<BonusLevelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BonusLevelRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BONUS_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BonusLevelRecord> getPrimaryKey() {
        return Keys.BONUS_LEVEL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BonusLevelRecord>> getKeys() {
        return Arrays.<UniqueKey<BonusLevelRecord>>asList(Keys.BONUS_LEVEL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BonusLevelRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BonusLevelRecord, ?>>asList(Keys.BONUS_LEVEL__FK86604B64C07D314);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BonusLevel as(String alias) {
        return new BonusLevel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BonusLevel rename(String name) {
        return new BonusLevel(name, null);
    }
}
