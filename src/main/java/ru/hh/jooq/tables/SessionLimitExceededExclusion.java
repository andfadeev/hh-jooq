/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.SessionLimitExceededExclusionRecord;


/**
 * List of excluded employers from mailing about session limit exceeded
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionLimitExceededExclusion extends TableImpl<SessionLimitExceededExclusionRecord> {

    private static final long serialVersionUID = 16945141;

    /**
     * The reference instance of <code>public.session_limit_exceeded_exclusion</code>
     */
    public static final SessionLimitExceededExclusion SESSION_LIMIT_EXCEEDED_EXCLUSION = new SessionLimitExceededExclusion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionLimitExceededExclusionRecord> getRecordType() {
        return SessionLimitExceededExclusionRecord.class;
    }

    /**
     * The column <code>public.session_limit_exceeded_exclusion.employer_id</code>.
     */
    public final TableField<SessionLimitExceededExclusionRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.session_limit_exceeded_exclusion</code> table reference
     */
    public SessionLimitExceededExclusion() {
        this("session_limit_exceeded_exclusion", null);
    }

    /**
     * Create an aliased <code>public.session_limit_exceeded_exclusion</code> table reference
     */
    public SessionLimitExceededExclusion(String alias) {
        this(alias, SESSION_LIMIT_EXCEEDED_EXCLUSION);
    }

    private SessionLimitExceededExclusion(String alias, Table<SessionLimitExceededExclusionRecord> aliased) {
        this(alias, aliased, null);
    }

    private SessionLimitExceededExclusion(String alias, Table<SessionLimitExceededExclusionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "List of excluded employers from mailing about session limit exceeded");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SessionLimitExceededExclusionRecord> getPrimaryKey() {
        return Keys.SESSION_LIMIT_EXCEEDED_EXCLUSION_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SessionLimitExceededExclusionRecord>> getKeys() {
        return Arrays.<UniqueKey<SessionLimitExceededExclusionRecord>>asList(Keys.SESSION_LIMIT_EXCEEDED_EXCLUSION_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SessionLimitExceededExclusionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SessionLimitExceededExclusionRecord, ?>>asList(Keys.SESSION_LIMIT_EXCEEDED_EXCLUSION__SESSION_LIMIT_EXCEEDED_EXCLUSION_EMPLOYER_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionLimitExceededExclusion as(String alias) {
        return new SessionLimitExceededExclusion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionLimitExceededExclusion rename(String name) {
        return new SessionLimitExceededExclusion(name, null);
    }
}
