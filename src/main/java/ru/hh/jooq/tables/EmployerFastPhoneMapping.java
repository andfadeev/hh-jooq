/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerFastPhoneMappingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerFastPhoneMapping extends TableImpl<EmployerFastPhoneMappingRecord> {

    private static final long serialVersionUID = -2090679342;

    /**
     * The reference instance of <code>public.employer_fast_phone_mapping</code>
     */
    public static final EmployerFastPhoneMapping EMPLOYER_FAST_PHONE_MAPPING = new EmployerFastPhoneMapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerFastPhoneMappingRecord> getRecordType() {
        return EmployerFastPhoneMappingRecord.class;
    }

    /**
     * The column <code>public.employer_fast_phone_mapping.mapping_id</code>.
     */
    public final TableField<EmployerFastPhoneMappingRecord, Integer> MAPPING_ID = createField("mapping_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_fast_phone_mapping_mapping_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_fast_phone_mapping.employer_id</code>.
     */
    public final TableField<EmployerFastPhoneMappingRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_fast_phone_mapping.search_string</code>.
     */
    public final TableField<EmployerFastPhoneMappingRecord, String> SEARCH_STRING = createField("search_string", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * Create a <code>public.employer_fast_phone_mapping</code> table reference
     */
    public EmployerFastPhoneMapping() {
        this("employer_fast_phone_mapping", null);
    }

    /**
     * Create an aliased <code>public.employer_fast_phone_mapping</code> table reference
     */
    public EmployerFastPhoneMapping(String alias) {
        this(alias, EMPLOYER_FAST_PHONE_MAPPING);
    }

    private EmployerFastPhoneMapping(String alias, Table<EmployerFastPhoneMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerFastPhoneMapping(String alias, Table<EmployerFastPhoneMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerFastPhoneMappingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_FAST_PHONE_MAPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerFastPhoneMappingRecord> getPrimaryKey() {
        return Keys.EMPLOYER_FAST_PHONE_MAPPING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerFastPhoneMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerFastPhoneMappingRecord>>asList(Keys.EMPLOYER_FAST_PHONE_MAPPING_PKEY, Keys.EMPLOYER_FAST_PHONE_MAPPING_SEARCH_STRING_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerFastPhoneMappingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerFastPhoneMappingRecord, ?>>asList(Keys.EMPLOYER_FAST_PHONE_MAPPING__EMPLOYER_FAST_PHONE_MAPPING_EMPLOYER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerFastPhoneMapping as(String alias) {
        return new EmployerFastPhoneMapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerFastPhoneMapping rename(String name) {
        return new EmployerFastPhoneMapping(name, null);
    }
}
