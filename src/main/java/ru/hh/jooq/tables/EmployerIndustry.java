/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerIndustryRecord;


/**
 * many-to-many cross table between employer and industry
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerIndustry extends TableImpl<EmployerIndustryRecord> {

    private static final long serialVersionUID = -1428144973;

    /**
     * The reference instance of <code>public.employer_industry</code>
     */
    public static final EmployerIndustry EMPLOYER_INDUSTRY = new EmployerIndustry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerIndustryRecord> getRecordType() {
        return EmployerIndustryRecord.class;
    }

    /**
     * The column <code>public.employer_industry.employer_id</code>.
     */
    public final TableField<EmployerIndustryRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_industry.industry_id</code>.
     */
    public final TableField<EmployerIndustryRecord, Integer> INDUSTRY_ID = createField("industry_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.employer_industry</code> table reference
     */
    public EmployerIndustry() {
        this("employer_industry", null);
    }

    /**
     * Create an aliased <code>public.employer_industry</code> table reference
     */
    public EmployerIndustry(String alias) {
        this(alias, EMPLOYER_INDUSTRY);
    }

    private EmployerIndustry(String alias, Table<EmployerIndustryRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerIndustry(String alias, Table<EmployerIndustryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "many-to-many cross table between employer and industry");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerIndustryRecord> getPrimaryKey() {
        return Keys.EMPLOYER_INDUSTRY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerIndustryRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerIndustryRecord>>asList(Keys.EMPLOYER_INDUSTRY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerIndustryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerIndustryRecord, ?>>asList(Keys.EMPLOYER_INDUSTRY__EMPLOYER_INDUSTRY_EMPLOYER_FK, Keys.EMPLOYER_INDUSTRY__EMPLOYER_INDUSTRY_INDUSTRY_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerIndustry as(String alias) {
        return new EmployerIndustry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerIndustry rename(String name) {
        return new EmployerIndustry(name, null);
    }
}
