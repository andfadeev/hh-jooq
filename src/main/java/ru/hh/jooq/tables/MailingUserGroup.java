/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.MailingUserGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MailingUserGroup extends TableImpl<MailingUserGroupRecord> {

    private static final long serialVersionUID = -1536654927;

    /**
     * The reference instance of <code>public.mailing_user_group</code>
     */
    public static final MailingUserGroup MAILING_USER_GROUP = new MailingUserGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MailingUserGroupRecord> getRecordType() {
        return MailingUserGroupRecord.class;
    }

    /**
     * The column <code>public.mailing_user_group.mailing_user_group_id</code>.
     */
    public final TableField<MailingUserGroupRecord, Integer> MAILING_USER_GROUP_ID = createField("mailing_user_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mailing_user_group_mailing_user_group_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.mailing_user_group.descr</code>.
     */
    public final TableField<MailingUserGroupRecord, String> DESCR = createField("descr", org.jooq.impl.SQLDataType.VARCHAR.length(1024).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.mailing_user_group.name</code>.
     */
    public final TableField<MailingUserGroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.mailing_user_group.sql_string</code>.
     */
    public final TableField<MailingUserGroupRecord, String> SQL_STRING = createField("sql_string", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mailing_user_group.filter_id</code>.
     */
    public final TableField<MailingUserGroupRecord, Integer> FILTER_ID = createField("filter_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.mailing_user_group</code> table reference
     */
    public MailingUserGroup() {
        this("mailing_user_group", null);
    }

    /**
     * Create an aliased <code>public.mailing_user_group</code> table reference
     */
    public MailingUserGroup(String alias) {
        this(alias, MAILING_USER_GROUP);
    }

    private MailingUserGroup(String alias, Table<MailingUserGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private MailingUserGroup(String alias, Table<MailingUserGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MailingUserGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MAILING_USER_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MailingUserGroupRecord> getPrimaryKey() {
        return Keys.MAILING_USER_GROUP_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MailingUserGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<MailingUserGroupRecord>>asList(Keys.MAILING_USER_GROUP_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MailingUserGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MailingUserGroupRecord, ?>>asList(Keys.MAILING_USER_GROUP__FILTER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MailingUserGroup as(String alias) {
        return new MailingUserGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MailingUserGroup rename(String name) {
        return new MailingUserGroup(name, null);
    }
}
