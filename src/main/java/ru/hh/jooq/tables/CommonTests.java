/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.CommonTestsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonTests extends TableImpl<CommonTestsRecord> {

    private static final long serialVersionUID = 902777639;

    /**
     * The reference instance of <code>public.common_tests</code>
     */
    public static final CommonTests COMMON_TESTS = new CommonTests();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommonTestsRecord> getRecordType() {
        return CommonTestsRecord.class;
    }

    /**
     * The column <code>public.common_tests.common_test_id</code>.
     */
    public final TableField<CommonTestsRecord, Integer> COMMON_TEST_ID = createField("common_test_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('common_tests_common_test_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.common_tests.test_guid</code>.
     */
    public final TableField<CommonTestsRecord, String> TEST_GUID = createField("test_guid", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.common_tests.creation_date</code>.
     */
    public final TableField<CommonTestsRecord, LocalDateTime> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.common_tests.hidden</code>.
     */
    public final TableField<CommonTestsRecord, Boolean> HIDDEN = createField("hidden", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.common_tests.fully_scored</code>.
     */
    public final TableField<CommonTestsRecord, Boolean> FULLY_SCORED = createField("fully_scored", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.common_tests.modifiable</code>.
     */
    public final TableField<CommonTestsRecord, Boolean> MODIFIABLE = createField("modifiable", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.common_tests.overt</code>.
     */
    public final TableField<CommonTestsRecord, Boolean> OVERT = createField("overt", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.common_tests.copyable</code>.
     */
    public final TableField<CommonTestsRecord, Boolean> COPYABLE = createField("copyable", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.common_tests.author</code>.
     */
    public final TableField<CommonTestsRecord, String> AUTHOR = createField("author", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.common_tests.url</code>.
     */
    public final TableField<CommonTestsRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.common_tests.logo_url</code>. unused since HH-48147
     */
    public final TableField<CommonTestsRecord, String> LOGO_URL = createField("logo_url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "unused since HH-48147");

    /**
     * Create a <code>public.common_tests</code> table reference
     */
    public CommonTests() {
        this("common_tests", null);
    }

    /**
     * Create an aliased <code>public.common_tests</code> table reference
     */
    public CommonTests(String alias) {
        this(alias, COMMON_TESTS);
    }

    private CommonTests(String alias, Table<CommonTestsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CommonTests(String alias, Table<CommonTestsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CommonTestsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMMON_TESTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CommonTestsRecord> getPrimaryKey() {
        return Keys.COMMON_TESTS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CommonTestsRecord>> getKeys() {
        return Arrays.<UniqueKey<CommonTestsRecord>>asList(Keys.COMMON_TESTS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommonTests as(String alias) {
        return new CommonTests(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CommonTests rename(String name) {
        return new CommonTests(name, null);
    }
}
