/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.SkeysRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Skeys extends TableImpl<SkeysRecord> {

    private static final long serialVersionUID = -1437791977;

    /**
     * The reference instance of <code>public.skeys</code>
     */
    public static final Skeys SKEYS = new Skeys();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SkeysRecord> getRecordType() {
        return SkeysRecord.class;
    }

    /**
     * The column <code>public.skeys.skeys</code>.
     */
    public final TableField<SkeysRecord, String> SKEYS_ = createField("skeys", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.skeys</code> table reference
     */
    public Skeys() {
        this("skeys", null);
    }

    /**
     * Create an aliased <code>public.skeys</code> table reference
     */
    public Skeys(String alias) {
        this(alias, SKEYS);
    }

    private Skeys(String alias, Table<SkeysRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private Skeys(String alias, Table<SkeysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Skeys as(String alias) {
        return new Skeys(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Skeys rename(String name) {
        return new Skeys(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Skeys call(Object __1) {
        return new Skeys(getName(), null, new Field[] { DSL.val(__1) });
    }

    /**
     * Call this table-valued function
     */
    public Skeys call(Field<Object> __1) {
        return new Skeys(getName(), null, new Field[] { __1 });
    }
}
