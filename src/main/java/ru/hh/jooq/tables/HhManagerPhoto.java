/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.HhManagerPhotoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HhManagerPhoto extends TableImpl<HhManagerPhotoRecord> {

    private static final long serialVersionUID = 456542023;

    /**
     * The reference instance of <code>public.hh_manager_photo</code>
     */
    public static final HhManagerPhoto HH_MANAGER_PHOTO = new HhManagerPhoto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HhManagerPhotoRecord> getRecordType() {
        return HhManagerPhotoRecord.class;
    }

    /**
     * The column <code>public.hh_manager_photo.hh_manager_photo_id</code>.
     */
    public final TableField<HhManagerPhotoRecord, Integer> HH_MANAGER_PHOTO_ID = createField("hh_manager_photo_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('hh_manager_photo_hh_manager_photo_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.hh_manager_photo.photo_type</code>.
     */
    public final TableField<HhManagerPhotoRecord, Integer> PHOTO_TYPE = createField("photo_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.hh_manager_photo.photo_file_id</code>.
     */
    public final TableField<HhManagerPhotoRecord, Integer> PHOTO_FILE_ID = createField("photo_file_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.hh_manager_photo.user_id</code>.
     */
    public final TableField<HhManagerPhotoRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.hh_manager_photo</code> table reference
     */
    public HhManagerPhoto() {
        this("hh_manager_photo", null);
    }

    /**
     * Create an aliased <code>public.hh_manager_photo</code> table reference
     */
    public HhManagerPhoto(String alias) {
        this(alias, HH_MANAGER_PHOTO);
    }

    private HhManagerPhoto(String alias, Table<HhManagerPhotoRecord> aliased) {
        this(alias, aliased, null);
    }

    private HhManagerPhoto(String alias, Table<HhManagerPhotoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HhManagerPhotoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HH_MANAGER_PHOTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HhManagerPhotoRecord> getPrimaryKey() {
        return Keys.HH_MANAGER_PHOTO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HhManagerPhotoRecord>> getKeys() {
        return Arrays.<UniqueKey<HhManagerPhotoRecord>>asList(Keys.HH_MANAGER_PHOTO_PKEY, Keys.HH_MANAGER_PHOTO_UNQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<HhManagerPhotoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<HhManagerPhotoRecord, ?>>asList(Keys.HH_MANAGER_PHOTO__HH_MANAGER_PHOTO_FILE, Keys.HH_MANAGER_PHOTO__HH_MANAGER_PHOTO_USER_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HhManagerPhoto as(String alias) {
        return new HhManagerPhoto(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HhManagerPhoto rename(String name) {
        return new HhManagerPhoto(name, null);
    }
}
