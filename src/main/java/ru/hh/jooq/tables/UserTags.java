/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.UserTagsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTags extends TableImpl<UserTagsRecord> {

    private static final long serialVersionUID = -656218276;

    /**
     * The reference instance of <code>public.user_tags</code>
     */
    public static final UserTags USER_TAGS = new UserTags();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserTagsRecord> getRecordType() {
        return UserTagsRecord.class;
    }

    /**
     * The column <code>public.user_tags.id</code>.
     */
    public final TableField<UserTagsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('user_tags_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.user_tags.tag_name</code>.
     */
    public final TableField<UserTagsRecord, String> TAG_NAME = createField("tag_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>public.user_tags</code> table reference
     */
    public UserTags() {
        this("user_tags", null);
    }

    /**
     * Create an aliased <code>public.user_tags</code> table reference
     */
    public UserTags(String alias) {
        this(alias, USER_TAGS);
    }

    private UserTags(String alias, Table<UserTagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserTags(String alias, Table<UserTagsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserTagsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_TAGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserTagsRecord> getPrimaryKey() {
        return Keys.USER_TAGS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserTagsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserTagsRecord>>asList(Keys.USER_TAGS_PK, Keys.USER_TAGS_TAG_NAME_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTags as(String alias) {
        return new UserTags(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserTags rename(String name) {
        return new UserTags(name, null);
    }
}
