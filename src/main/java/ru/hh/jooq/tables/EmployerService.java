/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerServiceRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerService extends TableImpl<EmployerServiceRecord> {

    private static final long serialVersionUID = 1733542748;

    /**
     * The reference instance of <code>public.employer_service</code>
     */
    public static final EmployerService EMPLOYER_SERVICE = new EmployerService();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerServiceRecord> getRecordType() {
        return EmployerServiceRecord.class;
    }

    /**
     * The column <code>public.employer_service.employer_service_id</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> EMPLOYER_SERVICE_ID = createField("employer_service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_service_employer_service_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_service.service_id</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_service.creation_time</code>.
     */
    public final TableField<EmployerServiceRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.employer_service.price</code>.
     */
    public final TableField<EmployerServiceRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.employer_service.buyed_by_manager_id</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> BUYED_BY_MANAGER_ID = createField("buyed_by_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_service.number</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> NUMBER = createField("number", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_service.bill_id</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> BILL_ID = createField("bill_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.employer_service.is_credit</code>.
     */
    public final TableField<EmployerServiceRecord, Boolean> IS_CREDIT = createField("is_credit", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_service.activation_time</code>.
     */
    public final TableField<EmployerServiceRecord, LocalDateTime> ACTIVATION_TIME = createField("activation_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.employer_service.expiration_time</code>.
     */
    public final TableField<EmployerServiceRecord, LocalDateTime> EXPIRATION_TIME = createField("expiration_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.employer_service.payer_id</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> PAYER_ID = createField("payer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_service.order_id</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.employer_service.countable_expire_date</code>. unused
     */
    public final TableField<EmployerServiceRecord, LocalDate> COUNTABLE_EXPIRE_DATE = createField("countable_expire_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "unused");

    /**
     * The column <code>public.employer_service.paid_cost</code>.
     */
    public final TableField<EmployerServiceRecord, Long> PAID_COST = createField("paid_cost", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.employer_service.paid_cost_fix</code>.
     */
    public final TableField<EmployerServiceRecord, Long> PAID_COST_FIX = createField("paid_cost_fix", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.employer_service.account_id</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_service.currency</code>.
     */
    public final TableField<EmployerServiceRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>public.employer_service.welcome_pack</code>.
     */
    public final TableField<EmployerServiceRecord, Boolean> WELCOME_PACK = createField("welcome_pack", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_service.cancelation_waiting</code>.
     */
    public final TableField<EmployerServiceRecord, Boolean> CANCELATION_WAITING = createField("cancelation_waiting", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_service.digest_version</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> DIGEST_VERSION = createField("digest_version", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.employer_service.special_offer</code>.
     */
    public final TableField<EmployerServiceRecord, Boolean> SPECIAL_OFFER = createField("special_offer", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_service.prolongates</code>.
     */
    public final TableField<EmployerServiceRecord, Integer> PROLONGATES = createField("prolongates", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.employer_service.last_notification_date</code>.
     */
    public final TableField<EmployerServiceRecord, LocalDateTime> LAST_NOTIFICATION_DATE = createField("last_notification_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.employer_service.first_activation_time</code>.
     */
    public final TableField<EmployerServiceRecord, LocalDateTime> FIRST_ACTIVATION_TIME = createField("first_activation_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.employer_service.price_rollback</code>.
     */
    public final TableField<EmployerServiceRecord, Long> PRICE_ROLLBACK = createField("price_rollback", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.employer_service.paid_cost_rollback</code>.
     */
    public final TableField<EmployerServiceRecord, Long> PAID_COST_ROLLBACK = createField("paid_cost_rollback", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.employer_service.paid_cost_fix_rollback</code>.
     */
    public final TableField<EmployerServiceRecord, Long> PAID_COST_FIX_ROLLBACK = createField("paid_cost_fix_rollback", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.employer_service</code> table reference
     */
    public EmployerService() {
        this("employer_service", null);
    }

    /**
     * Create an aliased <code>public.employer_service</code> table reference
     */
    public EmployerService(String alias) {
        this(alias, EMPLOYER_SERVICE);
    }

    private EmployerService(String alias, Table<EmployerServiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerService(String alias, Table<EmployerServiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerServiceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_SERVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerServiceRecord> getPrimaryKey() {
        return Keys.EMPLOYER_SERVICE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerServiceRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerServiceRecord>>asList(Keys.EMPLOYER_SERVICE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerServiceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerServiceRecord, ?>>asList(Keys.EMPLOYER_SERVICE__EMPLOYER_SERVICE_SERVICE_ID_FKEY, Keys.EMPLOYER_SERVICE__EMPLOYER_SERVICE_IBFK_1, Keys.EMPLOYER_SERVICE__FK_PAYER_ID, Keys.EMPLOYER_SERVICE__FKD1AD6931A760195F, Keys.EMPLOYER_SERVICE__EMPLOYER_SERVICE_CURRENCY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerService as(String alias) {
        return new EmployerService(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerService rename(String name) {
        return new EmployerService(name, null);
    }
}
