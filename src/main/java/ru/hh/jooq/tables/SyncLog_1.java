/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.SyncLog_1Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SyncLog_1 extends TableImpl<SyncLog_1Record> {

    private static final long serialVersionUID = -859670076;

    /**
     * The reference instance of <code>public.sync_log_1</code>
     */
    public static final SyncLog_1 SYNC_LOG_1 = new SyncLog_1();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SyncLog_1Record> getRecordType() {
        return SyncLog_1Record.class;
    }

    /**
     * The column <code>public.sync_log_1.id</code>.
     */
    public final TableField<SyncLog_1Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('sync_log_1_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.sync_log_1.item_type</code>.
     */
    public final TableField<SyncLog_1Record, String> ITEM_TYPE = createField("item_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.sync_log_1.item_id</code>.
     */
    public final TableField<SyncLog_1Record, Long> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.sync_log_1.action</code>.
     */
    public final TableField<SyncLog_1Record, String> ACTION = createField("action", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>public.sync_log_1.ctime</code>.
     */
    public final TableField<SyncLog_1Record, LocalDateTime> CTIME = createField("ctime", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("(now())::timestamp without time zone", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>public.sync_log_1</code> table reference
     */
    public SyncLog_1() {
        this("sync_log_1", null);
    }

    /**
     * Create an aliased <code>public.sync_log_1</code> table reference
     */
    public SyncLog_1(String alias) {
        this(alias, SYNC_LOG_1);
    }

    private SyncLog_1(String alias, Table<SyncLog_1Record> aliased) {
        this(alias, aliased, null);
    }

    private SyncLog_1(String alias, Table<SyncLog_1Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SyncLog_1Record, Long> getIdentity() {
        return Keys.IDENTITY_SYNC_LOG_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SyncLog_1Record> getPrimaryKey() {
        return Keys.SYNC_LOG_1_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SyncLog_1Record>> getKeys() {
        return Arrays.<UniqueKey<SyncLog_1Record>>asList(Keys.SYNC_LOG_1_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SyncLog_1 as(String alias) {
        return new SyncLog_1(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SyncLog_1 rename(String name) {
        return new SyncLog_1(name, null);
    }
}
