/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ResumeByUserViewRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResumeByUserView extends TableImpl<ResumeByUserViewRecord> {

    private static final long serialVersionUID = -285562452;

    /**
     * The reference instance of <code>public.resume_by_user_view</code>
     */
    public static final ResumeByUserView RESUME_BY_USER_VIEW = new ResumeByUserView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResumeByUserViewRecord> getRecordType() {
        return ResumeByUserViewRecord.class;
    }

    /**
     * The column <code>public.resume_by_user_view.user_id</code>.
     */
    public final TableField<ResumeByUserViewRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.resume_by_user_view.count_</code>.
     */
    public final TableField<ResumeByUserViewRecord, Integer> COUNT_ = createField("count_", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.resume_by_user_view.view_date</code>.
     */
    public final TableField<ResumeByUserViewRecord, LocalDate> VIEW_DATE = createField("view_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false).defaultValue(org.jooq.impl.DSL.field("('now'::text)::date", org.jooq.impl.SQLDataType.LOCALDATE)), this, "");

    /**
     * Create a <code>public.resume_by_user_view</code> table reference
     */
    public ResumeByUserView() {
        this("resume_by_user_view", null);
    }

    /**
     * Create an aliased <code>public.resume_by_user_view</code> table reference
     */
    public ResumeByUserView(String alias) {
        this(alias, RESUME_BY_USER_VIEW);
    }

    private ResumeByUserView(String alias, Table<ResumeByUserViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResumeByUserView(String alias, Table<ResumeByUserViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ResumeByUserViewRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResumeByUserViewRecord, ?>>asList(Keys.RESUME_BY_USER_VIEW__RESUME_BY_USER_VIEW_USER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResumeByUserView as(String alias) {
        return new ResumeByUserView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResumeByUserView rename(String name) {
        return new ResumeByUserView(name, null);
    }
}
