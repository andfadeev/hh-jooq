/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.MailingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mailing extends TableImpl<MailingRecord> {

    private static final long serialVersionUID = 1596907670;

    /**
     * The reference instance of <code>public.mailing</code>
     */
    public static final Mailing MAILING = new Mailing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MailingRecord> getRecordType() {
        return MailingRecord.class;
    }

    /**
     * The column <code>public.mailing.mailing_id</code>.
     */
    public final TableField<MailingRecord, Integer> MAILING_ID = createField("mailing_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mailing_mailing_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.mailing.mailing_date</code>.
     */
    public final TableField<MailingRecord, LocalDateTime> MAILING_DATE = createField("mailing_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.mailing.name</code>.
     */
    public final TableField<MailingRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>public.mailing.mailing_user_group_id</code>.
     */
    public final TableField<MailingRecord, Integer> MAILING_USER_GROUP_ID = createField("mailing_user_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.mailing.creation_date</code>.
     */
    public final TableField<MailingRecord, LocalDateTime> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.mailing.title</code>.
     */
    public final TableField<MailingRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.mailing.exclude_user_group_id</code>.
     */
    public final TableField<MailingRecord, Integer> EXCLUDE_USER_GROUP_ID = createField("exclude_user_group_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mailing.mails_sent</code>.
     */
    public final TableField<MailingRecord, Integer> MAILS_SENT = createField("mails_sent", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.mailing.status</code>.
     */
    public final TableField<MailingRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>public.mailing.last_sent_hhid</code>.
     */
    public final TableField<MailingRecord, Integer> LAST_SENT_HHID = createField("last_sent_hhid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.mailing.email_from</code>.
     */
    public final TableField<MailingRecord, String> EMAIL_FROM = createField("email_from", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.mailing.force_send</code>.
     */
    public final TableField<MailingRecord, Boolean> FORCE_SEND = createField("force_send", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.mailing.temp_error_date</code>.
     */
    public final TableField<MailingRecord, LocalDateTime> TEMP_ERROR_DATE = createField("temp_error_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.mailing.with_name</code>.
     */
    public final TableField<MailingRecord, Boolean> WITH_NAME = createField("with_name", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.mailing</code> table reference
     */
    public Mailing() {
        this("mailing", null);
    }

    /**
     * Create an aliased <code>public.mailing</code> table reference
     */
    public Mailing(String alias) {
        this(alias, MAILING);
    }

    private Mailing(String alias, Table<MailingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Mailing(String alias, Table<MailingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MailingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MAILING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MailingRecord> getPrimaryKey() {
        return Keys.MAILING_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MailingRecord>> getKeys() {
        return Arrays.<UniqueKey<MailingRecord>>asList(Keys.MAILING_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MailingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MailingRecord, ?>>asList(Keys.MAILING__FK3187A2CBD88FCA37, Keys.MAILING__FK3187A2CBD88FCA38);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mailing as(String alias) {
        return new Mailing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Mailing rename(String name) {
        return new Mailing(name, null);
    }
}
