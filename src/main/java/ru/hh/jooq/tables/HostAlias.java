/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.HostAliasRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HostAlias extends TableImpl<HostAliasRecord> {

    private static final long serialVersionUID = 1614576231;

    /**
     * The reference instance of <code>public.host_alias</code>
     */
    public static final HostAlias HOST_ALIAS = new HostAlias();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HostAliasRecord> getRecordType() {
        return HostAliasRecord.class;
    }

    /**
     * The column <code>public.host_alias.domain</code>.
     */
    public final TableField<HostAliasRecord, String> DOMAIN = createField("domain", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>public.host_alias.platform</code>.
     */
    public final TableField<HostAliasRecord, Integer> PLATFORM = createField("platform", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.host_alias.area</code>.
     */
    public final TableField<HostAliasRecord, Integer> AREA = createField("area", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.host_alias</code> table reference
     */
    public HostAlias() {
        this("host_alias", null);
    }

    /**
     * Create an aliased <code>public.host_alias</code> table reference
     */
    public HostAlias(String alias) {
        this(alias, HOST_ALIAS);
    }

    private HostAlias(String alias, Table<HostAliasRecord> aliased) {
        this(alias, aliased, null);
    }

    private HostAlias(String alias, Table<HostAliasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HostAliasRecord> getPrimaryKey() {
        return Keys.HOST_ALIAS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HostAliasRecord>> getKeys() {
        return Arrays.<UniqueKey<HostAliasRecord>>asList(Keys.HOST_ALIAS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostAlias as(String alias) {
        return new HostAlias(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HostAlias rename(String name) {
        return new HostAlias(name, null);
    }
}
