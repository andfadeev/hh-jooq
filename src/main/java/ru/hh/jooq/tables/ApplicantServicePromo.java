/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ApplicantServicePromoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicantServicePromo extends TableImpl<ApplicantServicePromoRecord> {

    private static final long serialVersionUID = 1952568226;

    /**
     * The reference instance of <code>public.applicant_service_promo</code>
     */
    public static final ApplicantServicePromo APPLICANT_SERVICE_PROMO = new ApplicantServicePromo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicantServicePromoRecord> getRecordType() {
        return ApplicantServicePromoRecord.class;
    }

    /**
     * The column <code>public.applicant_service_promo.applicant_service_promo_id</code>.
     */
    public final TableField<ApplicantServicePromoRecord, Integer> APPLICANT_SERVICE_PROMO_ID = createField("applicant_service_promo_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('applicant_service_promo_applicant_service_promo_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.applicant_service_promo.promo_code</code>.
     */
    public final TableField<ApplicantServicePromoRecord, String> PROMO_CODE = createField("promo_code", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>public.applicant_service_promo.discount</code>.
     */
    public final TableField<ApplicantServicePromoRecord, BigDecimal> DISCOUNT = createField("discount", org.jooq.impl.SQLDataType.NUMERIC.precision(2, 2), this, "");

    /**
     * The column <code>public.applicant_service_promo.services</code>.
     */
    public final TableField<ApplicantServicePromoRecord, String[]> SERVICES = createField("services", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.applicant_service_promo.payment_options</code>.
     */
    public final TableField<ApplicantServicePromoRecord, String[]> PAYMENT_OPTIONS = createField("payment_options", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.applicant_service_promo.start_date</code>.
     */
    public final TableField<ApplicantServicePromoRecord, LocalDateTime> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_promo.end_date</code>.
     */
    public final TableField<ApplicantServicePromoRecord, LocalDateTime> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.applicant_service_promo</code> table reference
     */
    public ApplicantServicePromo() {
        this("applicant_service_promo", null);
    }

    /**
     * Create an aliased <code>public.applicant_service_promo</code> table reference
     */
    public ApplicantServicePromo(String alias) {
        this(alias, APPLICANT_SERVICE_PROMO);
    }

    private ApplicantServicePromo(String alias, Table<ApplicantServicePromoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApplicantServicePromo(String alias, Table<ApplicantServicePromoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ApplicantServicePromoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_APPLICANT_SERVICE_PROMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApplicantServicePromoRecord> getPrimaryKey() {
        return Keys.APPLICANT_SERVICE_PROMO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApplicantServicePromoRecord>> getKeys() {
        return Arrays.<UniqueKey<ApplicantServicePromoRecord>>asList(Keys.APPLICANT_SERVICE_PROMO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicantServicePromo as(String alias) {
        return new ApplicantServicePromo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicantServicePromo rename(String name) {
        return new ApplicantServicePromo(name, null);
    }
}
