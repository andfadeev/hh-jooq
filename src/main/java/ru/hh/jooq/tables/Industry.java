/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.IndustryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Industry extends TableImpl<IndustryRecord> {

    private static final long serialVersionUID = 1378810378;

    /**
     * The reference instance of <code>public.industry</code>
     */
    public static final Industry INDUSTRY = new Industry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IndustryRecord> getRecordType() {
        return IndustryRecord.class;
    }

    /**
     * The column <code>public.industry.industry_id</code>.
     */
    public final TableField<IndustryRecord, Integer> INDUSTRY_ID = createField("industry_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('industry_industry_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.industry.name</code>.
     */
    public final TableField<IndustryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.industry.hidden</code>.
     */
    public final TableField<IndustryRecord, Boolean> HIDDEN = createField("hidden", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.industry.parent_id</code>.
     */
    public final TableField<IndustryRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.industry.translit</code>.
     */
    public final TableField<IndustryRecord, String> TRANSLIT = createField("translit", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * Create a <code>public.industry</code> table reference
     */
    public Industry() {
        this("industry", null);
    }

    /**
     * Create an aliased <code>public.industry</code> table reference
     */
    public Industry(String alias) {
        this(alias, INDUSTRY);
    }

    private Industry(String alias, Table<IndustryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Industry(String alias, Table<IndustryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IndustryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INDUSTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IndustryRecord> getPrimaryKey() {
        return Keys.INDUSTRY_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IndustryRecord>> getKeys() {
        return Arrays.<UniqueKey<IndustryRecord>>asList(Keys.INDUSTRY_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<IndustryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<IndustryRecord, ?>>asList(Keys.INDUSTRY__INDUSTRY_FK_PARENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Industry as(String alias) {
        return new Industry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Industry rename(String name) {
        return new Industry(name, null);
    }
}
