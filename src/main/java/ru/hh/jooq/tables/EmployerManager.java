/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerManagerRecord;
import ru.hh.jooq.udt.records.PhoneEmbeddedRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerManager extends TableImpl<EmployerManagerRecord> {

    private static final long serialVersionUID = 488082826;

    /**
     * The reference instance of <code>public.employer_manager</code>
     */
    public static final EmployerManager EMPLOYER_MANAGER = new EmployerManager();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerManagerRecord> getRecordType() {
        return EmployerManagerRecord.class;
    }

    /**
     * The column <code>public.employer_manager.employer_manager_id</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> EMPLOYER_MANAGER_ID = createField("employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_manager_employer_manager_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.employer_id</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.user_id</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.type</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.html_editor</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> HTML_EDITOR = createField("html_editor", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.use_vacancy_template</code>.
     */
    public final TableField<EmployerManagerRecord, Boolean> USE_VACANCY_TEMPLATE = createField("use_vacancy_template", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_manager.send_sms</code>.
     */
    public final TableField<EmployerManagerRecord, Boolean> SEND_SMS = createField("send_sms", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_manager.vacancy_order</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> VACANCY_ORDER = createField("vacancy_order", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.decision_maker</code>.
     */
    public final TableField<EmployerManagerRecord, Boolean> DECISION_MAKER = createField("decision_maker", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_manager.m_position</code>.
     */
    public final TableField<EmployerManagerRecord, String> M_POSITION = createField("m_position", org.jooq.impl.SQLDataType.VARCHAR.length(128).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.employer_manager.use_resume_search_suggestion</code>.
     */
    public final TableField<EmployerManagerRecord, Boolean> USE_RESUME_SEARCH_SUGGESTION = createField("use_resume_search_suggestion", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_manager.special_note_1</code>.
     */
    public final TableField<EmployerManagerRecord, String> SPECIAL_NOTE_1 = createField("special_note_1", org.jooq.impl.SQLDataType.VARCHAR.length(1024).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.employer_manager.special_note_2</code>.
     */
    public final TableField<EmployerManagerRecord, String> SPECIAL_NOTE_2 = createField("special_note_2", org.jooq.impl.SQLDataType.VARCHAR.length(1024).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.employer_manager.stars_add_type</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> STARS_ADD_TYPE = createField("stars_add_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.stars_add_number</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> STARS_ADD_NUMBER = createField("stars_add_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager.open_resume_new_window</code>.
     */
    public final TableField<EmployerManagerRecord, Boolean> OPEN_RESUME_NEW_WINDOW = createField("open_resume_new_window", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_manager.vacancy_currency_code</code>.
     */
    public final TableField<EmployerManagerRecord, String> VACANCY_CURRENCY_CODE = createField("vacancy_currency_code", org.jooq.impl.SQLDataType.CHAR.length(3).nullable(false).defaultValue(org.jooq.impl.DSL.field("'USD'::bpchar", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>public.employer_manager.premoderator_id</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> PREMODERATOR_ID = createField("premoderator_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.employer_manager.anonymous_send_sms</code>.
     */
    public final TableField<EmployerManagerRecord, Boolean> ANONYMOUS_SEND_SMS = createField("anonymous_send_sms", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_manager.agency_contact_manager</code>.
     */
    public final TableField<EmployerManagerRecord, Boolean> AGENCY_CONTACT_MANAGER = createField("agency_contact_manager", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.employer_manager.salary_stat_user_type</code>.
     */
    public final TableField<EmployerManagerRecord, Integer> SALARY_STAT_USER_TYPE = createField("salary_stat_user_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.employer_manager.last_change_time</code>.
     */
    public final TableField<EmployerManagerRecord, LocalDateTime> LAST_CHANGE_TIME = createField("last_change_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.employer_manager.phone</code>.
     */
    public final TableField<EmployerManagerRecord, PhoneEmbeddedRecord> PHONE = createField("phone", ru.hh.jooq.udt.PhoneEmbedded.PHONE_EMBEDDED.getDataType(), this, "");

    /**
     * The column <code>public.employer_manager.additional_phone</code>.
     */
    public final TableField<EmployerManagerRecord, PhoneEmbeddedRecord> ADDITIONAL_PHONE = createField("additional_phone", ru.hh.jooq.udt.PhoneEmbedded.PHONE_EMBEDDED.getDataType(), this, "");

    /**
     * The column <code>public.employer_manager.implant_type</code>. 0 - unknown, 1 - staff member, 2 - freelancer, null - employer manager is not an implant
     */
    public final TableField<EmployerManagerRecord, Integer> IMPLANT_TYPE = createField("implant_type", org.jooq.impl.SQLDataType.INTEGER, this, "0 - unknown, 1 - staff member, 2 - freelancer, null - employer manager is not an implant");

    /**
     * Create a <code>public.employer_manager</code> table reference
     */
    public EmployerManager() {
        this("employer_manager", null);
    }

    /**
     * Create an aliased <code>public.employer_manager</code> table reference
     */
    public EmployerManager(String alias) {
        this(alias, EMPLOYER_MANAGER);
    }

    private EmployerManager(String alias, Table<EmployerManagerRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerManager(String alias, Table<EmployerManagerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerManagerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_MANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerManagerRecord> getPrimaryKey() {
        return Keys.EMPLOYER_MANAGER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerManagerRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerManagerRecord>>asList(Keys.EMPLOYER_MANAGER_PK, Keys.EMPLOYER_MANAGER_EMPLOYER_ID_UNIQ, Keys.EMPLOYER_MANAGER_USER_ID_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerManagerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerManagerRecord, ?>>asList(Keys.EMPLOYER_MANAGER__EMPLOYER_MANAGER_USER_ID, Keys.EMPLOYER_MANAGER__EMPLOYER_MANAGER_CURRENCY_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManager as(String alias) {
        return new EmployerManager(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerManager rename(String name) {
        return new EmployerManager(name, null);
    }
}
