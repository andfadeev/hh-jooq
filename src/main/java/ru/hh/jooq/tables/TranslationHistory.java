/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.TranslationHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TranslationHistory extends TableImpl<TranslationHistoryRecord> {

    private static final long serialVersionUID = -1513490238;

    /**
     * The reference instance of <code>public.translation_history</code>
     */
    public static final TranslationHistory TRANSLATION_HISTORY = new TranslationHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TranslationHistoryRecord> getRecordType() {
        return TranslationHistoryRecord.class;
    }

    /**
     * The column <code>public.translation_history.translation_history_id</code>.
     */
    public final TableField<TranslationHistoryRecord, Integer> TRANSLATION_HISTORY_ID = createField("translation_history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('translation_history_translation_history_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.translation_history.modification_time</code>.
     */
    public final TableField<TranslationHistoryRecord, LocalDateTime> MODIFICATION_TIME = createField("modification_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("clock_timestamp()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.translation_history.user_id</code>.
     */
    public final TableField<TranslationHistoryRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.translation_history.site_id</code>.
     */
    public final TableField<TranslationHistoryRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.translation_history.lang</code>.
     */
    public final TableField<TranslationHistoryRecord, String> LANG = createField("lang", org.jooq.impl.SQLDataType.VARCHAR.length(2).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.translation_history.name</code>.
     */
    public final TableField<TranslationHistoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.translation_history.old_value</code>.
     */
    public final TableField<TranslationHistoryRecord, String> OLD_VALUE = createField("old_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.translation_history.new_value</code>.
     */
    public final TableField<TranslationHistoryRecord, String> NEW_VALUE = createField("new_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.translation_history</code> table reference
     */
    public TranslationHistory() {
        this("translation_history", null);
    }

    /**
     * Create an aliased <code>public.translation_history</code> table reference
     */
    public TranslationHistory(String alias) {
        this(alias, TRANSLATION_HISTORY);
    }

    private TranslationHistory(String alias, Table<TranslationHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private TranslationHistory(String alias, Table<TranslationHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TranslationHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRANSLATION_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TranslationHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TranslationHistoryRecord, ?>>asList(Keys.TRANSLATION_HISTORY__USER_ID_FKEY, Keys.TRANSLATION_HISTORY__SITE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TranslationHistory as(String alias) {
        return new TranslationHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TranslationHistory rename(String name) {
        return new TranslationHistory(name, null);
    }
}
