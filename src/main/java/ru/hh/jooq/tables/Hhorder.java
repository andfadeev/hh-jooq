/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.HhorderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hhorder extends TableImpl<HhorderRecord> {

    private static final long serialVersionUID = -465810864;

    /**
     * The reference instance of <code>public.hhorder</code>
     */
    public static final Hhorder HHORDER = new Hhorder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HhorderRecord> getRecordType() {
        return HhorderRecord.class;
    }

    /**
     * The column <code>public.hhorder.order_id</code>.
     */
    public final TableField<HhorderRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('hhorder_order_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.hhorder.discount_rate</code>.
     */
    public final TableField<HhorderRecord, BigDecimal> DISCOUNT_RATE = createField("discount_rate", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 8).defaultValue(org.jooq.impl.DSL.field("NULL::numeric", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>public.hhorder.agreement_id</code>.
     */
    public final TableField<HhorderRecord, Integer> AGREEMENT_ID = createField("agreement_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hhorder.payer_id</code>.
     */
    public final TableField<HhorderRecord, Integer> PAYER_ID = createField("payer_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hhorder.recipient_id</code>.
     */
    public final TableField<HhorderRecord, Integer> RECIPIENT_ID = createField("recipient_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hhorder.cart_id</code>.
     */
    public final TableField<HhorderRecord, Integer> CART_ID = createField("cart_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hhorder.cost</code>.
     */
    public final TableField<HhorderRecord, Long> COST = createField("cost", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.hhorder.given_discount_rate</code>.
     */
    public final TableField<HhorderRecord, BigDecimal> GIVEN_DISCOUNT_RATE = createField("given_discount_rate", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 8).defaultValue(org.jooq.impl.DSL.field("NULL::numeric", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>public.hhorder.price</code>.
     */
    public final TableField<HhorderRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.hhorder.currency</code>.
     */
    public final TableField<HhorderRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CHAR.length(3), this, "");

    /**
     * The column <code>public.hhorder.approved</code>.
     */
    public final TableField<HhorderRecord, Boolean> APPROVED = createField("approved", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.hhorder.bill_amount</code>.
     */
    public final TableField<HhorderRecord, BigDecimal> BILL_AMOUNT = createField("bill_amount", org.jooq.impl.SQLDataType.NUMERIC.precision(15, 2), this, "");

    /**
     * The column <code>public.hhorder.use_agreement_money</code>.
     */
    public final TableField<HhorderRecord, Boolean> USE_AGREEMENT_MONEY = createField("use_agreement_money", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.hhorder.price_rollback</code>.
     */
    public final TableField<HhorderRecord, Long> PRICE_ROLLBACK = createField("price_rollback", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.hhorder.cost_rollback</code>.
     */
    public final TableField<HhorderRecord, Long> COST_ROLLBACK = createField("cost_rollback", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.hhorder</code> table reference
     */
    public Hhorder() {
        this("hhorder", null);
    }

    /**
     * Create an aliased <code>public.hhorder</code> table reference
     */
    public Hhorder(String alias) {
        this(alias, HHORDER);
    }

    private Hhorder(String alias, Table<HhorderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Hhorder(String alias, Table<HhorderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HhorderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HHORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HhorderRecord> getPrimaryKey() {
        return Keys.HHORDER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HhorderRecord>> getKeys() {
        return Arrays.<UniqueKey<HhorderRecord>>asList(Keys.HHORDER_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<HhorderRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<HhorderRecord, ?>>asList(Keys.HHORDER__HHORDER_AGREEMENT_FK, Keys.HHORDER__HHORDER_PAYER_FK, Keys.HHORDER__HHORDER_RECIPIENT_FK, Keys.HHORDER__HHORDER_CART_FK, Keys.HHORDER__HHORDER_CURRENCY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hhorder as(String alias) {
        return new Hhorder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hhorder rename(String name) {
        return new Hhorder(name, null);
    }
}
