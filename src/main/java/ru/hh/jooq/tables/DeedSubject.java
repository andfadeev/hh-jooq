/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.DeedSubjectRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeedSubject extends TableImpl<DeedSubjectRecord> {

    private static final long serialVersionUID = 524699465;

    /**
     * The reference instance of <code>public.deed_subject</code>
     */
    public static final DeedSubject DEED_SUBJECT = new DeedSubject();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeedSubjectRecord> getRecordType() {
        return DeedSubjectRecord.class;
    }

    /**
     * The column <code>public.deed_subject.deed_subject_id</code>.
     */
    public final TableField<DeedSubjectRecord, Integer> DEED_SUBJECT_ID = createField("deed_subject_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('deed_subject_deed_subject_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deed_subject.name</code>.
     */
    public final TableField<DeedSubjectRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(4095).nullable(false), this, "");

    /**
     * Create a <code>public.deed_subject</code> table reference
     */
    public DeedSubject() {
        this("deed_subject", null);
    }

    /**
     * Create an aliased <code>public.deed_subject</code> table reference
     */
    public DeedSubject(String alias) {
        this(alias, DEED_SUBJECT);
    }

    private DeedSubject(String alias, Table<DeedSubjectRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeedSubject(String alias, Table<DeedSubjectRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DeedSubjectRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEED_SUBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeedSubjectRecord> getPrimaryKey() {
        return Keys.DEED_SUBJECT_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeedSubjectRecord>> getKeys() {
        return Arrays.<UniqueKey<DeedSubjectRecord>>asList(Keys.DEED_SUBJECT_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeedSubject as(String alias) {
        return new DeedSubject(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeedSubject rename(String name) {
        return new DeedSubject(name, null);
    }
}
