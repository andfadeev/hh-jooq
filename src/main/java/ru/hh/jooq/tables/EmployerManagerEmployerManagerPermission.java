/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerManagerEmployerManagerPermissionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerManagerEmployerManagerPermission extends TableImpl<EmployerManagerEmployerManagerPermissionRecord> {

    private static final long serialVersionUID = 1642084352;

    /**
     * The reference instance of <code>public.employer_manager_employer_manager_permission</code>
     */
    public static final EmployerManagerEmployerManagerPermission EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION = new EmployerManagerEmployerManagerPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerManagerEmployerManagerPermissionRecord> getRecordType() {
        return EmployerManagerEmployerManagerPermissionRecord.class;
    }

    /**
     * The column <code>public.employer_manager_employer_manager_permission.permission_owner_employer_manager_id</code>.
     */
    public final TableField<EmployerManagerEmployerManagerPermissionRecord, Integer> PERMISSION_OWNER_EMPLOYER_MANAGER_ID = createField("permission_owner_employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_manager_employer_manager_permission.subject_owner_employer_manager_id</code>.
     */
    public final TableField<EmployerManagerEmployerManagerPermissionRecord, Integer> SUBJECT_OWNER_EMPLOYER_MANAGER_ID = createField("subject_owner_employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_manager_employer_manager_permission.subject_type</code>.
     */
    public final TableField<EmployerManagerEmployerManagerPermissionRecord, String> SUBJECT_TYPE = createField("subject_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.employer_manager_employer_manager_permission</code> table reference
     */
    public EmployerManagerEmployerManagerPermission() {
        this("employer_manager_employer_manager_permission", null);
    }

    /**
     * Create an aliased <code>public.employer_manager_employer_manager_permission</code> table reference
     */
    public EmployerManagerEmployerManagerPermission(String alias) {
        this(alias, EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION);
    }

    private EmployerManagerEmployerManagerPermission(String alias, Table<EmployerManagerEmployerManagerPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerManagerEmployerManagerPermission(String alias, Table<EmployerManagerEmployerManagerPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerManagerEmployerManagerPermissionRecord> getPrimaryKey() {
        return Keys.PERMISSION_OWNER_ID_PERMISSION_SUBJECT_ID_UNIQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerManagerEmployerManagerPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerManagerEmployerManagerPermissionRecord>>asList(Keys.PERMISSION_OWNER_ID_PERMISSION_SUBJECT_ID_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerManagerEmployerManagerPermissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerManagerEmployerManagerPermissionRecord, ?>>asList(Keys.EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION__PERMISSION_OWNER_EMPLOYER_MANAGER_ID_FKEY, Keys.EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION__SUBJECT_OWNER_EMPLOYER_MANAGER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManagerEmployerManagerPermission as(String alias) {
        return new EmployerManagerEmployerManagerPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerManagerEmployerManagerPermission rename(String name) {
        return new EmployerManagerEmployerManagerPermission(name, null);
    }
}
