/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.DeviceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Device extends TableImpl<DeviceRecord> {

    private static final long serialVersionUID = -1720305572;

    /**
     * The reference instance of <code>public.device</code>
     */
    public static final Device DEVICE = new Device();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeviceRecord> getRecordType() {
        return DeviceRecord.class;
    }

    /**
     * The column <code>public.device.device_id</code>.
     */
    public final TableField<DeviceRecord, Integer> DEVICE_ID = createField("device_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('device_device_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.device.subscription_id</code>.
     */
    public final TableField<DeviceRecord, Long> SUBSCRIPTION_ID = createField("subscription_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.device.device_token</code>.
     */
    public final TableField<DeviceRecord, String> DEVICE_TOKEN = createField("device_token", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.device.os_type</code>.
     */
    public final TableField<DeviceRecord, String> OS_TYPE = createField("os_type", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

    /**
     * The column <code>public.device.active</code>.
     */
    public final TableField<DeviceRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.device.last_visit_time</code>.
     */
    public final TableField<DeviceRecord, LocalDateTime> LAST_VISIT_TIME = createField("last_visit_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.device.registration_time</code>.
     */
    public final TableField<DeviceRecord, LocalDateTime> REGISTRATION_TIME = createField("registration_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.device.errors_qty</code>.
     */
    public final TableField<DeviceRecord, Integer> ERRORS_QTY = createField("errors_qty", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.device.disactivation_cause</code>.
     */
    public final TableField<DeviceRecord, String> DISACTIVATION_CAUSE = createField("disactivation_cause", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>public.device.device_mode</code>.
     */
    public final TableField<DeviceRecord, String> DEVICE_MODE = createField("device_mode", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.device.client_id</code>.
     */
    public final TableField<DeviceRecord, String> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>public.device.uuid</code>.
     */
    public final TableField<DeviceRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.device</code> table reference
     */
    public Device() {
        this("device", null);
    }

    /**
     * Create an aliased <code>public.device</code> table reference
     */
    public Device(String alias) {
        this(alias, DEVICE);
    }

    private Device(String alias, Table<DeviceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Device(String alias, Table<DeviceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DeviceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeviceRecord> getPrimaryKey() {
        return Keys.DEVICE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeviceRecord>> getKeys() {
        return Arrays.<UniqueKey<DeviceRecord>>asList(Keys.DEVICE_PKEY, Keys.UNIQUE_DEVICE_DEVICE_TOKEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Device as(String alias) {
        return new Device(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Device rename(String name) {
        return new Device(name, null);
    }
}
