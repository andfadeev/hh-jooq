/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ResumeTargetEmployerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResumeTargetEmployer extends TableImpl<ResumeTargetEmployerRecord> {

    private static final long serialVersionUID = 2094677411;

    /**
     * The reference instance of <code>public.resume_target_employer</code>
     */
    public static final ResumeTargetEmployer RESUME_TARGET_EMPLOYER = new ResumeTargetEmployer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResumeTargetEmployerRecord> getRecordType() {
        return ResumeTargetEmployerRecord.class;
    }

    /**
     * The column <code>public.resume_target_employer.resume_target_employer_id</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, Integer> RESUME_TARGET_EMPLOYER_ID = createField("resume_target_employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('resume_target_employer_resume_target_employer_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.resume_target_employer.employer_id</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resume_target_employer.resume_id</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, Integer> RESUME_ID = createField("resume_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resume_target_employer.activation_time</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, LocalDateTime> ACTIVATION_TIME = createField("activation_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.resume_target_employer.sms_count</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, Integer> SMS_COUNT = createField("sms_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.resume_target_employer.type</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resume_target_employer.activation_uid</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, String> ACTIVATION_UID = createField("activation_uid", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>public.resume_target_employer.site_id</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resume_target_employer.lang</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, String> LANG = createField("lang", org.jooq.impl.SQLDataType.VARCHAR.length(2), this, "");

    /**
     * The column <code>public.resume_target_employer.source</code>.
     */
    public final TableField<ResumeTargetEmployerRecord, Integer> SOURCE = createField("source", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("3", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.resume_target_employer</code> table reference
     */
    public ResumeTargetEmployer() {
        this("resume_target_employer", null);
    }

    /**
     * Create an aliased <code>public.resume_target_employer</code> table reference
     */
    public ResumeTargetEmployer(String alias) {
        this(alias, RESUME_TARGET_EMPLOYER);
    }

    private ResumeTargetEmployer(String alias, Table<ResumeTargetEmployerRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResumeTargetEmployer(String alias, Table<ResumeTargetEmployerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResumeTargetEmployerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESUME_TARGET_EMPLOYER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResumeTargetEmployerRecord> getPrimaryKey() {
        return Keys.RESUME_TARGET_EMPLOYER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResumeTargetEmployerRecord>> getKeys() {
        return Arrays.<UniqueKey<ResumeTargetEmployerRecord>>asList(Keys.RESUME_TARGET_EMPLOYER_PK, Keys.RESUME_TARGET_EMPLOYER_EMPLOYER_RESUME_UNQ_UNIQ, Keys.RESUME_TARGET_EMPLOYER_ACTIVATION_UID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ResumeTargetEmployerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResumeTargetEmployerRecord, ?>>asList(Keys.RESUME_TARGET_EMPLOYER__RESUME_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResumeTargetEmployer as(String alias) {
        return new ResumeTargetEmployer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResumeTargetEmployer rename(String name) {
        return new ResumeTargetEmployer(name, null);
    }
}
