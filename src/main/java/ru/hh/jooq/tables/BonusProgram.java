/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.BonusProgramRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BonusProgram extends TableImpl<BonusProgramRecord> {

    private static final long serialVersionUID = -1504090139;

    /**
     * The reference instance of <code>public.bonus_program</code>
     */
    public static final BonusProgram BONUS_PROGRAM = new BonusProgram();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BonusProgramRecord> getRecordType() {
        return BonusProgramRecord.class;
    }

    /**
     * The column <code>public.bonus_program.id</code>.
     */
    public final TableField<BonusProgramRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bonus_program_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bonus_program.name</code>.
     */
    public final TableField<BonusProgramRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.bonus_program</code> table reference
     */
    public BonusProgram() {
        this("bonus_program", null);
    }

    /**
     * Create an aliased <code>public.bonus_program</code> table reference
     */
    public BonusProgram(String alias) {
        this(alias, BONUS_PROGRAM);
    }

    private BonusProgram(String alias, Table<BonusProgramRecord> aliased) {
        this(alias, aliased, null);
    }

    private BonusProgram(String alias, Table<BonusProgramRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BonusProgramRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BONUS_PROGRAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BonusProgramRecord> getPrimaryKey() {
        return Keys.BONUS_PROGRAM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BonusProgramRecord>> getKeys() {
        return Arrays.<UniqueKey<BonusProgramRecord>>asList(Keys.BONUS_PROGRAM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BonusProgram as(String alias) {
        return new BonusProgram(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BonusProgram rename(String name) {
        return new BonusProgram(name, null);
    }
}
