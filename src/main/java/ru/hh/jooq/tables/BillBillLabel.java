/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.BillBillLabelRecord;


/**
 * Auxiliary table to store many-to-many association of bills and bill labels
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BillBillLabel extends TableImpl<BillBillLabelRecord> {

    private static final long serialVersionUID = -857845299;

    /**
     * The reference instance of <code>public.bill_bill_label</code>
     */
    public static final BillBillLabel BILL_BILL_LABEL = new BillBillLabel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BillBillLabelRecord> getRecordType() {
        return BillBillLabelRecord.class;
    }

    /**
     * The column <code>public.bill_bill_label.bill_id</code>.
     */
    public final TableField<BillBillLabelRecord, Integer> BILL_ID = createField("bill_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.bill_bill_label.bill_label_id</code>.
     */
    public final TableField<BillBillLabelRecord, Integer> BILL_LABEL_ID = createField("bill_label_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.bill_bill_label.price</code>.
     */
    public final TableField<BillBillLabelRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>public.bill_bill_label</code> table reference
     */
    public BillBillLabel() {
        this("bill_bill_label", null);
    }

    /**
     * Create an aliased <code>public.bill_bill_label</code> table reference
     */
    public BillBillLabel(String alias) {
        this(alias, BILL_BILL_LABEL);
    }

    private BillBillLabel(String alias, Table<BillBillLabelRecord> aliased) {
        this(alias, aliased, null);
    }

    private BillBillLabel(String alias, Table<BillBillLabelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Auxiliary table to store many-to-many association of bills and bill labels");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BillBillLabelRecord> getPrimaryKey() {
        return Keys.BILL_BILL_LABEL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BillBillLabelRecord>> getKeys() {
        return Arrays.<UniqueKey<BillBillLabelRecord>>asList(Keys.BILL_BILL_LABEL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BillBillLabelRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BillBillLabelRecord, ?>>asList(Keys.BILL_BILL_LABEL__BILL_BILL_LABEL_BILL_ID_FKEY, Keys.BILL_BILL_LABEL__BILL_BILL_LABEL_BILL_LABEL_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillBillLabel as(String alias) {
        return new BillBillLabel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BillBillLabel rename(String name) {
        return new BillBillLabel(name, null);
    }
}
