/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.DeedStateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeedState extends TableImpl<DeedStateRecord> {

    private static final long serialVersionUID = -534469241;

    /**
     * The reference instance of <code>public.deed_state</code>
     */
    public static final DeedState DEED_STATE = new DeedState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeedStateRecord> getRecordType() {
        return DeedStateRecord.class;
    }

    /**
     * The column <code>public.deed_state.deed_state_id</code>.
     */
    public final TableField<DeedStateRecord, Integer> DEED_STATE_ID = createField("deed_state_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('deed_state_deed_state_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deed_state.name</code>.
     */
    public final TableField<DeedStateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>public.deed_state</code> table reference
     */
    public DeedState() {
        this("deed_state", null);
    }

    /**
     * Create an aliased <code>public.deed_state</code> table reference
     */
    public DeedState(String alias) {
        this(alias, DEED_STATE);
    }

    private DeedState(String alias, Table<DeedStateRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeedState(String alias, Table<DeedStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DeedStateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEED_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeedStateRecord> getPrimaryKey() {
        return Keys.DEED_STATE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeedStateRecord>> getKeys() {
        return Arrays.<UniqueKey<DeedStateRecord>>asList(Keys.DEED_STATE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeedState as(String alias) {
        return new DeedState(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeedState rename(String name) {
        return new DeedState(name, null);
    }
}
