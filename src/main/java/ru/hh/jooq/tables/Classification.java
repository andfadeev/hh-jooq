/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ClassificationRecord;


/**
 * Типы классификации вакансий. Перенесено из схемы hhservice.hhemployer по 
 * задаче HH-38267
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Classification extends TableImpl<ClassificationRecord> {

    private static final long serialVersionUID = -2130786801;

    /**
     * The reference instance of <code>public.classification</code>
     */
    public static final Classification CLASSIFICATION = new Classification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClassificationRecord> getRecordType() {
        return ClassificationRecord.class;
    }

    /**
     * The column <code>public.classification.grouping_type</code>.
     */
    public final TableField<ClassificationRecord, String> GROUPING_TYPE = createField("grouping_type", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>public.classification.name</code>.
     */
    public final TableField<ClassificationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * Create a <code>public.classification</code> table reference
     */
    public Classification() {
        this("classification", null);
    }

    /**
     * Create an aliased <code>public.classification</code> table reference
     */
    public Classification(String alias) {
        this(alias, CLASSIFICATION);
    }

    private Classification(String alias, Table<ClassificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Classification(String alias, Table<ClassificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Типы классификации вакансий. Перенесено из схемы hhservice.hhemployer по задаче HH-38267");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClassificationRecord> getPrimaryKey() {
        return Keys.CLASSIFICATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClassificationRecord>> getKeys() {
        return Arrays.<UniqueKey<ClassificationRecord>>asList(Keys.CLASSIFICATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Classification as(String alias) {
        return new Classification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Classification rename(String name) {
        return new Classification(name, null);
    }
}
