/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.CpaInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CpaInfo extends TableImpl<CpaInfoRecord> {

    private static final long serialVersionUID = 872691603;

    /**
     * The reference instance of <code>public.cpa_info</code>
     */
    public static final CpaInfo CPA_INFO = new CpaInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CpaInfoRecord> getRecordType() {
        return CpaInfoRecord.class;
    }

    /**
     * The column <code>public.cpa_info.cpa_info_id</code>.
     */
    public final TableField<CpaInfoRecord, Integer> CPA_INFO_ID = createField("cpa_info_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('cpa_info_cpa_info_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.cpa_info.hhid</code>.
     */
    public final TableField<CpaInfoRecord, Long> HHID = createField("hhid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.cpa_info.creation_date</code>.
     */
    public final TableField<CpaInfoRecord, LocalDateTime> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.cpa_info.partner_name</code>.
     */
    public final TableField<CpaInfoRecord, String> PARTNER_NAME = createField("partner_name", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>public.cpa_info.partner_data</code>.
     */
    public final TableField<CpaInfoRecord, String> PARTNER_DATA = createField("partner_data", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>public.cpa_info.status</code>.
     */
    public final TableField<CpaInfoRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * Create a <code>public.cpa_info</code> table reference
     */
    public CpaInfo() {
        this("cpa_info", null);
    }

    /**
     * Create an aliased <code>public.cpa_info</code> table reference
     */
    public CpaInfo(String alias) {
        this(alias, CPA_INFO);
    }

    private CpaInfo(String alias, Table<CpaInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CpaInfo(String alias, Table<CpaInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CpaInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CPA_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CpaInfoRecord> getPrimaryKey() {
        return Keys.CPA_INFO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CpaInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CpaInfoRecord>>asList(Keys.CPA_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CpaInfo as(String alias) {
        return new CpaInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CpaInfo rename(String name) {
        return new CpaInfo(name, null);
    }
}
