/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.PeriodPriceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PeriodPrice extends TableImpl<PeriodPriceRecord> {

    private static final long serialVersionUID = -1077079968;

    /**
     * The reference instance of <code>public.period_price</code>
     */
    public static final PeriodPrice PERIOD_PRICE = new PeriodPrice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PeriodPriceRecord> getRecordType() {
        return PeriodPriceRecord.class;
    }

    /**
     * The column <code>public.period_price.period</code>.
     */
    public final TableField<PeriodPriceRecord, Integer> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.period_price.profarea_id</code>.
     */
    public final TableField<PeriodPriceRecord, Integer> PROFAREA_ID = createField("profarea_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.period_price.region_id</code>.
     */
    public final TableField<PeriodPriceRecord, Integer> REGION_ID = createField("region_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.period_price.price</code>.
     */
    public final TableField<PeriodPriceRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2), this, "");

    /**
     * The column <code>public.period_price.currency</code>.
     */
    public final TableField<PeriodPriceRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>public.period_price.type</code>.
     */
    public final TableField<PeriodPriceRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.period_price.user_id</code>.
     */
    public final TableField<PeriodPriceRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.period_price.update_time</code>.
     */
    public final TableField<PeriodPriceRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>public.period_price</code> table reference
     */
    public PeriodPrice() {
        this("period_price", null);
    }

    /**
     * Create an aliased <code>public.period_price</code> table reference
     */
    public PeriodPrice(String alias) {
        this(alias, PERIOD_PRICE);
    }

    private PeriodPrice(String alias, Table<PeriodPriceRecord> aliased) {
        this(alias, aliased, null);
    }

    private PeriodPrice(String alias, Table<PeriodPriceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PeriodPriceRecord> getPrimaryKey() {
        return Keys.PERIOD_PRICE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PeriodPriceRecord>> getKeys() {
        return Arrays.<UniqueKey<PeriodPriceRecord>>asList(Keys.PERIOD_PRICE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PeriodPriceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PeriodPriceRecord, ?>>asList(Keys.PERIOD_PRICE__FK11C6754BD4F7C5FD, Keys.PERIOD_PRICE__FK11C6754B95037F0E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PeriodPrice as(String alias) {
        return new PeriodPrice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PeriodPrice rename(String name) {
        return new PeriodPrice(name, null);
    }
}
