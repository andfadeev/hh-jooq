/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.UserImageRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserImage extends TableImpl<UserImageRecord> {

    private static final long serialVersionUID = 842979127;

    /**
     * The reference instance of <code>public.user_image</code>
     */
    public static final UserImage USER_IMAGE = new UserImage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserImageRecord> getRecordType() {
        return UserImageRecord.class;
    }

    /**
     * The column <code>public.user_image.user_image_id</code>.
     */
    public final TableField<UserImageRecord, Long> USER_IMAGE_ID = createField("user_image_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('user_image_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.user_image.creation_time</code>.
     */
    public final TableField<UserImageRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.user_image.original_url</code>.
     */
    public final TableField<UserImageRecord, String> ORIGINAL_URL = createField("original_url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.user_image.title</code>.
     */
    public final TableField<UserImageRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.user_image.type</code>.
     */
    public final TableField<UserImageRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_image.user_id</code>.
     */
    public final TableField<UserImageRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.user_image</code> table reference
     */
    public UserImage() {
        this("user_image", null);
    }

    /**
     * Create an aliased <code>public.user_image</code> table reference
     */
    public UserImage(String alias) {
        this(alias, USER_IMAGE);
    }

    private UserImage(String alias, Table<UserImageRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserImage(String alias, Table<UserImageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserImageRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_IMAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserImageRecord> getPrimaryKey() {
        return Keys.USER_IMAGE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserImageRecord>> getKeys() {
        return Arrays.<UniqueKey<UserImageRecord>>asList(Keys.USER_IMAGE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserImageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserImageRecord, ?>>asList(Keys.USER_IMAGE__FK_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserImage as(String alias) {
        return new UserImage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserImage rename(String name) {
        return new UserImage(name, null);
    }
}
