/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.TemplateFileRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TemplateFile extends TableImpl<TemplateFileRecord> {

    private static final long serialVersionUID = -1427358851;

    /**
     * The reference instance of <code>public.template_file</code>
     */
    public static final TemplateFile TEMPLATE_FILE = new TemplateFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TemplateFileRecord> getRecordType() {
        return TemplateFileRecord.class;
    }

    /**
     * The column <code>public.template_file.template_file_id</code>.
     */
    public final TableField<TemplateFileRecord, Integer> TEMPLATE_FILE_ID = createField("template_file_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('billing_file_portfolio_2703_billing_file_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.template_file.creation_time</code>.
     */
    public final TableField<TemplateFileRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.template_file.ext</code>.
     */
    public final TableField<TemplateFileRecord, String> EXT = createField("ext", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.template_file.content</code>.
     */
    public final TableField<TemplateFileRecord, byte[]> CONTENT = createField("content", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    /**
     * Create a <code>public.template_file</code> table reference
     */
    public TemplateFile() {
        this("template_file", null);
    }

    /**
     * Create an aliased <code>public.template_file</code> table reference
     */
    public TemplateFile(String alias) {
        this(alias, TEMPLATE_FILE);
    }

    private TemplateFile(String alias, Table<TemplateFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private TemplateFile(String alias, Table<TemplateFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TemplateFileRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TEMPLATE_FILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TemplateFileRecord> getPrimaryKey() {
        return Keys.BILLING_FILE_PORTFOLIO_2703_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TemplateFileRecord>> getKeys() {
        return Arrays.<UniqueKey<TemplateFileRecord>>asList(Keys.BILLING_FILE_PORTFOLIO_2703_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TemplateFile as(String alias) {
        return new TemplateFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TemplateFile rename(String name) {
        return new TemplateFile(name, null);
    }
}
