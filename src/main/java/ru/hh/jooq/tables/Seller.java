/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.SellerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Seller extends TableImpl<SellerRecord> {

    private static final long serialVersionUID = 452203628;

    /**
     * The reference instance of <code>public.seller</code>
     */
    public static final Seller SELLER = new Seller();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SellerRecord> getRecordType() {
        return SellerRecord.class;
    }

    /**
     * The column <code>public.seller.seller_id</code>.
     */
    public final TableField<SellerRecord, Integer> SELLER_ID = createField("seller_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('seller_seller_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.seller.seller_name</code>.
     */
    public final TableField<SellerRecord, String> SELLER_NAME = createField("seller_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.seller.seller_inn</code>.
     */
    public final TableField<SellerRecord, String> SELLER_INN = createField("seller_inn", org.jooq.impl.SQLDataType.VARCHAR.length(12).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.seller.seller_kpp</code>.
     */
    public final TableField<SellerRecord, String> SELLER_KPP = createField("seller_kpp", org.jooq.impl.SQLDataType.VARCHAR.length(9).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.seller.seller_rnn</code>.
     */
    public final TableField<SellerRecord, String> SELLER_RNN = createField("seller_rnn", org.jooq.impl.SQLDataType.VARCHAR.length(12).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.seller.bank_detail_id</code>.
     */
    public final TableField<SellerRecord, Integer> BANK_DETAIL_ID = createField("bank_detail_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.seller</code> table reference
     */
    public Seller() {
        this("seller", null);
    }

    /**
     * Create an aliased <code>public.seller</code> table reference
     */
    public Seller(String alias) {
        this(alias, SELLER);
    }

    private Seller(String alias, Table<SellerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Seller(String alias, Table<SellerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SellerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELLER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SellerRecord> getPrimaryKey() {
        return Keys.SELLER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SellerRecord>> getKeys() {
        return Arrays.<UniqueKey<SellerRecord>>asList(Keys.SELLER_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Seller as(String alias) {
        return new Seller(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Seller rename(String name) {
        return new Seller(name, null);
    }
}
