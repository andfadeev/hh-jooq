/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ScheduledScriptRecord;


/**
 * SQL scripts to be executed by ScheduledScriptExecutor crontab
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduledScript extends TableImpl<ScheduledScriptRecord> {

    private static final long serialVersionUID = 1231967857;

    /**
     * The reference instance of <code>public.scheduled_script</code>
     */
    public static final ScheduledScript SCHEDULED_SCRIPT = new ScheduledScript();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduledScriptRecord> getRecordType() {
        return ScheduledScriptRecord.class;
    }

    /**
     * The column <code>public.scheduled_script.scheduled_script_id</code>.
     */
    public final TableField<ScheduledScriptRecord, Integer> SCHEDULED_SCRIPT_ID = createField("scheduled_script_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('scheduled_script_scheduled_script_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.scheduled_script.script_path</code>.
     */
    public final TableField<ScheduledScriptRecord, String> SCRIPT_PATH = createField("script_path", org.jooq.impl.SQLDataType.VARCHAR.length(4000).nullable(false), this, "");

    /**
     * The column <code>public.scheduled_script.scheduled_at</code>.
     */
    public final TableField<ScheduledScriptRecord, LocalDateTime> SCHEDULED_AT = createField("scheduled_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.scheduled_script.was_executed</code>.
     */
    public final TableField<ScheduledScriptRecord, Boolean> WAS_EXECUTED = createField("was_executed", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.scheduled_script.errors</code>.
     */
    public final TableField<ScheduledScriptRecord, String> ERRORS = createField("errors", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.scheduled_script</code> table reference
     */
    public ScheduledScript() {
        this("scheduled_script", null);
    }

    /**
     * Create an aliased <code>public.scheduled_script</code> table reference
     */
    public ScheduledScript(String alias) {
        this(alias, SCHEDULED_SCRIPT);
    }

    private ScheduledScript(String alias, Table<ScheduledScriptRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScheduledScript(String alias, Table<ScheduledScriptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "SQL scripts to be executed by ScheduledScriptExecutor crontab");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ScheduledScriptRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SCHEDULED_SCRIPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScheduledScriptRecord> getPrimaryKey() {
        return Keys.SCHEDULED_SCRIPT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScheduledScriptRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduledScriptRecord>>asList(Keys.SCHEDULED_SCRIPT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduledScript as(String alias) {
        return new ScheduledScript(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduledScript rename(String name) {
        return new ScheduledScript(name, null);
    }
}
