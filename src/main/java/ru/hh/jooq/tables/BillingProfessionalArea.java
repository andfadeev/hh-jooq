/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.BillingProfessionalAreaRecord;


/**
 * Professional Areas supported by billing modules. Has to be synchronized 
 * with HH-side professional_area table
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BillingProfessionalArea extends TableImpl<BillingProfessionalAreaRecord> {

    private static final long serialVersionUID = -2008077123;

    /**
     * The reference instance of <code>public.billing_professional_area</code>
     */
    public static final BillingProfessionalArea BILLING_PROFESSIONAL_AREA = new BillingProfessionalArea();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BillingProfessionalAreaRecord> getRecordType() {
        return BillingProfessionalAreaRecord.class;
    }

    /**
     * The column <code>public.billing_professional_area.billing_professional_area_id</code>.
     */
    public final TableField<BillingProfessionalAreaRecord, Integer> BILLING_PROFESSIONAL_AREA_ID = createField("billing_professional_area_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.billing_professional_area.name</code>.
     */
    public final TableField<BillingProfessionalAreaRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.billing_professional_area.price_rate</code>.
     */
    public final TableField<BillingProfessionalAreaRecord, BigDecimal> PRICE_RATE = createField("price_rate", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 8).defaultValue(org.jooq.impl.DSL.field("NULL::numeric", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * Create a <code>public.billing_professional_area</code> table reference
     */
    public BillingProfessionalArea() {
        this("billing_professional_area", null);
    }

    /**
     * Create an aliased <code>public.billing_professional_area</code> table reference
     */
    public BillingProfessionalArea(String alias) {
        this(alias, BILLING_PROFESSIONAL_AREA);
    }

    private BillingProfessionalArea(String alias, Table<BillingProfessionalAreaRecord> aliased) {
        this(alias, aliased, null);
    }

    private BillingProfessionalArea(String alias, Table<BillingProfessionalAreaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Professional Areas supported by billing modules. Has to be synchronized with HH-side professional_area table");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BillingProfessionalAreaRecord> getPrimaryKey() {
        return Keys.BILLING_PROFESSIONAL_AREA_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BillingProfessionalAreaRecord>> getKeys() {
        return Arrays.<UniqueKey<BillingProfessionalAreaRecord>>asList(Keys.BILLING_PROFESSIONAL_AREA_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingProfessionalArea as(String alias) {
        return new BillingProfessionalArea(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BillingProfessionalArea rename(String name) {
        return new BillingProfessionalArea(name, null);
    }
}
