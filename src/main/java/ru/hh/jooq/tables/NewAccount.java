/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.NewAccountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewAccount extends TableImpl<NewAccountRecord> {

    private static final long serialVersionUID = -800822296;

    /**
     * The reference instance of <code>public.new_account</code>
     */
    public static final NewAccount NEW_ACCOUNT = new NewAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NewAccountRecord> getRecordType() {
        return NewAccountRecord.class;
    }

    /**
     * The column <code>public.new_account.id</code>.
     */
    public final TableField<NewAccountRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.new_account.reset_mode</code>. unused
     */
    public final TableField<NewAccountRecord, LocalDateTime> RESET_MODE = createField("reset_mode", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "unused");

    /**
     * The column <code>public.new_account.version</code>.
     */
    public final TableField<NewAccountRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.new_account.employer_msg_version</code>.
     */
    public final TableField<NewAccountRecord, Integer> EMPLOYER_MSG_VERSION = createField("employer_msg_version", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.new_account.employer_msg_hash</code>.
     */
    public final TableField<NewAccountRecord, String> EMPLOYER_MSG_HASH = createField("employer_msg_hash", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.new_account.stale</code>.
     */
    public final TableField<NewAccountRecord, Boolean> STALE = createField("stale", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.new_account.tax_number</code>. unused
     */
    public final TableField<NewAccountRecord, String> TAX_NUMBER = createField("tax_number", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "unused");

    /**
     * The column <code>public.new_account.paid</code>.
     */
    public final TableField<NewAccountRecord, Boolean> PAID = createField("paid", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.new_account.new_billing</code>.
     */
    public final TableField<NewAccountRecord, Boolean> NEW_BILLING = createField("new_billing", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.new_account.billing_employer_msg_version</code>.
     */
    public final TableField<NewAccountRecord, Integer> BILLING_EMPLOYER_MSG_VERSION = createField("billing_employer_msg_version", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.new_account.billing_employer_msg_version_time</code>.
     */
    public final TableField<NewAccountRecord, LocalDateTime> BILLING_EMPLOYER_MSG_VERSION_TIME = createField("billing_employer_msg_version_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.new_account.version_</code>.
     */
    public final TableField<NewAccountRecord, Integer> VERSION_ = createField("version_", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.new_account</code> table reference
     */
    public NewAccount() {
        this("new_account", null);
    }

    /**
     * Create an aliased <code>public.new_account</code> table reference
     */
    public NewAccount(String alias) {
        this(alias, NEW_ACCOUNT);
    }

    private NewAccount(String alias, Table<NewAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private NewAccount(String alias, Table<NewAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NewAccountRecord> getPrimaryKey() {
        return Keys.NEW_ACCOUNT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NewAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<NewAccountRecord>>asList(Keys.NEW_ACCOUNT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NewAccount as(String alias) {
        return new NewAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NewAccount rename(String name) {
        return new NewAccount(name, null);
    }
}
