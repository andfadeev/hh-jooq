/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.PageTemplatesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageTemplates extends TableImpl<PageTemplatesRecord> {

    private static final long serialVersionUID = 225648907;

    /**
     * The reference instance of <code>public.page_templates</code>
     */
    public static final PageTemplates PAGE_TEMPLATES = new PageTemplates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PageTemplatesRecord> getRecordType() {
        return PageTemplatesRecord.class;
    }

    /**
     * The column <code>public.page_templates.class</code>.
     */
    public final TableField<PageTemplatesRecord, String> CLASS = createField("class", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>public.page_templates.object</code>.
     */
    public final TableField<PageTemplatesRecord, String> OBJECT = createField("object", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>public.page_templates.type</code>.
     */
    public final TableField<PageTemplatesRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>public.page_templates.name</code>.
     */
    public final TableField<PageTemplatesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>public.page_templates.title</code>.
     */
    public final TableField<PageTemplatesRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>public.page_templates.url</code>.
     */
    public final TableField<PageTemplatesRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.page_templates</code> table reference
     */
    public PageTemplates() {
        this("page_templates", null);
    }

    /**
     * Create an aliased <code>public.page_templates</code> table reference
     */
    public PageTemplates(String alias) {
        this(alias, PAGE_TEMPLATES);
    }

    private PageTemplates(String alias, Table<PageTemplatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PageTemplates(String alias, Table<PageTemplatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PageTemplatesRecord> getPrimaryKey() {
        return Keys.PAGE_TEMPLATES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PageTemplatesRecord>> getKeys() {
        return Arrays.<UniqueKey<PageTemplatesRecord>>asList(Keys.PAGE_TEMPLATES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PageTemplates as(String alias) {
        return new PageTemplates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PageTemplates rename(String name) {
        return new PageTemplates(name, null);
    }
}
