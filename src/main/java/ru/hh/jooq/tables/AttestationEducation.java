/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.AttestationEducationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttestationEducation extends TableImpl<AttestationEducationRecord> {

    private static final long serialVersionUID = -363808863;

    /**
     * The reference instance of <code>public.attestation_education</code>
     */
    public static final AttestationEducation ATTESTATION_EDUCATION = new AttestationEducation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttestationEducationRecord> getRecordType() {
        return AttestationEducationRecord.class;
    }

    /**
     * The column <code>public.attestation_education.attestation_education_id</code>.
     */
    public final TableField<AttestationEducationRecord, Integer> ATTESTATION_EDUCATION_ID = createField("attestation_education_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('attestation_education_attestation_education_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.attestation_education.name</code>.
     */
    public final TableField<AttestationEducationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.attestation_education.organization</code>.
     */
    public final TableField<AttestationEducationRecord, String> ORGANIZATION = createField("organization", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.attestation_education.result</code>.
     */
    public final TableField<AttestationEducationRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.VARCHAR.length(128).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.attestation_education.end_date</code>.
     */
    public final TableField<AttestationEducationRecord, LocalDateTime> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.attestation_education.resume_id</code>.
     */
    public final TableField<AttestationEducationRecord, Integer> RESUME_ID = createField("resume_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.attestation_education.sort_order</code>.
     */
    public final TableField<AttestationEducationRecord, Integer> SORT_ORDER = createField("sort_order", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.attestation_education</code> table reference
     */
    public AttestationEducation() {
        this("attestation_education", null);
    }

    /**
     * Create an aliased <code>public.attestation_education</code> table reference
     */
    public AttestationEducation(String alias) {
        this(alias, ATTESTATION_EDUCATION);
    }

    private AttestationEducation(String alias, Table<AttestationEducationRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttestationEducation(String alias, Table<AttestationEducationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttestationEducationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ATTESTATION_EDUCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttestationEducationRecord> getPrimaryKey() {
        return Keys.ATTESTATION_EDUCATION_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttestationEducationRecord>> getKeys() {
        return Arrays.<UniqueKey<AttestationEducationRecord>>asList(Keys.ATTESTATION_EDUCATION_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AttestationEducationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AttestationEducationRecord, ?>>asList(Keys.ATTESTATION_EDUCATION__RESUME_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttestationEducation as(String alias) {
        return new AttestationEducation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttestationEducation rename(String name) {
        return new AttestationEducation(name, null);
    }
}
