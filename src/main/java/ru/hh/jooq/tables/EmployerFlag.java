/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerFlagRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerFlag extends TableImpl<EmployerFlagRecord> {

    private static final long serialVersionUID = -2097274615;

    /**
     * The reference instance of <code>public.employer_flag</code>
     */
    public static final EmployerFlag EMPLOYER_FLAG = new EmployerFlag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerFlagRecord> getRecordType() {
        return EmployerFlagRecord.class;
    }

    /**
     * The column <code>public.employer_flag.id</code>.
     */
    public final TableField<EmployerFlagRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_flag_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_flag.name</code>.
     */
    public final TableField<EmployerFlagRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>public.employer_flag.system_code</code>.
     */
    public final TableField<EmployerFlagRecord, String> SYSTEM_CODE = createField("system_code", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * Create a <code>public.employer_flag</code> table reference
     */
    public EmployerFlag() {
        this("employer_flag", null);
    }

    /**
     * Create an aliased <code>public.employer_flag</code> table reference
     */
    public EmployerFlag(String alias) {
        this(alias, EMPLOYER_FLAG);
    }

    private EmployerFlag(String alias, Table<EmployerFlagRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerFlag(String alias, Table<EmployerFlagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerFlagRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerFlagRecord> getPrimaryKey() {
        return Keys.EMPLOYER_FLAG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerFlagRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerFlagRecord>>asList(Keys.EMPLOYER_FLAG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerFlag as(String alias) {
        return new EmployerFlag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerFlag rename(String name) {
        return new EmployerFlag(name, null);
    }
}
