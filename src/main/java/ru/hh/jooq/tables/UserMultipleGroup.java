/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.UserMultipleGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMultipleGroup extends TableImpl<UserMultipleGroupRecord> {

    private static final long serialVersionUID = -258770727;

    /**
     * The reference instance of <code>public.user_multiple_group</code>
     */
    public static final UserMultipleGroup USER_MULTIPLE_GROUP = new UserMultipleGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserMultipleGroupRecord> getRecordType() {
        return UserMultipleGroupRecord.class;
    }

    /**
     * The column <code>public.user_multiple_group.user_multiple_group_id</code>.
     */
    public final TableField<UserMultipleGroupRecord, Integer> USER_MULTIPLE_GROUP_ID = createField("user_multiple_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('user_multiple_group_user_multiple_group_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.user_multiple_group.multiple_group_id</code>.
     */
    public final TableField<UserMultipleGroupRecord, Integer> MULTIPLE_GROUP_ID = createField("multiple_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.user_multiple_group.user_id</code>.
     */
    public final TableField<UserMultipleGroupRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.user_multiple_group</code> table reference
     */
    public UserMultipleGroup() {
        this("user_multiple_group", null);
    }

    /**
     * Create an aliased <code>public.user_multiple_group</code> table reference
     */
    public UserMultipleGroup(String alias) {
        this(alias, USER_MULTIPLE_GROUP);
    }

    private UserMultipleGroup(String alias, Table<UserMultipleGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserMultipleGroup(String alias, Table<UserMultipleGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserMultipleGroupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_MULTIPLE_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserMultipleGroupRecord> getPrimaryKey() {
        return Keys.USER_MULTIPLE_GROUP_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserMultipleGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<UserMultipleGroupRecord>>asList(Keys.USER_MULTIPLE_GROUP_PK, Keys.USER_MULTIPLE_GROUP_MULTIPLE_GROUP_ID_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserMultipleGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserMultipleGroupRecord, ?>>asList(Keys.USER_MULTIPLE_GROUP__USER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserMultipleGroup as(String alias) {
        return new UserMultipleGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserMultipleGroup rename(String name) {
        return new UserMultipleGroup(name, null);
    }
}
