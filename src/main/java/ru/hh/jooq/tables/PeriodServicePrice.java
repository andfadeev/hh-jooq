/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.PeriodServicePriceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PeriodServicePrice extends TableImpl<PeriodServicePriceRecord> {

    private static final long serialVersionUID = 701915631;

    /**
     * The reference instance of <code>public.period_service_price</code>
     */
    public static final PeriodServicePrice PERIOD_SERVICE_PRICE = new PeriodServicePrice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PeriodServicePriceRecord> getRecordType() {
        return PeriodServicePriceRecord.class;
    }

    /**
     * The column <code>public.period_service_price.seller_account_id</code>.
     */
    public final TableField<PeriodServicePriceRecord, Integer> SELLER_ACCOUNT_ID = createField("seller_account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.period_service_price.price</code>.
     */
    public final TableField<PeriodServicePriceRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.period_service_price.service_type</code>.
     */
    public final TableField<PeriodServicePriceRecord, String> SERVICE_TYPE = createField("service_type", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>public.period_service_price.rounding_each</code>. unused
     */
    public final TableField<PeriodServicePriceRecord, Boolean> ROUNDING_EACH = createField("rounding_each", org.jooq.impl.SQLDataType.BOOLEAN, this, "unused");

    /**
     * The column <code>public.period_service_price.rounding_mode</code>. unused
     */
    public final TableField<PeriodServicePriceRecord, Integer> ROUNDING_MODE = createField("rounding_mode", org.jooq.impl.SQLDataType.INTEGER, this, "unused");

    /**
     * The column <code>public.period_service_price.rounding_scale</code>. unused
     */
    public final TableField<PeriodServicePriceRecord, Integer> ROUNDING_SCALE = createField("rounding_scale", org.jooq.impl.SQLDataType.INTEGER, this, "unused");

    /**
     * Create a <code>public.period_service_price</code> table reference
     */
    public PeriodServicePrice() {
        this("period_service_price", null);
    }

    /**
     * Create an aliased <code>public.period_service_price</code> table reference
     */
    public PeriodServicePrice(String alias) {
        this(alias, PERIOD_SERVICE_PRICE);
    }

    private PeriodServicePrice(String alias, Table<PeriodServicePriceRecord> aliased) {
        this(alias, aliased, null);
    }

    private PeriodServicePrice(String alias, Table<PeriodServicePriceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PeriodServicePriceRecord> getPrimaryKey() {
        return Keys.PERIOD_SERVICE_PRICE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PeriodServicePriceRecord>> getKeys() {
        return Arrays.<UniqueKey<PeriodServicePriceRecord>>asList(Keys.PERIOD_SERVICE_PRICE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PeriodServicePrice as(String alias) {
        return new PeriodServicePrice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PeriodServicePrice rename(String name) {
        return new PeriodServicePrice(name, null);
    }
}
