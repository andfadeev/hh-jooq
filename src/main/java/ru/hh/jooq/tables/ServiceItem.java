/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceItemRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceItem extends TableImpl<ServiceItemRecord> {

    private static final long serialVersionUID = -261900053;

    /**
     * The reference instance of <code>public.service_item</code>
     */
    public static final ServiceItem SERVICE_ITEM = new ServiceItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceItemRecord> getRecordType() {
        return ServiceItemRecord.class;
    }

    /**
     * The column <code>public.service_item.service_id</code>.
     */
    public final TableField<ServiceItemRecord, Integer> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.service_item.code</code>.
     */
    public final TableField<ServiceItemRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.service_item.new_account_id</code>.
     */
    public final TableField<ServiceItemRecord, Integer> NEW_ACCOUNT_ID = createField("new_account_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.service_item.ticket_limited</code>.
     */
    public final TableField<ServiceItemRecord, Boolean> TICKET_LIMITED = createField("ticket_limited", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_item.order_</code>.
     */
    public final TableField<ServiceItemRecord, Integer> ORDER_ = createField("order_", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_item.max_ticket_uid</code>.
     */
    public final TableField<ServiceItemRecord, Integer> MAX_TICKET_UID = createField("max_ticket_uid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_item.region</code>.
     */
    public final TableField<ServiceItemRecord, Integer> REGION = createField("region", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.service_item.price_region_ids</code>.
     */
    public final TableField<ServiceItemRecord, String> PRICE_REGION_IDS = createField("price_region_ids", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.service_item</code> table reference
     */
    public ServiceItem() {
        this("service_item", null);
    }

    /**
     * Create an aliased <code>public.service_item</code> table reference
     */
    public ServiceItem(String alias) {
        this(alias, SERVICE_ITEM);
    }

    private ServiceItem(String alias, Table<ServiceItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceItem(String alias, Table<ServiceItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceItemRecord> getPrimaryKey() {
        return Keys.SERVICE_ITEM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceItemRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceItemRecord>>asList(Keys.SERVICE_ITEM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServiceItemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServiceItemRecord, ?>>asList(Keys.SERVICE_ITEM__FK1571565D8F18BAAE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceItem as(String alias) {
        return new ServiceItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceItem rename(String name) {
        return new ServiceItem(name, null);
    }
}
