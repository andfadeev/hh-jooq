/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.AreaNeighbourRecord;


/**
 * relation with inforamtion about distances (in meters &amp; seconds)  between 
 * neighbour cities HH-35715
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AreaNeighbour extends TableImpl<AreaNeighbourRecord> {

    private static final long serialVersionUID = -1942387859;

    /**
     * The reference instance of <code>public.area_neighbour</code>
     */
    public static final AreaNeighbour AREA_NEIGHBOUR = new AreaNeighbour();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AreaNeighbourRecord> getRecordType() {
        return AreaNeighbourRecord.class;
    }

    /**
     * The column <code>public.area_neighbour.area_neighbour_src_id</code>.
     */
    public final TableField<AreaNeighbourRecord, Integer> AREA_NEIGHBOUR_SRC_ID = createField("area_neighbour_src_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.area_neighbour.area_neighbour_trg_id</code>.
     */
    public final TableField<AreaNeighbourRecord, Integer> AREA_NEIGHBOUR_TRG_ID = createField("area_neighbour_trg_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.area_neighbour.distance</code>. field with distance between cities in meters
     */
    public final TableField<AreaNeighbourRecord, Integer> DISTANCE = createField("distance", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "field with distance between cities in meters");

    /**
     * The column <code>public.area_neighbour.time_distance</code>. field with time required for travelng between cities in seconds
     */
    public final TableField<AreaNeighbourRecord, Integer> TIME_DISTANCE = createField("time_distance", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "field with time required for travelng between cities in seconds");

    /**
     * The column <code>public.area_neighbour.disable</code>.
     */
    public final TableField<AreaNeighbourRecord, Boolean> DISABLE = createField("disable", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>public.area_neighbour</code> table reference
     */
    public AreaNeighbour() {
        this("area_neighbour", null);
    }

    /**
     * Create an aliased <code>public.area_neighbour</code> table reference
     */
    public AreaNeighbour(String alias) {
        this(alias, AREA_NEIGHBOUR);
    }

    private AreaNeighbour(String alias, Table<AreaNeighbourRecord> aliased) {
        this(alias, aliased, null);
    }

    private AreaNeighbour(String alias, Table<AreaNeighbourRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "relation with inforamtion about distances (in meters & seconds)  between neighbour cities HH-35715");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AreaNeighbourRecord> getPrimaryKey() {
        return Keys.AREA_NEIGHBOUR_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AreaNeighbourRecord>> getKeys() {
        return Arrays.<UniqueKey<AreaNeighbourRecord>>asList(Keys.AREA_NEIGHBOUR_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AreaNeighbourRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AreaNeighbourRecord, ?>>asList(Keys.AREA_NEIGHBOUR__AREA_NEIGHBOUR_AREA_NEIGHBOUR_SRC_ID_FKEY, Keys.AREA_NEIGHBOUR__AREA_NEIGHBOUR_AREA_NEIGHBOUR_TRG_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AreaNeighbour as(String alias) {
        return new AreaNeighbour(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AreaNeighbour rename(String name) {
        return new AreaNeighbour(name, null);
    }
}
