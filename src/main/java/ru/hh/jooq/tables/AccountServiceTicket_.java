/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.AccountServiceTicket_Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountServiceTicket_ extends TableImpl<AccountServiceTicket_Record> {

    private static final long serialVersionUID = 258765980;

    /**
     * The reference instance of <code>public.account_service_ticket_</code>
     */
    public static final AccountServiceTicket_ ACCOUNT_SERVICE_TICKET_ = new AccountServiceTicket_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountServiceTicket_Record> getRecordType() {
        return AccountServiceTicket_Record.class;
    }

    /**
     * The column <code>public.account_service_ticket_.uid</code>.
     */
    public final TableField<AccountServiceTicket_Record, Long> UID = createField("uid", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('account_service_ticket__uid_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.account_service_ticket_.bonused</code>.
     */
    public final TableField<AccountServiceTicket_Record, Boolean> BONUSED = createField("bonused", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.account_service_ticket_.state</code>.
     */
    public final TableField<AccountServiceTicket_Record, Short> STATE = createField("state", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.account_service_ticket_.version_</code>.
     */
    public final TableField<AccountServiceTicket_Record, Integer> VERSION_ = createField("version_", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.account_service_ticket_.account_id</code>.
     */
    public final TableField<AccountServiceTicket_Record, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.account_service_ticket_.account_service_package_entry_id</code>.
     */
    public final TableField<AccountServiceTicket_Record, Integer> ACCOUNT_SERVICE_PACKAGE_ENTRY_ID = createField("account_service_package_entry_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.account_service_ticket_.tmp_state</code>. unused
     */
    public final TableField<AccountServiceTicket_Record, Short> TMP_STATE = createField("tmp_state", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.SMALLINT)), this, "unused");

    /**
     * Create a <code>public.account_service_ticket_</code> table reference
     */
    public AccountServiceTicket_() {
        this("account_service_ticket_", null);
    }

    /**
     * Create an aliased <code>public.account_service_ticket_</code> table reference
     */
    public AccountServiceTicket_(String alias) {
        this(alias, ACCOUNT_SERVICE_TICKET_);
    }

    private AccountServiceTicket_(String alias, Table<AccountServiceTicket_Record> aliased) {
        this(alias, aliased, null);
    }

    private AccountServiceTicket_(String alias, Table<AccountServiceTicket_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AccountServiceTicket_Record, Long> getIdentity() {
        return Keys.IDENTITY_ACCOUNT_SERVICE_TICKET_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountServiceTicket_Record> getPrimaryKey() {
        return Keys.ACCOUNT_SERVICE_TICKET__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountServiceTicket_Record>> getKeys() {
        return Arrays.<UniqueKey<AccountServiceTicket_Record>>asList(Keys.ACCOUNT_SERVICE_TICKET__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AccountServiceTicket_Record, ?>> getReferences() {
        return Arrays.<ForeignKey<AccountServiceTicket_Record, ?>>asList(Keys.ACCOUNT_SERVICE_TICKET___FKABB1C537A760195F, Keys.ACCOUNT_SERVICE_TICKET___FKABB1C537ADCD0ECC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountServiceTicket_ as(String alias) {
        return new AccountServiceTicket_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountServiceTicket_ rename(String name) {
        return new AccountServiceTicket_(name, null);
    }
}
