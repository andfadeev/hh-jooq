/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceCategoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceCategory extends TableImpl<ServiceCategoryRecord> {

    private static final long serialVersionUID = -2007003179;

    /**
     * The reference instance of <code>public.service_category</code>
     */
    public static final ServiceCategory SERVICE_CATEGORY = new ServiceCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceCategoryRecord> getRecordType() {
        return ServiceCategoryRecord.class;
    }

    /**
     * The column <code>public.service_category.service_category_id</code>.
     */
    public final TableField<ServiceCategoryRecord, Integer> SERVICE_CATEGORY_ID = createField("service_category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('service_category_service_category_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_category.name</code>.
     */
    public final TableField<ServiceCategoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.service_category.priority</code>.
     */
    public final TableField<ServiceCategoryRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_category.view_status</code>.
     */
    public final TableField<ServiceCategoryRecord, Integer> VIEW_STATUS = createField("view_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_category.site_id</code>.
     */
    public final TableField<ServiceCategoryRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_category.no_create_deed</code>.
     */
    public final TableField<ServiceCategoryRecord, Boolean> NO_CREATE_DEED = createField("no_create_deed", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_category.for_writing_off_services</code>.
     */
    public final TableField<ServiceCategoryRecord, Boolean> FOR_WRITING_OFF_SERVICES = createField("for_writing_off_services", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.service_category</code> table reference
     */
    public ServiceCategory() {
        this("service_category", null);
    }

    /**
     * Create an aliased <code>public.service_category</code> table reference
     */
    public ServiceCategory(String alias) {
        this(alias, SERVICE_CATEGORY);
    }

    private ServiceCategory(String alias, Table<ServiceCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceCategory(String alias, Table<ServiceCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceCategoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVICE_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceCategoryRecord> getPrimaryKey() {
        return Keys.SERVICE_CATEGORY_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceCategoryRecord>>asList(Keys.SERVICE_CATEGORY_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServiceCategoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServiceCategoryRecord, ?>>asList(Keys.SERVICE_CATEGORY__SITE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceCategory as(String alias) {
        return new ServiceCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceCategory rename(String name) {
        return new ServiceCategory(name, null);
    }
}
