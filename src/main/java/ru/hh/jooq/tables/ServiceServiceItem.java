/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceServiceItemRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceServiceItem extends TableImpl<ServiceServiceItemRecord> {

    private static final long serialVersionUID = 1687796744;

    /**
     * The reference instance of <code>public.service_service_item</code>
     */
    public static final ServiceServiceItem SERVICE_SERVICE_ITEM = new ServiceServiceItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceServiceItemRecord> getRecordType() {
        return ServiceServiceItemRecord.class;
    }

    /**
     * The column <code>public.service_service_item.items_count</code>.
     */
    public final TableField<ServiceServiceItemRecord, Integer> ITEMS_COUNT = createField("items_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.service_service_item.service_id</code>.
     */
    public final TableField<ServiceServiceItemRecord, Integer> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.service_service_item.service_service_item_id</code>.
     */
    public final TableField<ServiceServiceItemRecord, Integer> SERVICE_SERVICE_ITEM_ID = createField("service_service_item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('service_service_item_service_service_item_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_service_item.cost</code>.
     */
    public final TableField<ServiceServiceItemRecord, Long> COST = createField("cost", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.service_service_item.price</code>.
     */
    public final TableField<ServiceServiceItemRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.service_service_item.bonus_count</code>.
     */
    public final TableField<ServiceServiceItemRecord, Integer> BONUS_COUNT = createField("bonus_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_service_item.currency</code>.
     */
    public final TableField<ServiceServiceItemRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CHAR.length(3), this, "");

    /**
     * The column <code>public.service_service_item.service_entry</code>.
     */
    public final TableField<ServiceServiceItemRecord, String> SERVICE_ENTRY = createField("service_entry", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>public.service_service_item.service_entry_postfix</code>.
     */
    public final TableField<ServiceServiceItemRecord, String> SERVICE_ENTRY_POSTFIX = createField("service_entry_postfix", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.service_service_item.spent</code>.
     */
    public final TableField<ServiceServiceItemRecord, Boolean> SPENT = createField("spent", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_service_item.gift_item</code>.
     */
    public final TableField<ServiceServiceItemRecord, Boolean> GIFT_ITEM = createField("gift_item", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.service_service_item</code> table reference
     */
    public ServiceServiceItem() {
        this("service_service_item", null);
    }

    /**
     * Create an aliased <code>public.service_service_item</code> table reference
     */
    public ServiceServiceItem(String alias) {
        this(alias, SERVICE_SERVICE_ITEM);
    }

    private ServiceServiceItem(String alias, Table<ServiceServiceItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceServiceItem(String alias, Table<ServiceServiceItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceServiceItemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVICE_SERVICE_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceServiceItemRecord> getPrimaryKey() {
        return Keys.SERVICE_SERVICE_ITEM_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceServiceItemRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceServiceItemRecord>>asList(Keys.SERVICE_SERVICE_ITEM_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServiceServiceItemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServiceServiceItemRecord, ?>>asList(Keys.SERVICE_SERVICE_ITEM__FKE26E47A72CE46C5F, Keys.SERVICE_SERVICE_ITEM__SERVICE_SERVICE_ITEM_CURRENCY, Keys.SERVICE_SERVICE_ITEM__SERVICE_SERVICE_ITEM_SERVICE_ENTRY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceServiceItem as(String alias) {
        return new ServiceServiceItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceServiceItem rename(String name) {
        return new ServiceServiceItem(name, null);
    }
}
