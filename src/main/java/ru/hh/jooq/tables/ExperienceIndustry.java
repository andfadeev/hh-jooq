/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ExperienceIndustryRecord;


/**
 * many-to-many cross table between experience and industry
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperienceIndustry extends TableImpl<ExperienceIndustryRecord> {

    private static final long serialVersionUID = -949647893;

    /**
     * The reference instance of <code>public.experience_industry</code>
     */
    public static final ExperienceIndustry EXPERIENCE_INDUSTRY = new ExperienceIndustry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExperienceIndustryRecord> getRecordType() {
        return ExperienceIndustryRecord.class;
    }

    /**
     * The column <code>public.experience_industry.experience_id</code>.
     */
    public final TableField<ExperienceIndustryRecord, Integer> EXPERIENCE_ID = createField("experience_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.experience_industry.industry_id</code>.
     */
    public final TableField<ExperienceIndustryRecord, Integer> INDUSTRY_ID = createField("industry_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.experience_industry</code> table reference
     */
    public ExperienceIndustry() {
        this("experience_industry", null);
    }

    /**
     * Create an aliased <code>public.experience_industry</code> table reference
     */
    public ExperienceIndustry(String alias) {
        this(alias, EXPERIENCE_INDUSTRY);
    }

    private ExperienceIndustry(String alias, Table<ExperienceIndustryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExperienceIndustry(String alias, Table<ExperienceIndustryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "many-to-many cross table between experience and industry");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ExperienceIndustryRecord> getPrimaryKey() {
        return Keys.EXPERIENCE_INDUSTRY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ExperienceIndustryRecord>> getKeys() {
        return Arrays.<UniqueKey<ExperienceIndustryRecord>>asList(Keys.EXPERIENCE_INDUSTRY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ExperienceIndustryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ExperienceIndustryRecord, ?>>asList(Keys.EXPERIENCE_INDUSTRY__EXPERIENCE_INDUSTRY_EXPERIENCE_ID_FKEY, Keys.EXPERIENCE_INDUSTRY__EXPERIENCE_INDUSTRY_INDUSTRY_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperienceIndustry as(String alias) {
        return new ExperienceIndustry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExperienceIndustry rename(String name) {
        return new ExperienceIndustry(name, null);
    }
}
