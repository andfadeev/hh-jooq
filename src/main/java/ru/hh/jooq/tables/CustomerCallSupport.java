/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.CustomerCallSupportRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerCallSupport extends TableImpl<CustomerCallSupportRecord> {

    private static final long serialVersionUID = -732097832;

    /**
     * The reference instance of <code>public.customer_call_support</code>
     */
    public static final CustomerCallSupport CUSTOMER_CALL_SUPPORT = new CustomerCallSupport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerCallSupportRecord> getRecordType() {
        return CustomerCallSupportRecord.class;
    }

    /**
     * The column <code>public.customer_call_support.customer_call_support_id</code>.
     */
    public final TableField<CustomerCallSupportRecord, Integer> CUSTOMER_CALL_SUPPORT_ID = createField("customer_call_support_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('customer_call_support_customer_call_support_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.customer_call_support.call_type</code>.
     */
    public final TableField<CustomerCallSupportRecord, Integer> CALL_TYPE = createField("call_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.customer_call_support.user_id</code>.
     */
    public final TableField<CustomerCallSupportRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.customer_call_support</code> table reference
     */
    public CustomerCallSupport() {
        this("customer_call_support", null);
    }

    /**
     * Create an aliased <code>public.customer_call_support</code> table reference
     */
    public CustomerCallSupport(String alias) {
        this(alias, CUSTOMER_CALL_SUPPORT);
    }

    private CustomerCallSupport(String alias, Table<CustomerCallSupportRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerCallSupport(String alias, Table<CustomerCallSupportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CustomerCallSupportRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CUSTOMER_CALL_SUPPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomerCallSupportRecord> getPrimaryKey() {
        return Keys.CUSTOMER_CALL_SUPPORT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomerCallSupportRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerCallSupportRecord>>asList(Keys.CUSTOMER_CALL_SUPPORT_PKEY, Keys.CUSTOMER_CALL_SUPPORT_CALL_TYPE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CustomerCallSupportRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CustomerCallSupportRecord, ?>>asList(Keys.CUSTOMER_CALL_SUPPORT__USER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerCallSupport as(String alias) {
        return new CustomerCallSupport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerCallSupport rename(String name) {
        return new CustomerCallSupport(name, null);
    }
}
