/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.HeapPageItemsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HeapPageItems extends TableImpl<HeapPageItemsRecord> {

    private static final long serialVersionUID = 1442389232;

    /**
     * The reference instance of <code>public.heap_page_items</code>
     */
    public static final HeapPageItems HEAP_PAGE_ITEMS = new HeapPageItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HeapPageItemsRecord> getRecordType() {
        return HeapPageItemsRecord.class;
    }

    /**
     * The column <code>public.heap_page_items.lp</code>.
     */
    public final TableField<HeapPageItemsRecord, Short> LP = createField("lp", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.heap_page_items.lp_off</code>.
     */
    public final TableField<HeapPageItemsRecord, Short> LP_OFF = createField("lp_off", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.heap_page_items.lp_flags</code>.
     */
    public final TableField<HeapPageItemsRecord, Short> LP_FLAGS = createField("lp_flags", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.heap_page_items.lp_len</code>.
     */
    public final TableField<HeapPageItemsRecord, Short> LP_LEN = createField("lp_len", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.heap_page_items.t_xmin</code>.
     */
    public final TableField<HeapPageItemsRecord, Long> T_XMIN = createField("t_xmin", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.heap_page_items.t_xmax</code>.
     */
    public final TableField<HeapPageItemsRecord, Long> T_XMAX = createField("t_xmax", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.heap_page_items.t_field3</code>.
     */
    public final TableField<HeapPageItemsRecord, Integer> T_FIELD3 = createField("t_field3", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.heap_page_items.t_ctid</code>.
     */
    public final TableField<HeapPageItemsRecord, Long> T_CTID = createField("t_ctid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.heap_page_items.t_infomask2</code>.
     */
    public final TableField<HeapPageItemsRecord, Integer> T_INFOMASK2 = createField("t_infomask2", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.heap_page_items.t_infomask</code>.
     */
    public final TableField<HeapPageItemsRecord, Integer> T_INFOMASK = createField("t_infomask", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.heap_page_items.t_hoff</code>.
     */
    public final TableField<HeapPageItemsRecord, Short> T_HOFF = createField("t_hoff", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.heap_page_items.t_bits</code>.
     */
    public final TableField<HeapPageItemsRecord, String> T_BITS = createField("t_bits", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.heap_page_items.t_oid</code>.
     */
    public final TableField<HeapPageItemsRecord, Long> T_OID = createField("t_oid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.heap_page_items</code> table reference
     */
    public HeapPageItems() {
        this("heap_page_items", null);
    }

    /**
     * Create an aliased <code>public.heap_page_items</code> table reference
     */
    public HeapPageItems(String alias) {
        this(alias, HEAP_PAGE_ITEMS);
    }

    private HeapPageItems(String alias, Table<HeapPageItemsRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private HeapPageItems(String alias, Table<HeapPageItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItems as(String alias) {
        return new HeapPageItems(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public HeapPageItems rename(String name) {
        return new HeapPageItems(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public HeapPageItems call(byte[] page) {
        return new HeapPageItems(getName(), null, new Field[] { DSL.val(page) });
    }

    /**
     * Call this table-valued function
     */
    public HeapPageItems call(Field<byte[]> page) {
        return new HeapPageItems(getName(), null, new Field[] { page });
    }
}
