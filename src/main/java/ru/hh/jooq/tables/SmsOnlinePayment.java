/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.SmsOnlinePaymentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsOnlinePayment extends TableImpl<SmsOnlinePaymentRecord> {

    private static final long serialVersionUID = -519094497;

    /**
     * The reference instance of <code>public.sms_online_payment</code>
     */
    public static final SmsOnlinePayment SMS_ONLINE_PAYMENT = new SmsOnlinePayment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmsOnlinePaymentRecord> getRecordType() {
        return SmsOnlinePaymentRecord.class;
    }

    /**
     * The column <code>public.sms_online_payment.id</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('sms_online_payment_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.sms_online_payment.creation_time</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.sms_online_payment.order_id</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.sms_online_payment.order_code</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.sms_online_payment.error</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, Integer> ERROR = createField("error", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sms_online_payment.phone</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.sms_online_payment.status</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.sms_online_payment.order_status</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, Integer> ORDER_STATUS = createField("order_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.sms_online_payment.user_id</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.sms_online_payment.service_name</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, String> SERVICE_NAME = createField("service_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.sms_online_payment.amount</code>. Amount from hh.ru
     */
    public final TableField<SmsOnlinePaymentRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(15, 2), this, "Amount from hh.ru");

    /**
     * The column <code>public.sms_online_payment.amount_corrected</code>. Amount from hh.ru after phone num entered
     */
    public final TableField<SmsOnlinePaymentRecord, BigDecimal> AMOUNT_CORRECTED = createField("amount_corrected", org.jooq.impl.SQLDataType.NUMERIC, this, "Amount from hh.ru after phone num entered");

    /**
     * The column <code>public.sms_online_payment.amount_fact</code>. Amount with provider`s tax
     */
    public final TableField<SmsOnlinePaymentRecord, BigDecimal> AMOUNT_FACT = createField("amount_fact", org.jooq.impl.SQLDataType.NUMERIC, this, "Amount with provider`s tax");

    /**
     * The column <code>public.sms_online_payment.hh_amount</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, BigDecimal> HH_AMOUNT = createField("hh_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.sms_online_payment.currency</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CHAR.length(3).defaultValue(org.jooq.impl.DSL.field("NULL::bpchar", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>public.sms_online_payment.activation_date</code>.
     */
    public final TableField<SmsOnlinePaymentRecord, LocalDateTime> ACTIVATION_DATE = createField("activation_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>public.sms_online_payment</code> table reference
     */
    public SmsOnlinePayment() {
        this("sms_online_payment", null);
    }

    /**
     * Create an aliased <code>public.sms_online_payment</code> table reference
     */
    public SmsOnlinePayment(String alias) {
        this(alias, SMS_ONLINE_PAYMENT);
    }

    private SmsOnlinePayment(String alias, Table<SmsOnlinePaymentRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmsOnlinePayment(String alias, Table<SmsOnlinePaymentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SmsOnlinePaymentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SMS_ONLINE_PAYMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SmsOnlinePaymentRecord> getPrimaryKey() {
        return Keys.SMS_ONLINE_PAYMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SmsOnlinePaymentRecord>> getKeys() {
        return Arrays.<UniqueKey<SmsOnlinePaymentRecord>>asList(Keys.SMS_ONLINE_PAYMENT_PKEY, Keys.SMS_ONLINE_PAYMENT_ORDER_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsOnlinePayment as(String alias) {
        return new SmsOnlinePayment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsOnlinePayment rename(String name) {
        return new SmsOnlinePayment(name, null);
    }
}
