/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.StatementItemRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatementItem extends TableImpl<StatementItemRecord> {

    private static final long serialVersionUID = -278171962;

    /**
     * The reference instance of <code>public.statement_item</code>
     */
    public static final StatementItem STATEMENT_ITEM = new StatementItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatementItemRecord> getRecordType() {
        return StatementItemRecord.class;
    }

    /**
     * The column <code>public.statement_item.id</code>.
     */
    public final TableField<StatementItemRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('statement_item_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.statement_item.document_date</code>.
     */
    public final TableField<StatementItemRecord, LocalDate> DOCUMENT_DATE = createField("document_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.statement_item.document_number</code>.
     */
    public final TableField<StatementItemRecord, String> DOCUMENT_NUMBER = createField("document_number", org.jooq.impl.SQLDataType.VARCHAR.length(15).nullable(false), this, "");

    /**
     * The column <code>public.statement_item.payer_bank_account</code>.
     */
    public final TableField<StatementItemRecord, String> PAYER_BANK_ACCOUNT = createField("payer_bank_account", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>public.statement_item.payer_bank_bik</code>.
     */
    public final TableField<StatementItemRecord, String> PAYER_BANK_BIK = createField("payer_bank_bik", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "");

    /**
     * The column <code>public.statement_item.payer_bank_name</code>.
     */
    public final TableField<StatementItemRecord, String> PAYER_BANK_NAME = createField("payer_bank_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.statement_item.payer_inn</code>.
     */
    public final TableField<StatementItemRecord, String> PAYER_INN = createField("payer_inn", org.jooq.impl.SQLDataType.VARCHAR.length(12).nullable(false), this, "");

    /**
     * The column <code>public.statement_item.payer_kpp</code>.
     */
    public final TableField<StatementItemRecord, String> PAYER_KPP = createField("payer_kpp", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "");

    /**
     * The column <code>public.statement_item.payer_name</code>.
     */
    public final TableField<StatementItemRecord, String> PAYER_NAME = createField("payer_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.statement_item.price</code>.
     */
    public final TableField<StatementItemRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2), this, "");

    /**
     * The column <code>public.statement_item.subject</code>.
     */
    public final TableField<StatementItemRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR.length(200000).nullable(false), this, "");

    /**
     * The column <code>public.statement_item.upload_date</code>.
     */
    public final TableField<StatementItemRecord, LocalDate> UPLOAD_DATE = createField("upload_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>public.statement_item.file_id</code>.
     */
    public final TableField<StatementItemRecord, Integer> FILE_ID = createField("file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.statement_item.currency</code>.
     */
    public final TableField<StatementItemRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

    /**
     * The column <code>public.statement_item.payed</code>.
     */
    public final TableField<StatementItemRecord, Boolean> PAYED = createField("payed", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.statement_item.bill_id</code>.
     */
    public final TableField<StatementItemRecord, Integer> BILL_ID = createField("bill_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.statement_item.bill_uid</code>.
     */
    public final TableField<StatementItemRecord, String> BILL_UID = createField("bill_uid", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.statement_item.document_date_text</code>.
     */
    public final TableField<StatementItemRecord, String> DOCUMENT_DATE_TEXT = createField("document_date_text", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.statement_item.file_row_number</code>.
     */
    public final TableField<StatementItemRecord, Integer> FILE_ROW_NUMBER = createField("file_row_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.statement_item.price_text</code>.
     */
    public final TableField<StatementItemRecord, String> PRICE_TEXT = createField("price_text", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.statement_item.billing_file_id</code>.
     */
    public final TableField<StatementItemRecord, Integer> BILLING_FILE_ID = createField("billing_file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.statement_item.bank_id</code>.
     */
    public final TableField<StatementItemRecord, Integer> BANK_ID = createField("bank_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.statement_item</code> table reference
     */
    public StatementItem() {
        this("statement_item", null);
    }

    /**
     * Create an aliased <code>public.statement_item</code> table reference
     */
    public StatementItem(String alias) {
        this(alias, STATEMENT_ITEM);
    }

    private StatementItem(String alias, Table<StatementItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatementItem(String alias, Table<StatementItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StatementItemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STATEMENT_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatementItemRecord> getPrimaryKey() {
        return Keys.STATEMENT_ITEM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatementItemRecord>> getKeys() {
        return Arrays.<UniqueKey<StatementItemRecord>>asList(Keys.STATEMENT_ITEM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StatementItemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StatementItemRecord, ?>>asList(Keys.STATEMENT_ITEM__STATEMENT_ITEM_FILE, Keys.STATEMENT_ITEM__FKF03097E3D4F7C5FD, Keys.STATEMENT_ITEM__STATEMENT_ITEM_BILL, Keys.STATEMENT_ITEM__STATEMENT_ITEM_FILE_ID, Keys.STATEMENT_ITEM__STATEMENT_ITEM_BANK_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatementItem as(String alias) {
        return new StatementItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatementItem rename(String name) {
        return new StatementItem(name, null);
    }
}
