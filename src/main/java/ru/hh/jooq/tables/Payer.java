/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.PayerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payer extends TableImpl<PayerRecord> {

    private static final long serialVersionUID = 610621886;

    /**
     * The reference instance of <code>public.payer</code>
     */
    public static final Payer PAYER = new Payer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayerRecord> getRecordType() {
        return PayerRecord.class;
    }

    /**
     * The column <code>public.payer.payer_id</code>.
     */
    public final TableField<PayerRecord, Integer> PAYER_ID = createField("payer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('payer_payer_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.payer.payer_name</code>.
     */
    public final TableField<PayerRecord, String> PAYER_NAME = createField("payer_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.payer.main_bank_detail_id</code>.
     */
    public final TableField<PayerRecord, Integer> MAIN_BANK_DETAIL_ID = createField("main_bank_detail_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.payer.employer_organization_type_id</code>.
     */
    public final TableField<PayerRecord, Integer> EMPLOYER_ORGANIZATION_TYPE_ID = createField("employer_organization_type_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.payer.account_id</code>.
     */
    public final TableField<PayerRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.payer.disabled</code>.
     */
    public final TableField<PayerRecord, Boolean> DISABLED = createField("disabled", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.payer.delivery_address_id</code>.
     */
    public final TableField<PayerRecord, Integer> DELIVERY_ADDRESS_ID = createField("delivery_address_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.payer.tax_number</code>.
     */
    public final TableField<PayerRecord, String> TAX_NUMBER = createField("tax_number", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "");

    /**
     * The column <code>public.payer.fixed_name</code>.
     */
    public final TableField<PayerRecord, Boolean> FIXED_NAME = createField("fixed_name", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.payer.electronic_record</code>.
     */
    public final TableField<PayerRecord, Boolean> ELECTRONIC_RECORD = createField("electronic_record", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.payer.adv_stop_notified</code>.
     */
    public final TableField<PayerRecord, Boolean> ADV_STOP_NOTIFIED = createField("adv_stop_notified", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.payer.recipient_id</code>.
     */
    public final TableField<PayerRecord, Integer> RECIPIENT_ID = createField("recipient_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.payer</code> table reference
     */
    public Payer() {
        this("payer", null);
    }

    /**
     * Create an aliased <code>public.payer</code> table reference
     */
    public Payer(String alias) {
        this(alias, PAYER);
    }

    private Payer(String alias, Table<PayerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Payer(String alias, Table<PayerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PayerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAYER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayerRecord> getPrimaryKey() {
        return Keys.PAYER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayerRecord>> getKeys() {
        return Arrays.<UniqueKey<PayerRecord>>asList(Keys.PAYER_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PayerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PayerRecord, ?>>asList(Keys.PAYER__FK_ACCOUNT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Payer as(String alias) {
        return new Payer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Payer rename(String name) {
        return new Payer(name, null);
    }
}
