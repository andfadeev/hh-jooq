/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.VerificationActsRecord;


/**
 * Акты сверки из 1С
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VerificationActs extends TableImpl<VerificationActsRecord> {

    private static final long serialVersionUID = -1105453207;

    /**
     * The reference instance of <code>public.verification_acts</code>
     */
    public static final VerificationActs VERIFICATION_ACTS = new VerificationActs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VerificationActsRecord> getRecordType() {
        return VerificationActsRecord.class;
    }

    /**
     * The column <code>public.verification_acts.id</code>.
     */
    public final TableField<VerificationActsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('verification_acts_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.verification_acts.creation_time</code>.
     */
    public final TableField<VerificationActsRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.verification_acts.download_time</code>.
     */
    public final TableField<VerificationActsRecord, LocalDateTime> DOWNLOAD_TIME = createField("download_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.verification_acts.completed</code>.
     */
    public final TableField<VerificationActsRecord, LocalDateTime> COMPLETED = createField("completed", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.verification_acts.date_from</code>.
     */
    public final TableField<VerificationActsRecord, LocalDate> DATE_FROM = createField("date_from", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>public.verification_acts.date_to</code>.
     */
    public final TableField<VerificationActsRecord, LocalDate> DATE_TO = createField("date_to", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>public.verification_acts.handicraft</code>.
     */
    public final TableField<VerificationActsRecord, Boolean> HANDICRAFT = createField("handicraft", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.verification_acts.payer_id</code>.
     */
    public final TableField<VerificationActsRecord, Integer> PAYER_ID = createField("payer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.verification_acts.file_id</code>.
     */
    public final TableField<VerificationActsRecord, Integer> FILE_ID = createField("file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.verification_acts.user_id</code>.
     */
    public final TableField<VerificationActsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.verification_acts.original_requested</code>.
     */
    public final TableField<VerificationActsRecord, LocalDateTime> ORIGINAL_REQUESTED = createField("original_requested", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.verification_acts.original_notified</code>.
     */
    public final TableField<VerificationActsRecord, LocalDateTime> ORIGINAL_NOTIFIED = createField("original_notified", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.verification_acts.original_processed</code>.
     */
    public final TableField<VerificationActsRecord, LocalDateTime> ORIGINAL_PROCESSED = createField("original_processed", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.verification_acts.download_confirmed</code>.
     */
    public final TableField<VerificationActsRecord, LocalDateTime> DOWNLOAD_CONFIRMED = createField("download_confirmed", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.verification_acts.tax_number</code>.
     */
    public final TableField<VerificationActsRecord, String> TAX_NUMBER = createField("tax_number", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "");

    /**
     * The column <code>public.verification_acts.kpp</code>.
     */
    public final TableField<VerificationActsRecord, String> KPP = createField("kpp", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "");

    /**
     * The column <code>public.verification_acts.original_fail_code</code>.
     */
    public final TableField<VerificationActsRecord, Integer> ORIGINAL_FAIL_CODE = createField("original_fail_code", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.verification_acts.original_requester_id</code>.
     */
    public final TableField<VerificationActsRecord, Integer> ORIGINAL_REQUESTER_ID = createField("original_requester_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.verification_acts.billing_file_id</code>.
     */
    public final TableField<VerificationActsRecord, Integer> BILLING_FILE_ID = createField("billing_file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.verification_acts</code> table reference
     */
    public VerificationActs() {
        this("verification_acts", null);
    }

    /**
     * Create an aliased <code>public.verification_acts</code> table reference
     */
    public VerificationActs(String alias) {
        this(alias, VERIFICATION_ACTS);
    }

    private VerificationActs(String alias, Table<VerificationActsRecord> aliased) {
        this(alias, aliased, null);
    }

    private VerificationActs(String alias, Table<VerificationActsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Акты сверки из 1С");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VerificationActsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VERIFICATION_ACTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VerificationActsRecord> getPrimaryKey() {
        return Keys.VERIFICATION_ACTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VerificationActsRecord>> getKeys() {
        return Arrays.<UniqueKey<VerificationActsRecord>>asList(Keys.VERIFICATION_ACTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VerificationActsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VerificationActsRecord, ?>>asList(Keys.VERIFICATION_ACTS__VERIFICATION_ACTS_2_PAYER_FK, Keys.VERIFICATION_ACTS__VERIFICATION_ACTS_2_WEB_DAV_FILE_FK, Keys.VERIFICATION_ACTS__VERIFICATION_ACTS_2_USER_FK, Keys.VERIFICATION_ACTS__VERIFICATION_ACT_FILE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VerificationActs as(String alias) {
        return new VerificationActs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VerificationActs rename(String name) {
        return new VerificationActs(name, null);
    }
}
