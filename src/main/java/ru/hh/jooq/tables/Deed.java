/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.DeedRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Deed extends TableImpl<DeedRecord> {

    private static final long serialVersionUID = -392632130;

    /**
     * The reference instance of <code>public.deed</code>
     */
    public static final Deed DEED = new Deed();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeedRecord> getRecordType() {
        return DeedRecord.class;
    }

    /**
     * The column <code>public.deed.deed_id</code>.
     */
    public final TableField<DeedRecord, Integer> DEED_ID = createField("deed_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('deed_deed_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deed.creation_time</code>.
     */
    public final TableField<DeedRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("'1970-01-01 00:00:00'::timestamp without time zone", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.deed.employer_service_id</code>.
     */
    public final TableField<DeedRecord, Integer> EMPLOYER_SERVICE_ID = createField("employer_service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deed.is_document_sent</code>.
     */
    public final TableField<DeedRecord, Boolean> IS_DOCUMENT_SENT = createField("is_document_sent", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.deed.required_work_finished</code>.
     */
    public final TableField<DeedRecord, Boolean> REQUIRED_WORK_FINISHED = createField("required_work_finished", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.deed.visibility</code>.
     */
    public final TableField<DeedRecord, Boolean> VISIBILITY = createField("visibility", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.deed.subject</code>.
     */
    public final TableField<DeedRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.deed.number</code>.
     */
    public final TableField<DeedRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR.length(40).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.deed.deed_state_id</code>.
     */
    public final TableField<DeedRecord, Integer> DEED_STATE_ID = createField("deed_state_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.part</code>.
     */
    public final TableField<DeedRecord, Integer> PART = createField("part", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deed.bank_detail_id</code>.
     */
    public final TableField<DeedRecord, Integer> BANK_DETAIL_ID = createField("bank_detail_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.start</code>.
     */
    public final TableField<DeedRecord, LocalDate> START = createField("start", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.deed.days</code>.
     */
    public final TableField<DeedRecord, Integer> DAYS = createField("days", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deed.index_</code>.
     */
    public final TableField<DeedRecord, Integer> INDEX_ = createField("index_", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deed.price</code>.
     */
    public final TableField<DeedRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2), this, "");

    /**
     * The column <code>public.deed.bonus_subject</code>.
     */
    public final TableField<DeedRecord, String> BONUS_SUBJECT = createField("bonus_subject", org.jooq.impl.SQLDataType.VARCHAR.length(20000).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.deed.bonus_employer_service_id</code>.
     */
    public final TableField<DeedRecord, Integer> BONUS_EMPLOYER_SERVICE_ID = createField("bonus_employer_service_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.recipient_id</code>.
     */
    public final TableField<DeedRecord, Integer> RECIPIENT_ID = createField("recipient_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.currency</code>.
     */
    public final TableField<DeedRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>public.deed.file_id</code>.
     */
    public final TableField<DeedRecord, Integer> FILE_ID = createField("file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.sent</code>.
     */
    public final TableField<DeedRecord, Boolean> SENT = createField("sent", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.deed.hard_copy_state</code>.
     */
    public final TableField<DeedRecord, Integer> HARD_COPY_STATE = createField("hard_copy_state", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.hard_copy_time</code>.
     */
    public final TableField<DeedRecord, LocalDateTime> HARD_COPY_TIME = createField("hard_copy_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.deed.aspe_quantity</code>.
     */
    public final TableField<DeedRecord, Integer> ASPE_QUANTITY = createField("aspe_quantity", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.aspe_id</code>.
     */
    public final TableField<DeedRecord, Integer> ASPE_ID = createField("aspe_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.deed.billing_file_id</code>.
     */
    public final TableField<DeedRecord, Integer> BILLING_FILE_ID = createField("billing_file_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.deed</code> table reference
     */
    public Deed() {
        this("deed", null);
    }

    /**
     * Create an aliased <code>public.deed</code> table reference
     */
    public Deed(String alias) {
        this(alias, DEED);
    }

    private Deed(String alias, Table<DeedRecord> aliased) {
        this(alias, aliased, null);
    }

    private Deed(String alias, Table<DeedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DeedRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DEED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeedRecord> getPrimaryKey() {
        return Keys.DEED_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeedRecord>> getKeys() {
        return Arrays.<UniqueKey<DeedRecord>>asList(Keys.DEED_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DeedRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DeedRecord, ?>>asList(Keys.DEED__EMPLOYER_SERVICE_ID_FKEY, Keys.DEED__BONUS_EMPLOYER_SERVICE_ID_FKEY, Keys.DEED__DEED_RECIPIENT_ID_FKEY, Keys.DEED__DEED_CURRENCY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Deed as(String alias) {
        return new Deed(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Deed rename(String name) {
        return new Deed(name, null);
    }
}
