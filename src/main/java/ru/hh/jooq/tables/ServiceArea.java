/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceAreaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceArea extends TableImpl<ServiceAreaRecord> {

    private static final long serialVersionUID = -1715353262;

    /**
     * The reference instance of <code>public.service_area</code>
     */
    public static final ServiceArea SERVICE_AREA = new ServiceArea();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceAreaRecord> getRecordType() {
        return ServiceAreaRecord.class;
    }

    /**
     * The column <code>public.service_area.service_id</code>.
     */
    public final TableField<ServiceAreaRecord, Integer> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.service_area.area_id</code>.
     */
    public final TableField<ServiceAreaRecord, Integer> AREA_ID = createField("area_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.service_area</code> table reference
     */
    public ServiceArea() {
        this("service_area", null);
    }

    /**
     * Create an aliased <code>public.service_area</code> table reference
     */
    public ServiceArea(String alias) {
        this(alias, SERVICE_AREA);
    }

    private ServiceArea(String alias, Table<ServiceAreaRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceArea(String alias, Table<ServiceAreaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceAreaRecord> getPrimaryKey() {
        return Keys.SERVICE_AREA_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceAreaRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceAreaRecord>>asList(Keys.SERVICE_AREA_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServiceAreaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServiceAreaRecord, ?>>asList(Keys.SERVICE_AREA__FK156DABD72CE46C5F, Keys.SERVICE_AREA__SERVICE_AREA_AREA_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceArea as(String alias) {
        return new ServiceArea(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceArea rename(String name) {
        return new ServiceArea(name, null);
    }
}
