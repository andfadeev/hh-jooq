/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.PollQuestionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PollQuestions extends TableImpl<PollQuestionsRecord> {

    private static final long serialVersionUID = 63948379;

    /**
     * The reference instance of <code>public.poll_questions</code>
     */
    public static final PollQuestions POLL_QUESTIONS = new PollQuestions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PollQuestionsRecord> getRecordType() {
        return PollQuestionsRecord.class;
    }

    /**
     * The column <code>public.poll_questions.poll_question_id</code>.
     */
    public final TableField<PollQuestionsRecord, Integer> POLL_QUESTION_ID = createField("poll_question_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('poll_questions_poll_question_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.poll_questions.target_type</code>.
     */
    public final TableField<PollQuestionsRecord, Integer> TARGET_TYPE = createField("target_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.poll_questions.response_type</code>.
     */
    public final TableField<PollQuestionsRecord, Integer> RESPONSE_TYPE = createField("response_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.poll_questions.value</code>.
     */
    public final TableField<PollQuestionsRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.poll_questions.sort_order</code>.
     */
    public final TableField<PollQuestionsRecord, Integer> SORT_ORDER = createField("sort_order", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.poll_questions.active</code>.
     */
    public final TableField<PollQuestionsRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>public.poll_questions</code> table reference
     */
    public PollQuestions() {
        this("poll_questions", null);
    }

    /**
     * Create an aliased <code>public.poll_questions</code> table reference
     */
    public PollQuestions(String alias) {
        this(alias, POLL_QUESTIONS);
    }

    private PollQuestions(String alias, Table<PollQuestionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PollQuestions(String alias, Table<PollQuestionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PollQuestionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POLL_QUESTIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PollQuestionsRecord> getPrimaryKey() {
        return Keys.POLL_QUESTIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PollQuestionsRecord>> getKeys() {
        return Arrays.<UniqueKey<PollQuestionsRecord>>asList(Keys.POLL_QUESTIONS_PKEY, Keys.POLL_QUESTIONS_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollQuestions as(String alias) {
        return new PollQuestions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PollQuestions rename(String name) {
        return new PollQuestions(name, null);
    }
}
