/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ApplicantServiceOrderRecord;


/**
 * HH-54519 to save information on which discounts were applied to the applicant 
 * service price
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicantServiceOrder extends TableImpl<ApplicantServiceOrderRecord> {

    private static final long serialVersionUID = 162079011;

    /**
     * The reference instance of <code>public.applicant_service_order</code>
     */
    public static final ApplicantServiceOrder APPLICANT_SERVICE_ORDER = new ApplicantServiceOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicantServiceOrderRecord> getRecordType() {
        return ApplicantServiceOrderRecord.class;
    }

    /**
     * The column <code>public.applicant_service_order.applicant_service_order_id</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, String> APPLICANT_SERVICE_ORDER_ID = createField("applicant_service_order_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_order.service_type</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, String> SERVICE_TYPE = createField("service_type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_order.payment_option</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, String> PAYMENT_OPTION = createField("payment_option", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_order.amount</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(15, 2).nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_order.mastercard_discount_amount</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, BigDecimal> MASTERCARD_DISCOUNT_AMOUNT = createField("mastercard_discount_amount", org.jooq.impl.SQLDataType.NUMERIC.precision(15, 2), this, "");

    /**
     * The column <code>public.applicant_service_order.promo_code_discount_amount</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, BigDecimal> PROMO_CODE_DISCOUNT_AMOUNT = createField("promo_code_discount_amount", org.jooq.impl.SQLDataType.NUMERIC.precision(15, 2), this, "");

    /**
     * The column <code>public.applicant_service_order.promo_code</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, String> PROMO_CODE = createField("promo_code", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>public.applicant_service_order.activation_date</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, LocalDateTime> ACTIVATION_DATE = createField("activation_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.applicant_service_order.application_date</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, LocalDateTime> APPLICATION_DATE = createField("application_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_order.currency</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_order.site_id</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, Integer> SITE_ID = createField("site_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.applicant_service_order.user_id</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.applicant_service_order.bill_number</code>.
     */
    public final TableField<ApplicantServiceOrderRecord, String> BILL_NUMBER = createField("bill_number", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * Create a <code>public.applicant_service_order</code> table reference
     */
    public ApplicantServiceOrder() {
        this("applicant_service_order", null);
    }

    /**
     * Create an aliased <code>public.applicant_service_order</code> table reference
     */
    public ApplicantServiceOrder(String alias) {
        this(alias, APPLICANT_SERVICE_ORDER);
    }

    private ApplicantServiceOrder(String alias, Table<ApplicantServiceOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApplicantServiceOrder(String alias, Table<ApplicantServiceOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "HH-54519 to save information on which discounts were applied to the applicant service price");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApplicantServiceOrderRecord> getPrimaryKey() {
        return Keys.APPLICANT_SERVICE_ORDER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApplicantServiceOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<ApplicantServiceOrderRecord>>asList(Keys.APPLICANT_SERVICE_ORDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ApplicantServiceOrderRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ApplicantServiceOrderRecord, ?>>asList(Keys.APPLICANT_SERVICE_ORDER__APPLICANT_SERVICE_ORDER_CURRENCY_FK, Keys.APPLICANT_SERVICE_ORDER__APPLICANT_SERVICE_ORDER_USER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicantServiceOrder as(String alias) {
        return new ApplicantServiceOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicantServiceOrder rename(String name) {
        return new ApplicantServiceOrder(name, null);
    }
}
