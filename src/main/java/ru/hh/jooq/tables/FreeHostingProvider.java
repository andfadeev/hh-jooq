/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.FreeHostingProviderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FreeHostingProvider extends TableImpl<FreeHostingProviderRecord> {

    private static final long serialVersionUID = -249097179;

    /**
     * The reference instance of <code>public.free_hosting_provider</code>
     */
    public static final FreeHostingProvider FREE_HOSTING_PROVIDER = new FreeHostingProvider();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FreeHostingProviderRecord> getRecordType() {
        return FreeHostingProviderRecord.class;
    }

    /**
     * The column <code>public.free_hosting_provider.free_hosting_provider_id</code>.
     */
    public final TableField<FreeHostingProviderRecord, Integer> FREE_HOSTING_PROVIDER_ID = createField("free_hosting_provider_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('free_hosting_provider_free_hosting_provider_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.free_hosting_provider.name</code>.
     */
    public final TableField<FreeHostingProviderRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>public.free_hosting_provider</code> table reference
     */
    public FreeHostingProvider() {
        this("free_hosting_provider", null);
    }

    /**
     * Create an aliased <code>public.free_hosting_provider</code> table reference
     */
    public FreeHostingProvider(String alias) {
        this(alias, FREE_HOSTING_PROVIDER);
    }

    private FreeHostingProvider(String alias, Table<FreeHostingProviderRecord> aliased) {
        this(alias, aliased, null);
    }

    private FreeHostingProvider(String alias, Table<FreeHostingProviderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FreeHostingProviderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FREE_HOSTING_PROVIDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FreeHostingProviderRecord> getPrimaryKey() {
        return Keys.FREE_HOSTING_PROVIDER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FreeHostingProviderRecord>> getKeys() {
        return Arrays.<UniqueKey<FreeHostingProviderRecord>>asList(Keys.FREE_HOSTING_PROVIDER_PK, Keys.FREE_HOSTING_PROVIDER_NAME_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FreeHostingProvider as(String alias) {
        return new FreeHostingProvider(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FreeHostingProvider rename(String name) {
        return new FreeHostingProvider(name, null);
    }
}
