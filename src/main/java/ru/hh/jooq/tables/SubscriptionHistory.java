/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.SubscriptionHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubscriptionHistory extends TableImpl<SubscriptionHistoryRecord> {

    private static final long serialVersionUID = -2088403179;

    /**
     * The reference instance of <code>public.subscription_history</code>
     */
    public static final SubscriptionHistory SUBSCRIPTION_HISTORY = new SubscriptionHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SubscriptionHistoryRecord> getRecordType() {
        return SubscriptionHistoryRecord.class;
    }

    /**
     * The column <code>public.subscription_history.subscription_history_id</code>.
     */
    public final TableField<SubscriptionHistoryRecord, Integer> SUBSCRIPTION_HISTORY_ID = createField("subscription_history_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('subscription_history_subscription_history_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.subscription_history.user_id</code>.
     */
    public final TableField<SubscriptionHistoryRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.subscription_history.criteria_befor</code>.
     */
    public final TableField<SubscriptionHistoryRecord, Long> CRITERIA_BEFOR = createField("criteria_befor", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.subscription_history.criteria_after</code>.
     */
    public final TableField<SubscriptionHistoryRecord, Long> CRITERIA_AFTER = createField("criteria_after", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.subscription_history.creation_date</code>.
     */
    public final TableField<SubscriptionHistoryRecord, LocalDateTime> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.subscription_history</code> table reference
     */
    public SubscriptionHistory() {
        this("subscription_history", null);
    }

    /**
     * Create an aliased <code>public.subscription_history</code> table reference
     */
    public SubscriptionHistory(String alias) {
        this(alias, SUBSCRIPTION_HISTORY);
    }

    private SubscriptionHistory(String alias, Table<SubscriptionHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SubscriptionHistory(String alias, Table<SubscriptionHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SubscriptionHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SUBSCRIPTION_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SubscriptionHistoryRecord> getPrimaryKey() {
        return Keys.SUBSCRIPTION_HISTORY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SubscriptionHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<SubscriptionHistoryRecord>>asList(Keys.SUBSCRIPTION_HISTORY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SubscriptionHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SubscriptionHistoryRecord, ?>>asList(Keys.SUBSCRIPTION_HISTORY__USER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubscriptionHistory as(String alias) {
        return new SubscriptionHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SubscriptionHistory rename(String name) {
        return new SubscriptionHistory(name, null);
    }
}
