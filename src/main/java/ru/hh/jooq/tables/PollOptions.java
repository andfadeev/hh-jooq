/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.PollOptionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PollOptions extends TableImpl<PollOptionsRecord> {

    private static final long serialVersionUID = -1665835987;

    /**
     * The reference instance of <code>public.poll_options</code>
     */
    public static final PollOptions POLL_OPTIONS = new PollOptions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PollOptionsRecord> getRecordType() {
        return PollOptionsRecord.class;
    }

    /**
     * The column <code>public.poll_options.poll_option_id</code>.
     */
    public final TableField<PollOptionsRecord, Integer> POLL_OPTION_ID = createField("poll_option_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('poll_options_poll_option_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.poll_options.question_id</code>.
     */
    public final TableField<PollOptionsRecord, Integer> QUESTION_ID = createField("question_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.poll_options.value</code>.
     */
    public final TableField<PollOptionsRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.poll_options.sort_order</code>.
     */
    public final TableField<PollOptionsRecord, Integer> SORT_ORDER = createField("sort_order", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.poll_options</code> table reference
     */
    public PollOptions() {
        this("poll_options", null);
    }

    /**
     * Create an aliased <code>public.poll_options</code> table reference
     */
    public PollOptions(String alias) {
        this(alias, POLL_OPTIONS);
    }

    private PollOptions(String alias, Table<PollOptionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PollOptions(String alias, Table<PollOptionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PollOptionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POLL_OPTIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PollOptionsRecord> getPrimaryKey() {
        return Keys.POLL_OPTIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PollOptionsRecord>> getKeys() {
        return Arrays.<UniqueKey<PollOptionsRecord>>asList(Keys.POLL_OPTIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PollOptionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PollOptionsRecord, ?>>asList(Keys.POLL_OPTIONS__POLL_OPTIONS_QUESTION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollOptions as(String alias) {
        return new PollOptions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PollOptions rename(String name) {
        return new PollOptions(name, null);
    }
}
