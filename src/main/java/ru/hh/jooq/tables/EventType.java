/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EventTypeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventType extends TableImpl<EventTypeRecord> {

    private static final long serialVersionUID = 2068122174;

    /**
     * The reference instance of <code>public.event_type</code>
     */
    public static final EventType EVENT_TYPE = new EventType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventTypeRecord> getRecordType() {
        return EventTypeRecord.class;
    }

    /**
     * The column <code>public.event_type.event_type_id</code>.
     */
    public final TableField<EventTypeRecord, Integer> EVENT_TYPE_ID = createField("event_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('event_type_event_type_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.event_type.event_system_type_id</code>.
     */
    public final TableField<EventTypeRecord, Integer> EVENT_SYSTEM_TYPE_ID = createField("event_system_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.event_type.name</code>.
     */
    public final TableField<EventTypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.event_type.redirect_to_sale</code>.
     */
    public final TableField<EventTypeRecord, Boolean> REDIRECT_TO_SALE = createField("redirect_to_sale", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.event_type.contact</code>.
     */
    public final TableField<EventTypeRecord, Boolean> CONTACT = createField("contact", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.event_type.searchable</code>.
     */
    public final TableField<EventTypeRecord, Boolean> SEARCHABLE = createField("searchable", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.event_type</code> table reference
     */
    public EventType() {
        this("event_type", null);
    }

    /**
     * Create an aliased <code>public.event_type</code> table reference
     */
    public EventType(String alias) {
        this(alias, EVENT_TYPE);
    }

    private EventType(String alias, Table<EventTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventType(String alias, Table<EventTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventTypeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EVENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventTypeRecord> getPrimaryKey() {
        return Keys.EVENT_TYPE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<EventTypeRecord>>asList(Keys.EVENT_TYPE_PK, Keys.EVENT_TYPE_EVENT_SYSTEM_TYPE_ID_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventType as(String alias) {
        return new EventType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventType rename(String name) {
        return new EventType(name, null);
    }
}
