/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EventMailingEmployerBlockRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventMailingEmployerBlock extends TableImpl<EventMailingEmployerBlockRecord> {

    private static final long serialVersionUID = -1924590594;

    /**
     * The reference instance of <code>public.event_mailing_employer_block</code>
     */
    public static final EventMailingEmployerBlock EVENT_MAILING_EMPLOYER_BLOCK = new EventMailingEmployerBlock();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventMailingEmployerBlockRecord> getRecordType() {
        return EventMailingEmployerBlockRecord.class;
    }

    /**
     * The column <code>public.event_mailing_employer_block.employer_block_id</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, Short> EMPLOYER_BLOCK_ID = createField("employer_block_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.event_mailing_employer_block.event_type</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, String> EVENT_TYPE = createField("event_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.event_mailing_employer_block.subscription_bit</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, Integer> SUBSCRIPTION_BIT = createField("subscription_bit", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.event_mailing_employer_block.active</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.event_mailing_employer_block.subject</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.event_mailing_employer_block.subject_priority</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, Integer> SUBJECT_PRIORITY = createField("subject_priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.event_mailing_employer_block.join_mode</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, Integer> JOIN_MODE = createField("join_mode", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.event_mailing_employer_block.model_building_order</code>.
     */
    public final TableField<EventMailingEmployerBlockRecord, Integer> MODEL_BUILDING_ORDER = createField("model_building_order", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.event_mailing_employer_block</code> table reference
     */
    public EventMailingEmployerBlock() {
        this("event_mailing_employer_block", null);
    }

    /**
     * Create an aliased <code>public.event_mailing_employer_block</code> table reference
     */
    public EventMailingEmployerBlock(String alias) {
        this(alias, EVENT_MAILING_EMPLOYER_BLOCK);
    }

    private EventMailingEmployerBlock(String alias, Table<EventMailingEmployerBlockRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventMailingEmployerBlock(String alias, Table<EventMailingEmployerBlockRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventMailingEmployerBlockRecord> getPrimaryKey() {
        return Keys.EVENT_MAILING_EMPLOYER_BLOCK_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventMailingEmployerBlockRecord>> getKeys() {
        return Arrays.<UniqueKey<EventMailingEmployerBlockRecord>>asList(Keys.EVENT_MAILING_EMPLOYER_BLOCK_PKEY, Keys.EVENT_MAILING_EMPLOYER_BLOCK_EVENT_TYPE_KEY, Keys.EVENT_MAILING_EMPLOYER_BLOCK_SUBSCRIPTION_BIT_KEY, Keys.EVENT_MAILING_EMPLOYER_BLOCK_SUBJECT_PRIORITY_KEY, Keys.MODEL_BUILDING_ORDER_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMailingEmployerBlock as(String alias) {
        return new EventMailingEmployerBlock(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventMailingEmployerBlock rename(String name) {
        return new EventMailingEmployerBlock(name, null);
    }
}
