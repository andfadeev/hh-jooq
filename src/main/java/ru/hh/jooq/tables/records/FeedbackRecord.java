/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Feedback;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedbackRecord extends UpdatableRecordImpl<FeedbackRecord> implements Record9<Integer, LocalDateTime, String, String, String, String, Integer, String, Integer> {

    private static final long serialVersionUID = -910421734;

    /**
     * Setter for <code>public.feedback.feedback_id</code>.
     */
    public void setFeedbackId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.feedback.feedback_id</code>.
     */
    public Integer getFeedbackId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.feedback.creation_time</code>.
     */
    public void setCreationTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.feedback.creation_time</code>.
     */
    public LocalDateTime getCreationTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.feedback.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.feedback.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.feedback.subject</code>.
     */
    public void setSubject(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.feedback.subject</code>.
     */
    public String getSubject() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.feedback.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.feedback.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.feedback.content</code>.
     */
    public void setContent(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.feedback.content</code>.
     */
    public String getContent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.feedback.status</code>.
     */
    public void setStatus(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.feedback.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.feedback.user_data</code>.
     */
    public void setUserData(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.feedback.user_data</code>.
     */
    public String getUserData() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.feedback.type</code>.
     */
    public void setType(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.feedback.type</code>.
     */
    public Integer getType() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, LocalDateTime, String, String, String, String, Integer, String, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, LocalDateTime, String, String, String, String, Integer, String, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Feedback.FEEDBACK.FEEDBACK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return Feedback.FEEDBACK.CREATION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Feedback.FEEDBACK.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Feedback.FEEDBACK.SUBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Feedback.FEEDBACK.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Feedback.FEEDBACK.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Feedback.FEEDBACK.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Feedback.FEEDBACK.USER_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Feedback.FEEDBACK.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFeedbackId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreationTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSubject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getUserData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value1(Integer value) {
        setFeedbackId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value2(LocalDateTime value) {
        setCreationTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value4(String value) {
        setSubject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value5(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value6(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value7(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value8(String value) {
        setUserData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value9(Integer value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord values(Integer value1, LocalDateTime value2, String value3, String value4, String value5, String value6, Integer value7, String value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedbackRecord
     */
    public FeedbackRecord() {
        super(Feedback.FEEDBACK);
    }

    /**
     * Create a detached, initialised FeedbackRecord
     */
    public FeedbackRecord(Integer feedbackId, LocalDateTime creationTime, String name, String subject, String email, String content, Integer status, String userData, Integer type) {
        super(Feedback.FEEDBACK);

        set(0, feedbackId);
        set(1, creationTime);
        set(2, name);
        set(3, subject);
        set(4, email);
        set(5, content);
        set(6, status);
        set(7, userData);
        set(8, type);
    }
}
