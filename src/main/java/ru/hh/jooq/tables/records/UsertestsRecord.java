/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Usertests;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsertestsRecord extends UpdatableRecordImpl<UsertestsRecord> implements Record12<Integer, String, Integer, Boolean, Integer, Boolean, LocalDateTime, Boolean, Integer, Integer, String, Boolean> {

    private static final long serialVersionUID = -2103630362;

    /**
     * Setter for <code>public.usertests.usertest_id</code>.
     */
    public void setUsertestId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.usertests.usertest_id</code>.
     */
    public Integer getUsertestId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.usertests.test_guid</code>.
     */
    public void setTestGuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.usertests.test_guid</code>.
     */
    public String getTestGuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.usertests.employer_id</code>.
     */
    public void setEmployerId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.usertests.employer_id</code>.
     */
    public Integer getEmployerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.usertests.modifiable</code>.
     */
    public void setModifiable(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.usertests.modifiable</code>.
     */
    public Boolean getModifiable() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.usertests.common</code>.
     */
    public void setCommon(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.usertests.common</code>.
     */
    public Integer getCommon() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.usertests.hidden</code>.
     */
    public void setHidden(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.usertests.hidden</code>.
     */
    public Boolean getHidden() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.usertests.creation_date</code>.
     */
    public void setCreationDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.usertests.creation_date</code>.
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.usertests.fully_scored</code>.
     */
    public void setFullyScored(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.usertests.fully_scored</code>.
     */
    public Boolean getFullyScored() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.usertests.solutions_count</code>.
     */
    public void setSolutionsCount(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.usertests.solutions_count</code>.
     */
    public Integer getSolutionsCount() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.usertests.vacancies_count</code>.
     */
    public void setVacanciesCount(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.usertests.vacancies_count</code>.
     */
    public Integer getVacanciesCount() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.usertests.source_guid</code>.
     */
    public void setSourceGuid(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.usertests.source_guid</code>.
     */
    public String getSourceGuid() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.usertests.overt</code>.
     */
    public void setOvert(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.usertests.overt</code>.
     */
    public Boolean getOvert() {
        return (Boolean) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, Integer, Boolean, Integer, Boolean, LocalDateTime, Boolean, Integer, Integer, String, Boolean> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, Integer, Boolean, Integer, Boolean, LocalDateTime, Boolean, Integer, Integer, String, Boolean> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Usertests.USERTESTS.USERTEST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Usertests.USERTESTS.TEST_GUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Usertests.USERTESTS.EMPLOYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Usertests.USERTESTS.MODIFIABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Usertests.USERTESTS.COMMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Usertests.USERTESTS.HIDDEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field7() {
        return Usertests.USERTESTS.CREATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return Usertests.USERTESTS.FULLY_SCORED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Usertests.USERTESTS.SOLUTIONS_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Usertests.USERTESTS.VACANCIES_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Usertests.USERTESTS.SOURCE_GUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return Usertests.USERTESTS.OVERT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getUsertestId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTestGuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getEmployerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getModifiable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getCommon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getHidden();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value7() {
        return getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getFullyScored();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getSolutionsCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getVacanciesCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getSourceGuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getOvert();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value1(Integer value) {
        setUsertestId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value2(String value) {
        setTestGuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value3(Integer value) {
        setEmployerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value4(Boolean value) {
        setModifiable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value5(Integer value) {
        setCommon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value6(Boolean value) {
        setHidden(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value7(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value8(Boolean value) {
        setFullyScored(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value9(Integer value) {
        setSolutionsCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value10(Integer value) {
        setVacanciesCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value11(String value) {
        setSourceGuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord value12(Boolean value) {
        setOvert(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsertestsRecord values(Integer value1, String value2, Integer value3, Boolean value4, Integer value5, Boolean value6, LocalDateTime value7, Boolean value8, Integer value9, Integer value10, String value11, Boolean value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsertestsRecord
     */
    public UsertestsRecord() {
        super(Usertests.USERTESTS);
    }

    /**
     * Create a detached, initialised UsertestsRecord
     */
    public UsertestsRecord(Integer usertestId, String testGuid, Integer employerId, Boolean modifiable, Integer common, Boolean hidden, LocalDateTime creationDate, Boolean fullyScored, Integer solutionsCount, Integer vacanciesCount, String sourceGuid, Boolean overt) {
        super(Usertests.USERTESTS);

        set(0, usertestId);
        set(1, testGuid);
        set(2, employerId);
        set(3, modifiable);
        set(4, common);
        set(5, hidden);
        set(6, creationDate);
        set(7, fullyScored);
        set(8, solutionsCount);
        set(9, vacanciesCount);
        set(10, sourceGuid);
        set(11, overt);
    }
}
