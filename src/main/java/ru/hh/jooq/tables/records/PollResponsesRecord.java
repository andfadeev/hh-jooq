/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.PollResponses;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PollResponsesRecord extends UpdatableRecordImpl<PollResponsesRecord> implements Record5<Integer, Integer, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = 294909392;

    /**
     * Setter for <code>public.poll_responses.poll_response_id</code>.
     */
    public void setPollResponseId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.poll_responses.poll_response_id</code>.
     */
    public Integer getPollResponseId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.poll_responses.question_id</code>.
     */
    public void setQuestionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.poll_responses.question_id</code>.
     */
    public Integer getQuestionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.poll_responses.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.poll_responses.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.poll_responses.value</code>.
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.poll_responses.value</code>.
     */
    public String getValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.poll_responses.date_taken</code>.
     */
    public void setDateTaken(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.poll_responses.date_taken</code>.
     */
    public LocalDateTime getDateTaken() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PollResponses.POLL_RESPONSES.POLL_RESPONSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PollResponses.POLL_RESPONSES.QUESTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return PollResponses.POLL_RESPONSES.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PollResponses.POLL_RESPONSES.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return PollResponses.POLL_RESPONSES.DATE_TAKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPollResponseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getQuestionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getDateTaken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollResponsesRecord value1(Integer value) {
        setPollResponseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollResponsesRecord value2(Integer value) {
        setQuestionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollResponsesRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollResponsesRecord value4(String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollResponsesRecord value5(LocalDateTime value) {
        setDateTaken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PollResponsesRecord values(Integer value1, Integer value2, Integer value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PollResponsesRecord
     */
    public PollResponsesRecord() {
        super(PollResponses.POLL_RESPONSES);
    }

    /**
     * Create a detached, initialised PollResponsesRecord
     */
    public PollResponsesRecord(Integer pollResponseId, Integer questionId, Integer userId, String value, LocalDateTime dateTaken) {
        super(PollResponses.POLL_RESPONSES);

        set(0, pollResponseId);
        set(1, questionId);
        set(2, userId);
        set(3, value);
        set(4, dateTaken);
    }
}
