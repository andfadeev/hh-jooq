/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.SimilarVacanciesBlockUnsubscription;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SimilarVacanciesBlockUnsubscriptionRecord extends UpdatableRecordImpl<SimilarVacanciesBlockUnsubscriptionRecord> implements Record4<Integer, Integer, LocalDateTime, String> {

    private static final long serialVersionUID = -1425392454;

    /**
     * Setter for <code>public.similar_vacancies_block_unsubscription.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.similar_vacancies_block_unsubscription.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.similar_vacancies_block_unsubscription.subscription_id</code>.
     */
    public void setSubscriptionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.similar_vacancies_block_unsubscription.subscription_id</code>.
     */
    public Integer getSubscriptionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.similar_vacancies_block_unsubscription.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.similar_vacancies_block_unsubscription.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.similar_vacancies_block_unsubscription.state</code>.
     */
    public void setState(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.similar_vacancies_block_unsubscription.state</code>.
     */
    public String getState() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, LocalDateTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, LocalDateTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SimilarVacanciesBlockUnsubscription.SIMILAR_VACANCIES_BLOCK_UNSUBSCRIPTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return SimilarVacanciesBlockUnsubscription.SIMILAR_VACANCIES_BLOCK_UNSUBSCRIPTION.SUBSCRIPTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return SimilarVacanciesBlockUnsubscription.SIMILAR_VACANCIES_BLOCK_UNSUBSCRIPTION.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SimilarVacanciesBlockUnsubscription.SIMILAR_VACANCIES_BLOCK_UNSUBSCRIPTION.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getSubscriptionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimilarVacanciesBlockUnsubscriptionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimilarVacanciesBlockUnsubscriptionRecord value2(Integer value) {
        setSubscriptionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimilarVacanciesBlockUnsubscriptionRecord value3(LocalDateTime value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimilarVacanciesBlockUnsubscriptionRecord value4(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SimilarVacanciesBlockUnsubscriptionRecord values(Integer value1, Integer value2, LocalDateTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SimilarVacanciesBlockUnsubscriptionRecord
     */
    public SimilarVacanciesBlockUnsubscriptionRecord() {
        super(SimilarVacanciesBlockUnsubscription.SIMILAR_VACANCIES_BLOCK_UNSUBSCRIPTION);
    }

    /**
     * Create a detached, initialised SimilarVacanciesBlockUnsubscriptionRecord
     */
    public SimilarVacanciesBlockUnsubscriptionRecord(Integer id, Integer subscriptionId, LocalDateTime date, String state) {
        super(SimilarVacanciesBlockUnsubscription.SIMILAR_VACANCIES_BLOCK_UNSUBSCRIPTION);

        set(0, id);
        set(1, subscriptionId);
        set(2, date);
        set(3, state);
    }
}
