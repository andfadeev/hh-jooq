/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.SettingsItem;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SettingsItemRecord extends UpdatableRecordImpl<SettingsItemRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1856989801;

    /**
     * Setter for <code>public.settings_item.key_name</code>.
     */
    public void setKeyName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.settings_item.key_name</code>.
     */
    public String getKeyName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.settings_item.value</code>.
     */
    public void setValue(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.settings_item.value</code>.
     */
    public String getValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.settings_item.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.settings_item.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SettingsItem.SETTINGS_ITEM.KEY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SettingsItem.SETTINGS_ITEM.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SettingsItem.SETTINGS_ITEM.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKeyName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SettingsItemRecord value1(String value) {
        setKeyName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SettingsItemRecord value2(String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SettingsItemRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SettingsItemRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SettingsItemRecord
     */
    public SettingsItemRecord() {
        super(SettingsItem.SETTINGS_ITEM);
    }

    /**
     * Create a detached, initialised SettingsItemRecord
     */
    public SettingsItemRecord(String keyName, String value, String description) {
        super(SettingsItem.SETTINGS_ITEM);

        set(0, keyName);
        set(1, value);
        set(2, description);
    }
}
