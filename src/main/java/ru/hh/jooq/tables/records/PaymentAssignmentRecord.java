/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.PaymentAssignment;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentAssignmentRecord extends UpdatableRecordImpl<PaymentAssignmentRecord> implements Record5<Integer, Integer, Integer, Integer, Boolean> {

    private static final long serialVersionUID = -362170538;

    /**
     * Setter for <code>public.payment_assignment.payment_assignment_id</code>.
     */
    public void setPaymentAssignmentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.payment_assignment.payment_assignment_id</code>.
     */
    public Integer getPaymentAssignmentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.payment_assignment.payment_id</code>.
     */
    public void setPaymentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.payment_assignment.payment_id</code>.
     */
    public Integer getPaymentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.payment_assignment.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.payment_assignment.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.payment_assignment.share</code>.
     */
    public void setShare(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.payment_assignment.share</code>.
     */
    public Integer getShare() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.payment_assignment.is_responsible</code>.
     */
    public void setIsResponsible(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.payment_assignment.is_responsible</code>.
     */
    public Boolean getIsResponsible() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PaymentAssignment.PAYMENT_ASSIGNMENT.PAYMENT_ASSIGNMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PaymentAssignment.PAYMENT_ASSIGNMENT.PAYMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return PaymentAssignment.PAYMENT_ASSIGNMENT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return PaymentAssignment.PAYMENT_ASSIGNMENT.SHARE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return PaymentAssignment.PAYMENT_ASSIGNMENT.IS_RESPONSIBLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPaymentAssignmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPaymentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getShare();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getIsResponsible();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentAssignmentRecord value1(Integer value) {
        setPaymentAssignmentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentAssignmentRecord value2(Integer value) {
        setPaymentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentAssignmentRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentAssignmentRecord value4(Integer value) {
        setShare(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentAssignmentRecord value5(Boolean value) {
        setIsResponsible(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentAssignmentRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentAssignmentRecord
     */
    public PaymentAssignmentRecord() {
        super(PaymentAssignment.PAYMENT_ASSIGNMENT);
    }

    /**
     * Create a detached, initialised PaymentAssignmentRecord
     */
    public PaymentAssignmentRecord(Integer paymentAssignmentId, Integer paymentId, Integer userId, Integer share, Boolean isResponsible) {
        super(PaymentAssignment.PAYMENT_ASSIGNMENT);

        set(0, paymentAssignmentId);
        set(1, paymentId);
        set(2, userId);
        set(3, share);
        set(4, isResponsible);
    }
}
