/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Faculty;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FacultyRecord extends UpdatableRecordImpl<FacultyRecord> implements Record3<Integer, Integer, Long> {

    private static final long serialVersionUID = 1030965175;

    /**
     * Setter for <code>public.faculty.faculty_id</code>.
     */
    public void setFacultyId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.faculty.faculty_id</code>.
     */
    public Integer getFacultyId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.faculty.university_id</code>.
     */
    public void setUniversityId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.faculty.university_id</code>.
     */
    public Integer getUniversityId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.faculty.original_id</code>.
     */
    public void setOriginalId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.faculty.original_id</code>.
     */
    public Long getOriginalId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Faculty.FACULTY.FACULTY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Faculty.FACULTY.UNIVERSITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Faculty.FACULTY.ORIGINAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFacultyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUniversityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getOriginalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord value1(Integer value) {
        setFacultyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord value2(Integer value) {
        setUniversityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord value3(Long value) {
        setOriginalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord values(Integer value1, Integer value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FacultyRecord
     */
    public FacultyRecord() {
        super(Faculty.FACULTY);
    }

    /**
     * Create a detached, initialised FacultyRecord
     */
    public FacultyRecord(Integer facultyId, Integer universityId, Long originalId) {
        super(Faculty.FACULTY);

        set(0, facultyId);
        set(1, universityId);
        set(2, originalId);
    }
}
