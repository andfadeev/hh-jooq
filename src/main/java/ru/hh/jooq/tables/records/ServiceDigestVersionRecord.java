/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.ServiceDigestVersion;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceDigestVersionRecord extends UpdatableRecordImpl<ServiceDigestVersionRecord> implements Record7<Integer, Integer, String, Integer, Long, Boolean, LocalDateTime> {

    private static final long serialVersionUID = -841562064;

    /**
     * Setter for <code>public.service_digest_version.version</code>.
     */
    public void setVersion(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.service_digest_version.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.service_digest_version.employer_id</code>.
     */
    public void setEmployerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.service_digest_version.employer_id</code>.
     */
    public Integer getEmployerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.service_digest_version.hash</code>.
     */
    public void setHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.service_digest_version.hash</code>.
     */
    public String getHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.service_digest_version.max_service_id</code>.
     */
    public void setMaxServiceId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.service_digest_version.max_service_id</code>.
     */
    public Integer getMaxServiceId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.service_digest_version.max_ticket</code>.
     */
    public void setMaxTicket(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.service_digest_version.max_ticket</code>.
     */
    public Long getMaxTicket() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.service_digest_version.confirmed</code>.
     */
    public void setConfirmed(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.service_digest_version.confirmed</code>.
     */
    public Boolean getConfirmed() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.service_digest_version.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.service_digest_version.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, String, Integer, Long, Boolean, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, String, Integer, Long, Boolean, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ServiceDigestVersion.SERVICE_DIGEST_VERSION.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ServiceDigestVersion.SERVICE_DIGEST_VERSION.EMPLOYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ServiceDigestVersion.SERVICE_DIGEST_VERSION.HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ServiceDigestVersion.SERVICE_DIGEST_VERSION.MAX_SERVICE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return ServiceDigestVersion.SERVICE_DIGEST_VERSION.MAX_TICKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return ServiceDigestVersion.SERVICE_DIGEST_VERSION.CONFIRMED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field7() {
        return ServiceDigestVersion.SERVICE_DIGEST_VERSION.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getEmployerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getMaxServiceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getMaxTicket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value7() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord value1(Integer value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord value2(Integer value) {
        setEmployerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord value3(String value) {
        setHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord value4(Integer value) {
        setMaxServiceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord value5(Long value) {
        setMaxTicket(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord value6(Boolean value) {
        setConfirmed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord value7(LocalDateTime value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersionRecord values(Integer value1, Integer value2, String value3, Integer value4, Long value5, Boolean value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServiceDigestVersionRecord
     */
    public ServiceDigestVersionRecord() {
        super(ServiceDigestVersion.SERVICE_DIGEST_VERSION);
    }

    /**
     * Create a detached, initialised ServiceDigestVersionRecord
     */
    public ServiceDigestVersionRecord(Integer version, Integer employerId, String hash, Integer maxServiceId, Long maxTicket, Boolean confirmed, LocalDateTime date) {
        super(ServiceDigestVersion.SERVICE_DIGEST_VERSION);

        set(0, version);
        set(1, employerId);
        set(2, hash);
        set(3, maxServiceId);
        set(4, maxTicket);
        set(5, confirmed);
        set(6, date);
    }
}
