/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;

import ru.hh.jooq.tables.HeapPageItems;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HeapPageItemsRecord extends TableRecordImpl<HeapPageItemsRecord> implements Record13<Short, Short, Short, Short, Long, Long, Integer, Long, Integer, Integer, Short, String, Long> {

    private static final long serialVersionUID = 1278792546;

    /**
     * Setter for <code>public.heap_page_items.lp</code>.
     */
    public void setLp(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.heap_page_items.lp</code>.
     */
    public Short getLp() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>public.heap_page_items.lp_off</code>.
     */
    public void setLpOff(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.heap_page_items.lp_off</code>.
     */
    public Short getLpOff() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.heap_page_items.lp_flags</code>.
     */
    public void setLpFlags(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.heap_page_items.lp_flags</code>.
     */
    public Short getLpFlags() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.heap_page_items.lp_len</code>.
     */
    public void setLpLen(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.heap_page_items.lp_len</code>.
     */
    public Short getLpLen() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.heap_page_items.t_xmin</code>.
     */
    public void setTXmin(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_xmin</code>.
     */
    public Long getTXmin() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.heap_page_items.t_xmax</code>.
     */
    public void setTXmax(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_xmax</code>.
     */
    public Long getTXmax() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.heap_page_items.t_field3</code>.
     */
    public void setTField3(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_field3</code>.
     */
    public Integer getTField3() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.heap_page_items.t_ctid</code>.
     */
    public void setTCtid(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_ctid</code>.
     */
    public Long getTCtid() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.heap_page_items.t_infomask2</code>.
     */
    public void setTInfomask2(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_infomask2</code>.
     */
    public Integer getTInfomask2() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.heap_page_items.t_infomask</code>.
     */
    public void setTInfomask(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_infomask</code>.
     */
    public Integer getTInfomask() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.heap_page_items.t_hoff</code>.
     */
    public void setTHoff(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_hoff</code>.
     */
    public Short getTHoff() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>public.heap_page_items.t_bits</code>.
     */
    public void setTBits(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_bits</code>.
     */
    public String getTBits() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.heap_page_items.t_oid</code>.
     */
    public void setTOid(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.heap_page_items.t_oid</code>.
     */
    public Long getTOid() {
        return (Long) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Short, Short, Short, Short, Long, Long, Integer, Long, Integer, Integer, Short, String, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Short, Short, Short, Short, Long, Long, Integer, Long, Integer, Integer, Short, String, Long> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field1() {
        return HeapPageItems.HEAP_PAGE_ITEMS.LP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return HeapPageItems.HEAP_PAGE_ITEMS.LP_OFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return HeapPageItems.HEAP_PAGE_ITEMS.LP_FLAGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return HeapPageItems.HEAP_PAGE_ITEMS.LP_LEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_XMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_XMAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_FIELD3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_CTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_INFOMASK2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_INFOMASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field11() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_HOFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_BITS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field13() {
        return HeapPageItems.HEAP_PAGE_ITEMS.T_OID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value1() {
        return getLp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getLpOff();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getLpFlags();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getLpLen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getTXmin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getTXmax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getTField3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getTCtid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getTInfomask2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getTInfomask();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value11() {
        return getTHoff();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getTBits();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value13() {
        return getTOid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value1(Short value) {
        setLp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value2(Short value) {
        setLpOff(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value3(Short value) {
        setLpFlags(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value4(Short value) {
        setLpLen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value5(Long value) {
        setTXmin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value6(Long value) {
        setTXmax(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value7(Integer value) {
        setTField3(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value8(Long value) {
        setTCtid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value9(Integer value) {
        setTInfomask2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value10(Integer value) {
        setTInfomask(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value11(Short value) {
        setTHoff(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value12(String value) {
        setTBits(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord value13(Long value) {
        setTOid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HeapPageItemsRecord values(Short value1, Short value2, Short value3, Short value4, Long value5, Long value6, Integer value7, Long value8, Integer value9, Integer value10, Short value11, String value12, Long value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HeapPageItemsRecord
     */
    public HeapPageItemsRecord() {
        super(HeapPageItems.HEAP_PAGE_ITEMS);
    }

    /**
     * Create a detached, initialised HeapPageItemsRecord
     */
    public HeapPageItemsRecord(Short lp, Short lpOff, Short lpFlags, Short lpLen, Long tXmin, Long tXmax, Integer tField3, Long tCtid, Integer tInfomask2, Integer tInfomask, Short tHoff, String tBits, Long tOid) {
        super(HeapPageItems.HEAP_PAGE_ITEMS);

        set(0, lp);
        set(1, lpOff);
        set(2, lpFlags);
        set(3, lpLen);
        set(4, tXmin);
        set(5, tXmax);
        set(6, tField3);
        set(7, tCtid);
        set(8, tInfomask2);
        set(9, tInfomask);
        set(10, tHoff);
        set(11, tBits);
        set(12, tOid);
    }
}
