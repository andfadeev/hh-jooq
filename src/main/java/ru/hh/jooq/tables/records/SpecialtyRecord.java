/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Specialty;


/**
 * HH-37878 Create education specialties relation
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpecialtyRecord extends UpdatableRecordImpl<SpecialtyRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1137642674;

    /**
     * Setter for <code>public.specialty.specialty_id</code>.
     */
    public void setSpecialtyId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.specialty.specialty_id</code>.
     */
    public Integer getSpecialtyId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.specialty.original_id</code>.
     */
    public void setOriginalId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.specialty.original_id</code>.
     */
    public Integer getOriginalId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.specialty.parent_id</code>.
     */
    public void setParentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.specialty.parent_id</code>.
     */
    public Integer getParentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.specialty.qualification_code</code>.
     */
    public void setQualificationCode(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.specialty.qualification_code</code>.
     */
    public Integer getQualificationCode() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Specialty.SPECIALTY.SPECIALTY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Specialty.SPECIALTY.ORIGINAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Specialty.SPECIALTY.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Specialty.SPECIALTY.QUALIFICATION_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSpecialtyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOriginalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getQualificationCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecialtyRecord value1(Integer value) {
        setSpecialtyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecialtyRecord value2(Integer value) {
        setOriginalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecialtyRecord value3(Integer value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecialtyRecord value4(Integer value) {
        setQualificationCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecialtyRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpecialtyRecord
     */
    public SpecialtyRecord() {
        super(Specialty.SPECIALTY);
    }

    /**
     * Create a detached, initialised SpecialtyRecord
     */
    public SpecialtyRecord(Integer specialtyId, Integer originalId, Integer parentId, Integer qualificationCode) {
        super(Specialty.SPECIALTY);

        set(0, specialtyId);
        set(1, originalId);
        set(2, parentId);
        set(3, qualificationCode);
    }
}
