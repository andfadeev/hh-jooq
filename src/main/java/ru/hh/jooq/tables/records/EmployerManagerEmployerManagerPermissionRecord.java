/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.EmployerManagerEmployerManagerPermission;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerManagerEmployerManagerPermissionRecord extends UpdatableRecordImpl<EmployerManagerEmployerManagerPermissionRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = 666423484;

    /**
     * Setter for <code>public.employer_manager_employer_manager_permission.permission_owner_employer_manager_id</code>.
     */
    public void setPermissionOwnerEmployerManagerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employer_manager_employer_manager_permission.permission_owner_employer_manager_id</code>.
     */
    public Integer getPermissionOwnerEmployerManagerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.employer_manager_employer_manager_permission.subject_owner_employer_manager_id</code>.
     */
    public void setSubjectOwnerEmployerManagerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employer_manager_employer_manager_permission.subject_owner_employer_manager_id</code>.
     */
    public Integer getSubjectOwnerEmployerManagerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.employer_manager_employer_manager_permission.subject_type</code>.
     */
    public void setSubjectType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employer_manager_employer_manager_permission.subject_type</code>.
     */
    public String getSubjectType() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Integer, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return EmployerManagerEmployerManagerPermission.EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION.PERMISSION_OWNER_EMPLOYER_MANAGER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return EmployerManagerEmployerManagerPermission.EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION.SUBJECT_OWNER_EMPLOYER_MANAGER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return EmployerManagerEmployerManagerPermission.EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION.SUBJECT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPermissionOwnerEmployerManagerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getSubjectOwnerEmployerManagerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSubjectType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManagerEmployerManagerPermissionRecord value1(Integer value) {
        setPermissionOwnerEmployerManagerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManagerEmployerManagerPermissionRecord value2(Integer value) {
        setSubjectOwnerEmployerManagerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManagerEmployerManagerPermissionRecord value3(String value) {
        setSubjectType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManagerEmployerManagerPermissionRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployerManagerEmployerManagerPermissionRecord
     */
    public EmployerManagerEmployerManagerPermissionRecord() {
        super(EmployerManagerEmployerManagerPermission.EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION);
    }

    /**
     * Create a detached, initialised EmployerManagerEmployerManagerPermissionRecord
     */
    public EmployerManagerEmployerManagerPermissionRecord(Integer permissionOwnerEmployerManagerId, Integer subjectOwnerEmployerManagerId, String subjectType) {
        super(EmployerManagerEmployerManagerPermission.EMPLOYER_MANAGER_EMPLOYER_MANAGER_PERMISSION);

        set(0, permissionOwnerEmployerManagerId);
        set(1, subjectOwnerEmployerManagerId);
        set(2, subjectType);
    }
}
