/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;

import ru.hh.jooq.tables.TmpWrongAspes;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmpWrongAspesRecord extends TableRecordImpl<TmpWrongAspesRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = -1435445031;

    /**
     * Setter for <code>public.tmp_wrong_aspes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tmp_wrong_aspes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tmp_wrong_aspes.count1</code>.
     */
    public void setCount1(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tmp_wrong_aspes.count1</code>.
     */
    public Integer getCount1() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.tmp_wrong_aspes.count2</code>.
     */
    public void setCount2(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tmp_wrong_aspes.count2</code>.
     */
    public Integer getCount2() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TmpWrongAspes.TMP_WRONG_ASPES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TmpWrongAspes.TMP_WRONG_ASPES.COUNT1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return TmpWrongAspes.TMP_WRONG_ASPES.COUNT2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCount1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCount2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmpWrongAspesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmpWrongAspesRecord value2(Integer value) {
        setCount1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmpWrongAspesRecord value3(Integer value) {
        setCount2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmpWrongAspesRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TmpWrongAspesRecord
     */
    public TmpWrongAspesRecord() {
        super(TmpWrongAspes.TMP_WRONG_ASPES);
    }

    /**
     * Create a detached, initialised TmpWrongAspesRecord
     */
    public TmpWrongAspesRecord(Integer id, Integer count1, Integer count2) {
        super(TmpWrongAspes.TMP_WRONG_ASPES);

        set(0, id);
        set(1, count1);
        set(2, count2);
    }
}
