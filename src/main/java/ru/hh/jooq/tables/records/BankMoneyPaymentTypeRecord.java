/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.BankMoneyPaymentType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankMoneyPaymentTypeRecord extends UpdatableRecordImpl<BankMoneyPaymentTypeRecord> implements Record5<Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -46470768;

    /**
     * Setter for <code>public.bank_money_payment_type.bank_money_payment_type_id</code>.
     */
    public void setBankMoneyPaymentTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.bank_money_payment_type.bank_money_payment_type_id</code>.
     */
    public Integer getBankMoneyPaymentTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.bank_money_payment_type.payment_type</code>.
     */
    public void setPaymentType(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.bank_money_payment_type.payment_type</code>.
     */
    public Integer getPaymentType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.bank_money_payment_type.money_type</code>.
     */
    public void setMoneyType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.bank_money_payment_type.money_type</code>.
     */
    public Integer getMoneyType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.bank_money_payment_type.bank_id</code>.
     */
    public void setBankId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.bank_money_payment_type.bank_id</code>.
     */
    public Integer getBankId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.bank_money_payment_type.view_order</code>.
     */
    public void setViewOrder(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.bank_money_payment_type.view_order</code>.
     */
    public Integer getViewOrder() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return BankMoneyPaymentType.BANK_MONEY_PAYMENT_TYPE.BANK_MONEY_PAYMENT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return BankMoneyPaymentType.BANK_MONEY_PAYMENT_TYPE.PAYMENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return BankMoneyPaymentType.BANK_MONEY_PAYMENT_TYPE.MONEY_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return BankMoneyPaymentType.BANK_MONEY_PAYMENT_TYPE.BANK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return BankMoneyPaymentType.BANK_MONEY_PAYMENT_TYPE.VIEW_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getBankMoneyPaymentTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPaymentType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getMoneyType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getBankId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getViewOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankMoneyPaymentTypeRecord value1(Integer value) {
        setBankMoneyPaymentTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankMoneyPaymentTypeRecord value2(Integer value) {
        setPaymentType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankMoneyPaymentTypeRecord value3(Integer value) {
        setMoneyType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankMoneyPaymentTypeRecord value4(Integer value) {
        setBankId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankMoneyPaymentTypeRecord value5(Integer value) {
        setViewOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankMoneyPaymentTypeRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankMoneyPaymentTypeRecord
     */
    public BankMoneyPaymentTypeRecord() {
        super(BankMoneyPaymentType.BANK_MONEY_PAYMENT_TYPE);
    }

    /**
     * Create a detached, initialised BankMoneyPaymentTypeRecord
     */
    public BankMoneyPaymentTypeRecord(Integer bankMoneyPaymentTypeId, Integer paymentType, Integer moneyType, Integer bankId, Integer viewOrder) {
        super(BankMoneyPaymentType.BANK_MONEY_PAYMENT_TYPE);

        set(0, bankMoneyPaymentTypeId);
        set(1, paymentType);
        set(2, moneyType);
        set(3, bankId);
        set(4, viewOrder);
    }
}
