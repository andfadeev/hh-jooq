/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.HostAlias;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HostAliasRecord extends UpdatableRecordImpl<HostAliasRecord> implements Record3<String, Integer, Integer> {

    private static final long serialVersionUID = 1584191721;

    /**
     * Setter for <code>public.host_alias.domain</code>.
     */
    public void setDomain(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.host_alias.domain</code>.
     */
    public String getDomain() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.host_alias.platform</code>.
     */
    public void setPlatform(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.host_alias.platform</code>.
     */
    public Integer getPlatform() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.host_alias.area</code>.
     */
    public void setArea(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.host_alias.area</code>.
     */
    public Integer getArea() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return HostAlias.HOST_ALIAS.DOMAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return HostAlias.HOST_ALIAS.PLATFORM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return HostAlias.HOST_ALIAS.AREA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDomain();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPlatform();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getArea();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostAliasRecord value1(String value) {
        setDomain(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostAliasRecord value2(Integer value) {
        setPlatform(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostAliasRecord value3(Integer value) {
        setArea(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostAliasRecord values(String value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HostAliasRecord
     */
    public HostAliasRecord() {
        super(HostAlias.HOST_ALIAS);
    }

    /**
     * Create a detached, initialised HostAliasRecord
     */
    public HostAliasRecord(String domain, Integer platform, Integer area) {
        super(HostAlias.HOST_ALIAS);

        set(0, domain);
        set(1, platform);
        set(2, area);
    }
}
