/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;

import ru.hh.jooq.tables.SiteCurrency;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SiteCurrencyRecord extends TableRecordImpl<SiteCurrencyRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -1443840848;

    /**
     * Setter for <code>public.site_currency.site_id</code>.
     */
    public void setSiteId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.site_currency.site_id</code>.
     */
    public Integer getSiteId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.site_currency.available_currency_id</code>.
     */
    public void setAvailableCurrencyId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.site_currency.available_currency_id</code>.
     */
    public Integer getAvailableCurrencyId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.site_currency.available_currency</code>.
     */
    public void setAvailableCurrency(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.site_currency.available_currency</code>.
     */
    public String getAvailableCurrency() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SiteCurrency.SITE_CURRENCY.SITE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return SiteCurrency.SITE_CURRENCY.AVAILABLE_CURRENCY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SiteCurrency.SITE_CURRENCY.AVAILABLE_CURRENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSiteId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAvailableCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAvailableCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SiteCurrencyRecord value1(Integer value) {
        setSiteId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SiteCurrencyRecord value2(Integer value) {
        setAvailableCurrencyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SiteCurrencyRecord value3(String value) {
        setAvailableCurrency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SiteCurrencyRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SiteCurrencyRecord
     */
    public SiteCurrencyRecord() {
        super(SiteCurrency.SITE_CURRENCY);
    }

    /**
     * Create a detached, initialised SiteCurrencyRecord
     */
    public SiteCurrencyRecord(Integer siteId, Integer availableCurrencyId, String availableCurrency) {
        super(SiteCurrency.SITE_CURRENCY);

        set(0, siteId);
        set(1, availableCurrencyId);
        set(2, availableCurrency);
    }
}
