/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;

import ru.hh.jooq.tables.SessionLimitExceededEvent;


/**
 * HH-37567 Contains hhid and time information about session limit exceeded 
 * event
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionLimitExceededEventRecord extends TableRecordImpl<SessionLimitExceededEventRecord> implements Record3<Long, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 33496419;

    /**
     * Setter for <code>public.session_limit_exceeded_event.hhid</code>.
     */
    public void setHhid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.session_limit_exceeded_event.hhid</code>.
     */
    public Long getHhid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.session_limit_exceeded_event.event_time</code>.
     */
    public void setEventTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.session_limit_exceeded_event.event_time</code>.
     */
    public LocalDateTime getEventTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.session_limit_exceeded_event.processed</code>.
     */
    public void setProcessed(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.session_limit_exceeded_event.processed</code>.
     */
    public Boolean getProcessed() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, LocalDateTime, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, LocalDateTime, Boolean> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SessionLimitExceededEvent.SESSION_LIMIT_EXCEEDED_EVENT.HHID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return SessionLimitExceededEvent.SESSION_LIMIT_EXCEEDED_EVENT.EVENT_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return SessionLimitExceededEvent.SESSION_LIMIT_EXCEEDED_EVENT.PROCESSED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getHhid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getEventTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getProcessed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionLimitExceededEventRecord value1(Long value) {
        setHhid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionLimitExceededEventRecord value2(LocalDateTime value) {
        setEventTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionLimitExceededEventRecord value3(Boolean value) {
        setProcessed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionLimitExceededEventRecord values(Long value1, LocalDateTime value2, Boolean value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SessionLimitExceededEventRecord
     */
    public SessionLimitExceededEventRecord() {
        super(SessionLimitExceededEvent.SESSION_LIMIT_EXCEEDED_EVENT);
    }

    /**
     * Create a detached, initialised SessionLimitExceededEventRecord
     */
    public SessionLimitExceededEventRecord(Long hhid, LocalDateTime eventTime, Boolean processed) {
        super(SessionLimitExceededEvent.SESSION_LIMIT_EXCEEDED_EVENT);

        set(0, hhid);
        set(1, eventTime);
        set(2, processed);
    }
}
