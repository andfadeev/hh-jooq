/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.VacancyCatalogPage;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyCatalogPageRecord extends UpdatableRecordImpl<VacancyCatalogPageRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 510723920;

    /**
     * Setter for <code>public.vacancy_catalog_page.translit</code>.
     */
    public void setTranslit(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.vacancy_catalog_page.translit</code>.
     */
    public String getTranslit() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.vacancy_catalog_page.nominative_query</code>.
     */
    public void setNominativeQuery(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.vacancy_catalog_page.nominative_query</code>.
     */
    public String getNominativeQuery() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.vacancy_catalog_page.ablative_query</code>.
     */
    public void setAblativeQuery(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.vacancy_catalog_page.ablative_query</code>.
     */
    public String getAblativeQuery() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.vacancy_catalog_page.genitive_query_plural</code>.
     */
    public void setGenitiveQueryPlural(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.vacancy_catalog_page.genitive_query_plural</code>.
     */
    public String getGenitiveQueryPlural() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return VacancyCatalogPage.VACANCY_CATALOG_PAGE.TRANSLIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return VacancyCatalogPage.VACANCY_CATALOG_PAGE.NOMINATIVE_QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return VacancyCatalogPage.VACANCY_CATALOG_PAGE.ABLATIVE_QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return VacancyCatalogPage.VACANCY_CATALOG_PAGE.GENITIVE_QUERY_PLURAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTranslit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNominativeQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAblativeQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getGenitiveQueryPlural();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyCatalogPageRecord value1(String value) {
        setTranslit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyCatalogPageRecord value2(String value) {
        setNominativeQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyCatalogPageRecord value3(String value) {
        setAblativeQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyCatalogPageRecord value4(String value) {
        setGenitiveQueryPlural(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyCatalogPageRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VacancyCatalogPageRecord
     */
    public VacancyCatalogPageRecord() {
        super(VacancyCatalogPage.VACANCY_CATALOG_PAGE);
    }

    /**
     * Create a detached, initialised VacancyCatalogPageRecord
     */
    public VacancyCatalogPageRecord(String translit, String nominativeQuery, String ablativeQuery, String genitiveQueryPlural) {
        super(VacancyCatalogPage.VACANCY_CATALOG_PAGE);

        set(0, translit);
        set(1, nominativeQuery);
        set(2, ablativeQuery);
        set(3, genitiveQueryPlural);
    }
}
