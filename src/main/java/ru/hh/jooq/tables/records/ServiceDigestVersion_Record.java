/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.ServiceDigestVersion_;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceDigestVersion_Record extends UpdatableRecordImpl<ServiceDigestVersion_Record> implements Record7<Integer, Boolean, LocalDateTime, Integer, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = -1112429983;

    /**
     * Setter for <code>public.service_digest_version_.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.service_digest_version_.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.service_digest_version_.confirmed</code>. unused
     */
    public void setConfirmed(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.service_digest_version_.confirmed</code>. unused
     */
    public Boolean getConfirmed() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.service_digest_version_.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.service_digest_version_.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.service_digest_version_.optimistic_lock</code>.
     */
    public void setOptimisticLock(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.service_digest_version_.optimistic_lock</code>.
     */
    public Integer getOptimisticLock() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.service_digest_version_.reset_mode</code>.
     */
    public void setResetMode(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.service_digest_version_.reset_mode</code>.
     */
    public LocalDateTime getResetMode() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.service_digest_version_.sent</code>. unused
     */
    public void setSent(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.service_digest_version_.sent</code>. unused
     */
    public LocalDateTime getSent() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.service_digest_version_.version</code>.
     */
    public void setVersion(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.service_digest_version_.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Boolean, LocalDateTime, Integer, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Boolean, LocalDateTime, Integer, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ServiceDigestVersion_.SERVICE_DIGEST_VERSION_.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field2() {
        return ServiceDigestVersion_.SERVICE_DIGEST_VERSION_.CONFIRMED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return ServiceDigestVersion_.SERVICE_DIGEST_VERSION_.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ServiceDigestVersion_.SERVICE_DIGEST_VERSION_.OPTIMISTIC_LOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return ServiceDigestVersion_.SERVICE_DIGEST_VERSION_.RESET_MODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field6() {
        return ServiceDigestVersion_.SERVICE_DIGEST_VERSION_.SENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return ServiceDigestVersion_.SERVICE_DIGEST_VERSION_.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value2() {
        return getConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getOptimisticLock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getResetMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value6() {
        return getSent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record value2(Boolean value) {
        setConfirmed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record value3(LocalDateTime value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record value4(Integer value) {
        setOptimisticLock(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record value5(LocalDateTime value) {
        setResetMode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record value6(LocalDateTime value) {
        setSent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record value7(Integer value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion_Record values(Integer value1, Boolean value2, LocalDateTime value3, Integer value4, LocalDateTime value5, LocalDateTime value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServiceDigestVersion_Record
     */
    public ServiceDigestVersion_Record() {
        super(ServiceDigestVersion_.SERVICE_DIGEST_VERSION_);
    }

    /**
     * Create a detached, initialised ServiceDigestVersion_Record
     */
    public ServiceDigestVersion_Record(Integer id, Boolean confirmed, LocalDateTime date, Integer optimisticLock, LocalDateTime resetMode, LocalDateTime sent, Integer version) {
        super(ServiceDigestVersion_.SERVICE_DIGEST_VERSION_);

        set(0, id);
        set(1, confirmed);
        set(2, date);
        set(3, optimisticLock);
        set(4, resetMode);
        set(5, sent);
        set(6, version);
    }
}
