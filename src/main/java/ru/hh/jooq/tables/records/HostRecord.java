/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Host;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HostRecord extends UpdatableRecordImpl<HostRecord> implements Record5<String, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 1384798394;

    /**
     * Setter for <code>public.host.domain</code>.
     */
    public void setDomain(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.host.domain</code>.
     */
    public String getDomain() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.host.platform</code>.
     */
    public void setPlatform(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.host.platform</code>.
     */
    public Integer getPlatform() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.host.area</code>.
     */
    public void setArea(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.host.area</code>.
     */
    public Integer getArea() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.host.city</code>.
     */
    public void setCity(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.host.city</code>.
     */
    public Integer getCity() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.host.transliteration</code>.
     */
    public void setTransliteration(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.host.transliteration</code>.
     */
    public String getTransliteration() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Integer, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Integer, Integer, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Host.HOST.DOMAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Host.HOST.PLATFORM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Host.HOST.AREA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Host.HOST.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Host.HOST.TRANSLITERATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDomain();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPlatform();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getArea();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTransliteration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostRecord value1(String value) {
        setDomain(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostRecord value2(Integer value) {
        setPlatform(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostRecord value3(Integer value) {
        setArea(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostRecord value4(Integer value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostRecord value5(String value) {
        setTransliteration(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HostRecord values(String value1, Integer value2, Integer value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HostRecord
     */
    public HostRecord() {
        super(Host.HOST);
    }

    /**
     * Create a detached, initialised HostRecord
     */
    public HostRecord(String domain, Integer platform, Integer area, Integer city, String transliteration) {
        super(Host.HOST);

        set(0, domain);
        set(1, platform);
        set(2, area);
        set(3, city);
        set(4, transliteration);
    }
}
