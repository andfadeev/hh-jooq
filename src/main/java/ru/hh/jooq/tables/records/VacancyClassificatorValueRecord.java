/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.VacancyClassificatorValue;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyClassificatorValueRecord extends UpdatableRecordImpl<VacancyClassificatorValueRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = 526097177;

    /**
     * Setter for <code>public.vacancy_classificator_value.vacancy_classificator_value_id</code>.
     */
    public void setVacancyClassificatorValueId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.vacancy_classificator_value.vacancy_classificator_value_id</code>.
     */
    public Integer getVacancyClassificatorValueId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.vacancy_classificator_value.classificator_code</code>.
     */
    public void setClassificatorCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.vacancy_classificator_value.classificator_code</code>.
     */
    public String getClassificatorCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.vacancy_classificator_value.value</code>.
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.vacancy_classificator_value.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.vacancy_classificator_value.vacancy_id</code>.
     */
    public void setVacancyId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.vacancy_classificator_value.vacancy_id</code>.
     */
    public Integer getVacancyId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return VacancyClassificatorValue.VACANCY_CLASSIFICATOR_VALUE.VACANCY_CLASSIFICATOR_VALUE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return VacancyClassificatorValue.VACANCY_CLASSIFICATOR_VALUE.CLASSIFICATOR_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return VacancyClassificatorValue.VACANCY_CLASSIFICATOR_VALUE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return VacancyClassificatorValue.VACANCY_CLASSIFICATOR_VALUE.VACANCY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getVacancyClassificatorValueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getClassificatorCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getVacancyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyClassificatorValueRecord value1(Integer value) {
        setVacancyClassificatorValueId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyClassificatorValueRecord value2(String value) {
        setClassificatorCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyClassificatorValueRecord value3(String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyClassificatorValueRecord value4(Integer value) {
        setVacancyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyClassificatorValueRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VacancyClassificatorValueRecord
     */
    public VacancyClassificatorValueRecord() {
        super(VacancyClassificatorValue.VACANCY_CLASSIFICATOR_VALUE);
    }

    /**
     * Create a detached, initialised VacancyClassificatorValueRecord
     */
    public VacancyClassificatorValueRecord(Integer vacancyClassificatorValueId, String classificatorCode, String value, Integer vacancyId) {
        super(VacancyClassificatorValue.VACANCY_CLASSIFICATOR_VALUE);

        set(0, vacancyClassificatorValueId);
        set(1, classificatorCode);
        set(2, value);
        set(3, vacancyId);
    }
}
