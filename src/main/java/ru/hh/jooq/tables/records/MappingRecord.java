/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Mapping;


/**
 * Группировка вакансий поверх уже определенных группировок по департаментам, 
 * регионам и классификаторам. Перенесено из схемы hhservice.hhemployer по 
 * задаче HH-38267
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MappingRecord extends UpdatableRecordImpl<MappingRecord> implements Record7<String, Integer, String, String, String, String, Integer> {

    private static final long serialVersionUID = -1496938403;

    /**
     * Setter for <code>public.mapping.holding_code</code>.
     */
    public void setHoldingCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mapping.holding_code</code>.
     */
    public String getHoldingCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.mapping.employer_id</code>.
     */
    public void setEmployerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mapping.employer_id</code>.
     */
    public Integer getEmployerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.mapping.grouping_value</code>.
     */
    public void setGroupingValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mapping.grouping_value</code>.
     */
    public String getGroupingValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.mapping.new_grouping_value</code>.
     */
    public void setNewGroupingValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.mapping.new_grouping_value</code>.
     */
    public String getNewGroupingValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.mapping.new_grouping_type</code>.
     */
    public void setNewGroupingType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.mapping.new_grouping_type</code>.
     */
    public String getNewGroupingType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.mapping.new_grouping_code</code>.
     */
    public void setNewGroupingCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.mapping.new_grouping_code</code>.
     */
    public String getNewGroupingCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.mapping.id</code>.
     */
    public void setId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.mapping.id</code>.
     */
    public Integer getId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Integer, String, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Integer, String, String, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Mapping.MAPPING.HOLDING_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Mapping.MAPPING.EMPLOYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Mapping.MAPPING.GROUPING_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Mapping.MAPPING.NEW_GROUPING_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Mapping.MAPPING.NEW_GROUPING_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Mapping.MAPPING.NEW_GROUPING_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Mapping.MAPPING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getHoldingCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getEmployerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getGroupingValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getNewGroupingValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getNewGroupingType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getNewGroupingCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord value1(String value) {
        setHoldingCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord value2(Integer value) {
        setEmployerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord value3(String value) {
        setGroupingValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord value4(String value) {
        setNewGroupingValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord value5(String value) {
        setNewGroupingType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord value6(String value) {
        setNewGroupingCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord value7(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MappingRecord values(String value1, Integer value2, String value3, String value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MappingRecord
     */
    public MappingRecord() {
        super(Mapping.MAPPING);
    }

    /**
     * Create a detached, initialised MappingRecord
     */
    public MappingRecord(String holdingCode, Integer employerId, String groupingValue, String newGroupingValue, String newGroupingType, String newGroupingCode, Integer id) {
        super(Mapping.MAPPING);

        set(0, holdingCode);
        set(1, employerId);
        set(2, groupingValue);
        set(3, newGroupingValue);
        set(4, newGroupingType);
        set(5, newGroupingCode);
        set(6, id);
    }
}
