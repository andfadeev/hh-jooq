/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.DigestClient;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DigestClientRecord extends UpdatableRecordImpl<DigestClientRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1281898267;

    /**
     * Setter for <code>public.digest_client.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.digest_client.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.digest_client.base_url_key</code>.
     */
    public void setBaseUrlKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.digest_client.base_url_key</code>.
     */
    public String getBaseUrlKey() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DigestClient.DIGEST_CLIENT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DigestClient.DIGEST_CLIENT.BASE_URL_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBaseUrlKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DigestClientRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DigestClientRecord value2(String value) {
        setBaseUrlKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DigestClientRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DigestClientRecord
     */
    public DigestClientRecord() {
        super(DigestClient.DIGEST_CLIENT);
    }

    /**
     * Create a detached, initialised DigestClientRecord
     */
    public DigestClientRecord(String name, String baseUrlKey) {
        super(DigestClient.DIGEST_CLIENT);

        set(0, name);
        set(1, baseUrlKey);
    }
}
