/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.EventMailingEmployerBlockCountry;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventMailingEmployerBlockCountryRecord extends UpdatableRecordImpl<EventMailingEmployerBlockCountryRecord> implements Record2<String, Integer> {

    private static final long serialVersionUID = 1010001042;

    /**
     * Setter for <code>public.event_mailing_employer_block_country.block_event_type</code>.
     */
    public void setBlockEventType(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.event_mailing_employer_block_country.block_event_type</code>.
     */
    public String getBlockEventType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.event_mailing_employer_block_country.country_id</code>.
     */
    public void setCountryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.event_mailing_employer_block_country.country_id</code>.
     */
    public Integer getCountryId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return EventMailingEmployerBlockCountry.EVENT_MAILING_EMPLOYER_BLOCK_COUNTRY.BLOCK_EVENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return EventMailingEmployerBlockCountry.EVENT_MAILING_EMPLOYER_BLOCK_COUNTRY.COUNTRY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getBlockEventType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCountryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMailingEmployerBlockCountryRecord value1(String value) {
        setBlockEventType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMailingEmployerBlockCountryRecord value2(Integer value) {
        setCountryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMailingEmployerBlockCountryRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventMailingEmployerBlockCountryRecord
     */
    public EventMailingEmployerBlockCountryRecord() {
        super(EventMailingEmployerBlockCountry.EVENT_MAILING_EMPLOYER_BLOCK_COUNTRY);
    }

    /**
     * Create a detached, initialised EventMailingEmployerBlockCountryRecord
     */
    public EventMailingEmployerBlockCountryRecord(String blockEventType, Integer countryId) {
        super(EventMailingEmployerBlockCountry.EVENT_MAILING_EMPLOYER_BLOCK_COUNTRY);

        set(0, blockEventType);
        set(1, countryId);
    }
}
