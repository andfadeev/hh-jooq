/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Specialization;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpecializationRecord extends UpdatableRecordImpl<SpecializationRecord> implements Record7<Integer, Integer, String, Integer, Integer, String, Boolean> {

    private static final long serialVersionUID = 1856486009;

    /**
     * Setter for <code>public.specialization.specialization_id</code>.
     */
    public void setSpecializationId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.specialization.specialization_id</code>.
     */
    public Integer getSpecializationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.specialization.professional_area_id</code>.
     */
    public void setProfessionalAreaId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.specialization.professional_area_id</code>.
     */
    public Integer getProfessionalAreaId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.specialization.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.specialization.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.specialization.alias</code>.
     */
    public void setAlias(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.specialization.alias</code>.
     */
    public Integer getAlias() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.specialization.platforms_bitset</code>.
     */
    public void setPlatformsBitset(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.specialization.platforms_bitset</code>.
     */
    public Integer getPlatformsBitset() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.specialization.ru_translit</code>.
     */
    public void setRuTranslit(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.specialization.ru_translit</code>.
     */
    public String getRuTranslit() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.specialization.visible</code>.
     */
    public void setVisible(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.specialization.visible</code>.
     */
    public Boolean getVisible() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, String, Integer, Integer, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, String, Integer, Integer, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Specialization.SPECIALIZATION.SPECIALIZATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Specialization.SPECIALIZATION.PROFESSIONAL_AREA_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Specialization.SPECIALIZATION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Specialization.SPECIALIZATION.ALIAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Specialization.SPECIALIZATION.PLATFORMS_BITSET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Specialization.SPECIALIZATION.RU_TRANSLIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return Specialization.SPECIALIZATION.VISIBLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSpecializationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getProfessionalAreaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPlatformsBitset();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getRuTranslit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getVisible();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord value1(Integer value) {
        setSpecializationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord value2(Integer value) {
        setProfessionalAreaId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord value4(Integer value) {
        setAlias(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord value5(Integer value) {
        setPlatformsBitset(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord value6(String value) {
        setRuTranslit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord value7(Boolean value) {
        setVisible(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpecializationRecord values(Integer value1, Integer value2, String value3, Integer value4, Integer value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpecializationRecord
     */
    public SpecializationRecord() {
        super(Specialization.SPECIALIZATION);
    }

    /**
     * Create a detached, initialised SpecializationRecord
     */
    public SpecializationRecord(Integer specializationId, Integer professionalAreaId, String name, Integer alias, Integer platformsBitset, String ruTranslit, Boolean visible) {
        super(Specialization.SPECIALIZATION);

        set(0, specializationId);
        set(1, professionalAreaId);
        set(2, name);
        set(3, alias);
        set(4, platformsBitset);
        set(5, ruTranslit);
        set(6, visible);
    }
}
