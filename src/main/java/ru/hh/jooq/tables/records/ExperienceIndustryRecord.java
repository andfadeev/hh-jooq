/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.ExperienceIndustry;


/**
 * many-to-many cross table between experience and industry
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperienceIndustryRecord extends UpdatableRecordImpl<ExperienceIndustryRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1258444886;

    /**
     * Setter for <code>public.experience_industry.experience_id</code>.
     */
    public void setExperienceId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.experience_industry.experience_id</code>.
     */
    public Integer getExperienceId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.experience_industry.industry_id</code>.
     */
    public void setIndustryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.experience_industry.industry_id</code>.
     */
    public Integer getIndustryId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ExperienceIndustry.EXPERIENCE_INDUSTRY.EXPERIENCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ExperienceIndustry.EXPERIENCE_INDUSTRY.INDUSTRY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getExperienceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIndustryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperienceIndustryRecord value1(Integer value) {
        setExperienceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperienceIndustryRecord value2(Integer value) {
        setIndustryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperienceIndustryRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExperienceIndustryRecord
     */
    public ExperienceIndustryRecord() {
        super(ExperienceIndustry.EXPERIENCE_INDUSTRY);
    }

    /**
     * Create a detached, initialised ExperienceIndustryRecord
     */
    public ExperienceIndustryRecord(Integer experienceId, Integer industryId) {
        super(ExperienceIndustry.EXPERIENCE_INDUSTRY);

        set(0, experienceId);
        set(1, industryId);
    }
}
