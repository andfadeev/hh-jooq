/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Complain;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComplainRecord extends UpdatableRecordImpl<ComplainRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 445234375;

    /**
     * Setter for <code>public.complain.feedback_id</code>.
     */
    public void setFeedbackId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.complain.feedback_id</code>.
     */
    public Integer getFeedbackId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.complain.employer_id</code>.
     */
    public void setEmployerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.complain.employer_id</code>.
     */
    public Integer getEmployerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.complain.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.complain.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.complain.vacancy_id</code>.
     */
    public void setVacancyId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.complain.vacancy_id</code>.
     */
    public Integer getVacancyId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Complain.COMPLAIN.FEEDBACK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Complain.COMPLAIN.EMPLOYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Complain.COMPLAIN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Complain.COMPLAIN.VACANCY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFeedbackId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getEmployerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getVacancyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ComplainRecord value1(Integer value) {
        setFeedbackId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ComplainRecord value2(Integer value) {
        setEmployerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ComplainRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ComplainRecord value4(Integer value) {
        setVacancyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ComplainRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComplainRecord
     */
    public ComplainRecord() {
        super(Complain.COMPLAIN);
    }

    /**
     * Create a detached, initialised ComplainRecord
     */
    public ComplainRecord(Integer feedbackId, Integer employerId, Integer userId, Integer vacancyId) {
        super(Complain.COMPLAIN);

        set(0, feedbackId);
        set(1, employerId);
        set(2, userId);
        set(3, vacancyId);
    }
}
