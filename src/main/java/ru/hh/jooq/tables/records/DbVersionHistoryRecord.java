/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.DbVersionHistory;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbVersionHistoryRecord extends UpdatableRecordImpl<DbVersionHistoryRecord> implements Record3<Integer, LocalDateTime, String> {

    private static final long serialVersionUID = 1535202191;

    /**
     * Setter for <code>public.db_version_history.db_version_history_id</code>.
     */
    public void setDbVersionHistoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.db_version_history.db_version_history_id</code>.
     */
    public Integer getDbVersionHistoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.db_version_history.install_time</code>.
     */
    public void setInstallTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.db_version_history.install_time</code>.
     */
    public LocalDateTime getInstallTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.db_version_history.version</code>.
     */
    public void setVersion(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.db_version_history.version</code>.
     */
    public String getVersion() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, LocalDateTime, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, LocalDateTime, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DbVersionHistory.DB_VERSION_HISTORY.DB_VERSION_HISTORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return DbVersionHistory.DB_VERSION_HISTORY.INSTALL_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DbVersionHistory.DB_VERSION_HISTORY.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDbVersionHistoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getInstallTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVersionHistoryRecord value1(Integer value) {
        setDbVersionHistoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVersionHistoryRecord value2(LocalDateTime value) {
        setInstallTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVersionHistoryRecord value3(String value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbVersionHistoryRecord values(Integer value1, LocalDateTime value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbVersionHistoryRecord
     */
    public DbVersionHistoryRecord() {
        super(DbVersionHistory.DB_VERSION_HISTORY);
    }

    /**
     * Create a detached, initialised DbVersionHistoryRecord
     */
    public DbVersionHistoryRecord(Integer dbVersionHistoryId, LocalDateTime installTime, String version) {
        super(DbVersionHistory.DB_VERSION_HISTORY);

        set(0, dbVersionHistoryId);
        set(1, installTime);
        set(2, version);
    }
}
