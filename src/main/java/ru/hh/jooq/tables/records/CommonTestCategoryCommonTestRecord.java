/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.CommonTestCategoryCommonTest;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonTestCategoryCommonTestRecord extends UpdatableRecordImpl<CommonTestCategoryCommonTestRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -920013608;

    /**
     * Setter for <code>public.common_test_category_common_test.common_test_category_id</code>.
     */
    public void setCommonTestCategoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.common_test_category_common_test.common_test_category_id</code>.
     */
    public Integer getCommonTestCategoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.common_test_category_common_test.common_test_id</code>.
     */
    public void setCommonTestId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.common_test_category_common_test.common_test_id</code>.
     */
    public Integer getCommonTestId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CommonTestCategoryCommonTest.COMMON_TEST_CATEGORY_COMMON_TEST.COMMON_TEST_CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CommonTestCategoryCommonTest.COMMON_TEST_CATEGORY_COMMON_TEST.COMMON_TEST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCommonTestCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCommonTestId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommonTestCategoryCommonTestRecord value1(Integer value) {
        setCommonTestCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommonTestCategoryCommonTestRecord value2(Integer value) {
        setCommonTestId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommonTestCategoryCommonTestRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommonTestCategoryCommonTestRecord
     */
    public CommonTestCategoryCommonTestRecord() {
        super(CommonTestCategoryCommonTest.COMMON_TEST_CATEGORY_COMMON_TEST);
    }

    /**
     * Create a detached, initialised CommonTestCategoryCommonTestRecord
     */
    public CommonTestCategoryCommonTestRecord(Integer commonTestCategoryId, Integer commonTestId) {
        super(CommonTestCategoryCommonTest.COMMON_TEST_CATEGORY_COMMON_TEST);

        set(0, commonTestCategoryId);
        set(1, commonTestId);
    }
}
