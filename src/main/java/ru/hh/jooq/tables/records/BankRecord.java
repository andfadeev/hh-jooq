/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.Bank;


/**
 * Recurrent Service Area Scope availability
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankRecord extends UpdatableRecordImpl<BankRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 351230799;

    /**
     * Setter for <code>public.bank.bank_id</code>.
     */
    public void setBankId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.bank.bank_id</code>.
     */
    public Integer getBankId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.bank.label</code>.
     */
    public void setLabel(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.bank.label</code>.
     */
    public String getLabel() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.bank.code</code>.
     */
    public void setCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.bank.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.bank.parser_class</code>.
     */
    public void setParserClass(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.bank.parser_class</code>.
     */
    public String getParserClass() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Bank.BANK.BANK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Bank.BANK.LABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Bank.BANK.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Bank.BANK.PARSER_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getBankId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getParserClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankRecord value1(Integer value) {
        setBankId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankRecord value2(String value) {
        setLabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankRecord value3(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankRecord value4(String value) {
        setParserClass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankRecord
     */
    public BankRecord() {
        super(Bank.BANK);
    }

    /**
     * Create a detached, initialised BankRecord
     */
    public BankRecord(Integer bankId, String label, String code, String parserClass) {
        super(Bank.BANK);

        set(0, bankId);
        set(1, label);
        set(2, code);
        set(3, parserClass);
    }
}
