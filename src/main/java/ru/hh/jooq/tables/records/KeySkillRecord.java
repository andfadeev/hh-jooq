/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hh.jooq.tables.KeySkill;


/**
 * HH-37351 Contains key skills for resume
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeySkillRecord extends UpdatableRecordImpl<KeySkillRecord> implements Record5<Integer, Boolean, String, Integer, Boolean> {

    private static final long serialVersionUID = -108448138;

    /**
     * Setter for <code>public.key_skill.key_skill_id</code>.
     */
    public void setKeySkillId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.key_skill.key_skill_id</code>.
     */
    public Integer getKeySkillId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.key_skill.general</code>.
     */
    public void setGeneral(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.key_skill.general</code>.
     */
    public Boolean getGeneral() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.key_skill.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.key_skill.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.key_skill.parent_id</code>.
     */
    public void setParentId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.key_skill.parent_id</code>.
     */
    public Integer getParentId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.key_skill.searchable</code>.
     */
    public void setSearchable(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.key_skill.searchable</code>.
     */
    public Boolean getSearchable() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Boolean, String, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Boolean, String, Integer, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return KeySkill.KEY_SKILL.KEY_SKILL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field2() {
        return KeySkill.KEY_SKILL.GENERAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return KeySkill.KEY_SKILL.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return KeySkill.KEY_SKILL.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return KeySkill.KEY_SKILL.SEARCHABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getKeySkillId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value2() {
        return getGeneral();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getSearchable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeySkillRecord value1(Integer value) {
        setKeySkillId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeySkillRecord value2(Boolean value) {
        setGeneral(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeySkillRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeySkillRecord value4(Integer value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeySkillRecord value5(Boolean value) {
        setSearchable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeySkillRecord values(Integer value1, Boolean value2, String value3, Integer value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KeySkillRecord
     */
    public KeySkillRecord() {
        super(KeySkill.KEY_SKILL);
    }

    /**
     * Create a detached, initialised KeySkillRecord
     */
    public KeySkillRecord(Integer keySkillId, Boolean general, String name, Integer parentId, Boolean searchable) {
        super(KeySkill.KEY_SKILL);

        set(0, keySkillId);
        set(1, general);
        set(2, name);
        set(3, parentId);
        set(4, searchable);
    }
}
