/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;

import ru.hh.jooq.tables.DbActivity;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbActivityRecord extends TableRecordImpl<DbActivityRecord> implements Record11<Object, String, Object, Object, String, Integer, String, Boolean, Object, Integer, String> {

    private static final long serialVersionUID = -1783890584;

    /**
     * Setter for <code>public.db_activity.ts_age</code>.
     */
    public void setTsAge(Object value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.db_activity.ts_age</code>.
     */
    public Object getTsAge() {
        return (Object) get(0);
    }

    /**
     * Setter for <code>public.db_activity.state</code>.
     */
    public void setState(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.db_activity.state</code>.
     */
    public String getState() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.db_activity.query_age</code>.
     */
    public void setQueryAge(Object value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.db_activity.query_age</code>.
     */
    public Object getQueryAge() {
        return (Object) get(2);
    }

    /**
     * Setter for <code>public.db_activity.change_age</code>.
     */
    public void setChangeAge(Object value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.db_activity.change_age</code>.
     */
    public Object getChangeAge() {
        return (Object) get(3);
    }

    /**
     * Setter for <code>public.db_activity.datname</code>.
     */
    public void setDatname(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.db_activity.datname</code>.
     */
    public String getDatname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.db_activity.pid</code>.
     */
    public void setPid(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.db_activity.pid</code>.
     */
    public Integer getPid() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.db_activity.usename</code>.
     */
    public void setUsename(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.db_activity.usename</code>.
     */
    public String getUsename() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.db_activity.waiting</code>.
     */
    public void setWaiting(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.db_activity.waiting</code>.
     */
    public Boolean getWaiting() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.db_activity.client_addr</code>.
     */
    public void setClientAddr(Object value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.db_activity.client_addr</code>.
     */
    public Object getClientAddr() {
        return (Object) get(8);
    }

    /**
     * Setter for <code>public.db_activity.client_port</code>.
     */
    public void setClientPort(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.db_activity.client_port</code>.
     */
    public Integer getClientPort() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.db_activity.query</code>.
     */
    public void setQuery(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.db_activity.query</code>.
     */
    public String getQuery() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Object, String, Object, Object, String, Integer, String, Boolean, Object, Integer, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Object, String, Object, Object, String, Integer, String, Boolean, Object, Integer, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field1() {
        return DbActivity.DB_ACTIVITY.TS_AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DbActivity.DB_ACTIVITY.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field3() {
        return DbActivity.DB_ACTIVITY.QUERY_AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field4() {
        return DbActivity.DB_ACTIVITY.CHANGE_AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DbActivity.DB_ACTIVITY.DATNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return DbActivity.DB_ACTIVITY.PID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DbActivity.DB_ACTIVITY.USENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return DbActivity.DB_ACTIVITY.WAITING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field9() {
        return DbActivity.DB_ACTIVITY.CLIENT_ADDR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return DbActivity.DB_ACTIVITY.CLIENT_PORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return DbActivity.DB_ACTIVITY.QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value1() {
        return getTsAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value3() {
        return getQueryAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value4() {
        return getChangeAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDatname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getPid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUsename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getWaiting();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value9() {
        return getClientAddr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getClientPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value1(Object value) {
        setTsAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value2(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value3(Object value) {
        setQueryAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value4(Object value) {
        setChangeAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value5(String value) {
        setDatname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value6(Integer value) {
        setPid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value7(String value) {
        setUsename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value8(Boolean value) {
        setWaiting(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value9(Object value) {
        setClientAddr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value10(Integer value) {
        setClientPort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord value11(String value) {
        setQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbActivityRecord values(Object value1, String value2, Object value3, Object value4, String value5, Integer value6, String value7, Boolean value8, Object value9, Integer value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbActivityRecord
     */
    public DbActivityRecord() {
        super(DbActivity.DB_ACTIVITY);
    }

    /**
     * Create a detached, initialised DbActivityRecord
     */
    public DbActivityRecord(Object tsAge, String state, Object queryAge, Object changeAge, String datname, Integer pid, String usename, Boolean waiting, Object clientAddr, Integer clientPort, String query) {
        super(DbActivity.DB_ACTIVITY);

        set(0, tsAge);
        set(1, state);
        set(2, queryAge);
        set(3, changeAge);
        set(4, datname);
        set(5, pid);
        set(6, usename);
        set(7, waiting);
        set(8, clientAddr);
        set(9, clientPort);
        set(10, query);
    }
}
