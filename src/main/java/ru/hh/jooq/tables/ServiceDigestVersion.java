/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ServiceDigestVersionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceDigestVersion extends TableImpl<ServiceDigestVersionRecord> {

    private static final long serialVersionUID = 704915829;

    /**
     * The reference instance of <code>public.service_digest_version</code>
     */
    public static final ServiceDigestVersion SERVICE_DIGEST_VERSION = new ServiceDigestVersion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceDigestVersionRecord> getRecordType() {
        return ServiceDigestVersionRecord.class;
    }

    /**
     * The column <code>public.service_digest_version.version</code>.
     */
    public final TableField<ServiceDigestVersionRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('service_digest_version_version_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.service_digest_version.employer_id</code>.
     */
    public final TableField<ServiceDigestVersionRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.service_digest_version.hash</code>.
     */
    public final TableField<ServiceDigestVersionRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>public.service_digest_version.max_service_id</code>.
     */
    public final TableField<ServiceDigestVersionRecord, Integer> MAX_SERVICE_ID = createField("max_service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.service_digest_version.max_ticket</code>.
     */
    public final TableField<ServiceDigestVersionRecord, Long> MAX_TICKET = createField("max_ticket", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.service_digest_version.confirmed</code>.
     */
    public final TableField<ServiceDigestVersionRecord, Boolean> CONFIRMED = createField("confirmed", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.service_digest_version.date</code>.
     */
    public final TableField<ServiceDigestVersionRecord, LocalDateTime> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>public.service_digest_version</code> table reference
     */
    public ServiceDigestVersion() {
        this("service_digest_version", null);
    }

    /**
     * Create an aliased <code>public.service_digest_version</code> table reference
     */
    public ServiceDigestVersion(String alias) {
        this(alias, SERVICE_DIGEST_VERSION);
    }

    private ServiceDigestVersion(String alias, Table<ServiceDigestVersionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceDigestVersion(String alias, Table<ServiceDigestVersionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceDigestVersionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVICE_DIGEST_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceDigestVersionRecord> getPrimaryKey() {
        return Keys.SERVICE_DIGEST_VERSION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceDigestVersionRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceDigestVersionRecord>>asList(Keys.SERVICE_DIGEST_VERSION_PKEY, Keys.SERVICE_DIGEST_VERSION_EMPLOYER_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceDigestVersion as(String alias) {
        return new ServiceDigestVersion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceDigestVersion rename(String name) {
        return new ServiceDigestVersion(name, null);
    }
}
