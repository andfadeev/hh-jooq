/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.VacancyTemplateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyTemplate extends TableImpl<VacancyTemplateRecord> {

    private static final long serialVersionUID = 730268473;

    /**
     * The reference instance of <code>public.vacancy_template</code>
     */
    public static final VacancyTemplate VACANCY_TEMPLATE = new VacancyTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacancyTemplateRecord> getRecordType() {
        return VacancyTemplateRecord.class;
    }

    /**
     * The column <code>public.vacancy_template.vacancy_template_id</code>.
     */
    public final TableField<VacancyTemplateRecord, Integer> VACANCY_TEMPLATE_ID = createField("vacancy_template_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('vacancy_template_vacancy_template_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy_template.vacancy_body_id</code>.
     */
    public final TableField<VacancyTemplateRecord, Integer> VACANCY_BODY_ID = createField("vacancy_body_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_template.name</code>.
     */
    public final TableField<VacancyTemplateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.vacancy_template.shared</code>.
     */
    public final TableField<VacancyTemplateRecord, Boolean> SHARED = createField("shared", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_template.employer_manager_id</code>.
     */
    public final TableField<VacancyTemplateRecord, Integer> EMPLOYER_MANAGER_ID = createField("employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_template.employer_id</code>.
     */
    public final TableField<VacancyTemplateRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.vacancy_template</code> table reference
     */
    public VacancyTemplate() {
        this("vacancy_template", null);
    }

    /**
     * Create an aliased <code>public.vacancy_template</code> table reference
     */
    public VacancyTemplate(String alias) {
        this(alias, VACANCY_TEMPLATE);
    }

    private VacancyTemplate(String alias, Table<VacancyTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private VacancyTemplate(String alias, Table<VacancyTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VacancyTemplateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VACANCY_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VacancyTemplateRecord> getPrimaryKey() {
        return Keys.VACANCY_TEMPLATE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VacancyTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<VacancyTemplateRecord>>asList(Keys.VACANCY_TEMPLATE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VacancyTemplateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VacancyTemplateRecord, ?>>asList(Keys.VACANCY_TEMPLATE__VACANCY_TEMPLATE_VACANCY_BODY_FK, Keys.VACANCY_TEMPLATE__VACANCY_TEMPLATE_EMPLOYER_MANAGER_FK, Keys.VACANCY_TEMPLATE__VACANCY_TEMPLATE_EMPLOYER_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyTemplate as(String alias) {
        return new VacancyTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VacancyTemplate rename(String name) {
        return new VacancyTemplate(name, null);
    }
}
