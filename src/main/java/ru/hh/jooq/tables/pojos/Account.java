/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Account implements Serializable {

    private static final long serialVersionUID = 575617875;

    private final Integer       accountId;
    private final Integer       employerId;
    private final LocalDateTime whiteBuhDate;
    private final LocalDate     vacancyFreeLastUpdate;
    private final Integer       sellerAccountId;
    private final String        employerDeedsReportEmail;
    private final Long          creditLineAmount;
    private final Integer       version_;
    private final Integer       mainIndividualPayerId;
    private final String        employerName;
    private final Integer       employerCategory;
    private final Integer       employerState;
    private final Integer       hhManagerId;
    private final String        hhManagerFullName;
    private final String        hhManagerEmail;
    private final String        employerManagerFirstName;
    private final String        employerManagerLastName;
    private final String        employerManagerEmail;
    private final String        employerManagerLang;
    private final Integer       employerMsgVersion;
    private final Boolean       paid;
    private final LocalDateTime created;
    private final Boolean       newAssist;
    private final Integer       employerJobSite;
    private final Boolean       fake;
    private final Boolean       employerDiscarded;
    private final Integer       employerAreaId;
    private final Integer       employerSiteId;
    private final String        hhManagerContactEmail;
    private final String        hhManagerPhone;
    private final String        hhManagerLang;
    private final Integer       employerManagerUserId;
    private final Integer       regionalOfficeId;
    private final LocalDateTime emailVerificationDate;

    public Account(Account value) {
        this.accountId = value.accountId;
        this.employerId = value.employerId;
        this.whiteBuhDate = value.whiteBuhDate;
        this.vacancyFreeLastUpdate = value.vacancyFreeLastUpdate;
        this.sellerAccountId = value.sellerAccountId;
        this.employerDeedsReportEmail = value.employerDeedsReportEmail;
        this.creditLineAmount = value.creditLineAmount;
        this.version_ = value.version_;
        this.mainIndividualPayerId = value.mainIndividualPayerId;
        this.employerName = value.employerName;
        this.employerCategory = value.employerCategory;
        this.employerState = value.employerState;
        this.hhManagerId = value.hhManagerId;
        this.hhManagerFullName = value.hhManagerFullName;
        this.hhManagerEmail = value.hhManagerEmail;
        this.employerManagerFirstName = value.employerManagerFirstName;
        this.employerManagerLastName = value.employerManagerLastName;
        this.employerManagerEmail = value.employerManagerEmail;
        this.employerManagerLang = value.employerManagerLang;
        this.employerMsgVersion = value.employerMsgVersion;
        this.paid = value.paid;
        this.created = value.created;
        this.newAssist = value.newAssist;
        this.employerJobSite = value.employerJobSite;
        this.fake = value.fake;
        this.employerDiscarded = value.employerDiscarded;
        this.employerAreaId = value.employerAreaId;
        this.employerSiteId = value.employerSiteId;
        this.hhManagerContactEmail = value.hhManagerContactEmail;
        this.hhManagerPhone = value.hhManagerPhone;
        this.hhManagerLang = value.hhManagerLang;
        this.employerManagerUserId = value.employerManagerUserId;
        this.regionalOfficeId = value.regionalOfficeId;
        this.emailVerificationDate = value.emailVerificationDate;
    }

    public Account(
        Integer       accountId,
        Integer       employerId,
        LocalDateTime whiteBuhDate,
        LocalDate     vacancyFreeLastUpdate,
        Integer       sellerAccountId,
        String        employerDeedsReportEmail,
        Long          creditLineAmount,
        Integer       version_,
        Integer       mainIndividualPayerId,
        String        employerName,
        Integer       employerCategory,
        Integer       employerState,
        Integer       hhManagerId,
        String        hhManagerFullName,
        String        hhManagerEmail,
        String        employerManagerFirstName,
        String        employerManagerLastName,
        String        employerManagerEmail,
        String        employerManagerLang,
        Integer       employerMsgVersion,
        Boolean       paid,
        LocalDateTime created,
        Boolean       newAssist,
        Integer       employerJobSite,
        Boolean       fake,
        Boolean       employerDiscarded,
        Integer       employerAreaId,
        Integer       employerSiteId,
        String        hhManagerContactEmail,
        String        hhManagerPhone,
        String        hhManagerLang,
        Integer       employerManagerUserId,
        Integer       regionalOfficeId,
        LocalDateTime emailVerificationDate
    ) {
        this.accountId = accountId;
        this.employerId = employerId;
        this.whiteBuhDate = whiteBuhDate;
        this.vacancyFreeLastUpdate = vacancyFreeLastUpdate;
        this.sellerAccountId = sellerAccountId;
        this.employerDeedsReportEmail = employerDeedsReportEmail;
        this.creditLineAmount = creditLineAmount;
        this.version_ = version_;
        this.mainIndividualPayerId = mainIndividualPayerId;
        this.employerName = employerName;
        this.employerCategory = employerCategory;
        this.employerState = employerState;
        this.hhManagerId = hhManagerId;
        this.hhManagerFullName = hhManagerFullName;
        this.hhManagerEmail = hhManagerEmail;
        this.employerManagerFirstName = employerManagerFirstName;
        this.employerManagerLastName = employerManagerLastName;
        this.employerManagerEmail = employerManagerEmail;
        this.employerManagerLang = employerManagerLang;
        this.employerMsgVersion = employerMsgVersion;
        this.paid = paid;
        this.created = created;
        this.newAssist = newAssist;
        this.employerJobSite = employerJobSite;
        this.fake = fake;
        this.employerDiscarded = employerDiscarded;
        this.employerAreaId = employerAreaId;
        this.employerSiteId = employerSiteId;
        this.hhManagerContactEmail = hhManagerContactEmail;
        this.hhManagerPhone = hhManagerPhone;
        this.hhManagerLang = hhManagerLang;
        this.employerManagerUserId = employerManagerUserId;
        this.regionalOfficeId = regionalOfficeId;
        this.emailVerificationDate = emailVerificationDate;
    }

    public Integer getAccountId() {
        return this.accountId;
    }

    public Integer getEmployerId() {
        return this.employerId;
    }

    public LocalDateTime getWhiteBuhDate() {
        return this.whiteBuhDate;
    }

    public LocalDate getVacancyFreeLastUpdate() {
        return this.vacancyFreeLastUpdate;
    }

    public Integer getSellerAccountId() {
        return this.sellerAccountId;
    }

    public String getEmployerDeedsReportEmail() {
        return this.employerDeedsReportEmail;
    }

    public Long getCreditLineAmount() {
        return this.creditLineAmount;
    }

    public Integer getVersion_() {
        return this.version_;
    }

    public Integer getMainIndividualPayerId() {
        return this.mainIndividualPayerId;
    }

    public String getEmployerName() {
        return this.employerName;
    }

    public Integer getEmployerCategory() {
        return this.employerCategory;
    }

    public Integer getEmployerState() {
        return this.employerState;
    }

    public Integer getHhManagerId() {
        return this.hhManagerId;
    }

    public String getHhManagerFullName() {
        return this.hhManagerFullName;
    }

    public String getHhManagerEmail() {
        return this.hhManagerEmail;
    }

    public String getEmployerManagerFirstName() {
        return this.employerManagerFirstName;
    }

    public String getEmployerManagerLastName() {
        return this.employerManagerLastName;
    }

    public String getEmployerManagerEmail() {
        return this.employerManagerEmail;
    }

    public String getEmployerManagerLang() {
        return this.employerManagerLang;
    }

    public Integer getEmployerMsgVersion() {
        return this.employerMsgVersion;
    }

    public Boolean getPaid() {
        return this.paid;
    }

    public LocalDateTime getCreated() {
        return this.created;
    }

    public Boolean getNewAssist() {
        return this.newAssist;
    }

    public Integer getEmployerJobSite() {
        return this.employerJobSite;
    }

    public Boolean getFake() {
        return this.fake;
    }

    public Boolean getEmployerDiscarded() {
        return this.employerDiscarded;
    }

    public Integer getEmployerAreaId() {
        return this.employerAreaId;
    }

    public Integer getEmployerSiteId() {
        return this.employerSiteId;
    }

    public String getHhManagerContactEmail() {
        return this.hhManagerContactEmail;
    }

    public String getHhManagerPhone() {
        return this.hhManagerPhone;
    }

    public String getHhManagerLang() {
        return this.hhManagerLang;
    }

    public Integer getEmployerManagerUserId() {
        return this.employerManagerUserId;
    }

    public Integer getRegionalOfficeId() {
        return this.regionalOfficeId;
    }

    public LocalDateTime getEmailVerificationDate() {
        return this.emailVerificationDate;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Account (");

        sb.append(accountId);
        sb.append(", ").append(employerId);
        sb.append(", ").append(whiteBuhDate);
        sb.append(", ").append(vacancyFreeLastUpdate);
        sb.append(", ").append(sellerAccountId);
        sb.append(", ").append(employerDeedsReportEmail);
        sb.append(", ").append(creditLineAmount);
        sb.append(", ").append(version_);
        sb.append(", ").append(mainIndividualPayerId);
        sb.append(", ").append(employerName);
        sb.append(", ").append(employerCategory);
        sb.append(", ").append(employerState);
        sb.append(", ").append(hhManagerId);
        sb.append(", ").append(hhManagerFullName);
        sb.append(", ").append(hhManagerEmail);
        sb.append(", ").append(employerManagerFirstName);
        sb.append(", ").append(employerManagerLastName);
        sb.append(", ").append(employerManagerEmail);
        sb.append(", ").append(employerManagerLang);
        sb.append(", ").append(employerMsgVersion);
        sb.append(", ").append(paid);
        sb.append(", ").append(created);
        sb.append(", ").append(newAssist);
        sb.append(", ").append(employerJobSite);
        sb.append(", ").append(fake);
        sb.append(", ").append(employerDiscarded);
        sb.append(", ").append(employerAreaId);
        sb.append(", ").append(employerSiteId);
        sb.append(", ").append(hhManagerContactEmail);
        sb.append(", ").append(hhManagerPhone);
        sb.append(", ").append(hhManagerLang);
        sb.append(", ").append(employerManagerUserId);
        sb.append(", ").append(regionalOfficeId);
        sb.append(", ").append(emailVerificationDate);

        sb.append(")");
        return sb.toString();
    }
}
