/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerManagerTemplatesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerManagerTemplates extends TableImpl<EmployerManagerTemplatesRecord> {

    private static final long serialVersionUID = 908237180;

    /**
     * The reference instance of <code>public.employer_manager_templates</code>
     */
    public static final EmployerManagerTemplates EMPLOYER_MANAGER_TEMPLATES = new EmployerManagerTemplates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerManagerTemplatesRecord> getRecordType() {
        return EmployerManagerTemplatesRecord.class;
    }

    /**
     * The column <code>public.employer_manager_templates.id</code>.
     */
    public final TableField<EmployerManagerTemplatesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_manager_templates_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager_templates.employer_manager_id</code>.
     */
    public final TableField<EmployerManagerTemplatesRecord, Integer> EMPLOYER_MANAGER_ID = createField("employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_manager_templates.template</code>.
     */
    public final TableField<EmployerManagerTemplatesRecord, String> TEMPLATE = createField("template", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.employer_manager_templates.type</code>.
     */
    public final TableField<EmployerManagerTemplatesRecord, Short> TYPE = createField("type", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>public.employer_manager_templates</code> table reference
     */
    public EmployerManagerTemplates() {
        this("employer_manager_templates", null);
    }

    /**
     * Create an aliased <code>public.employer_manager_templates</code> table reference
     */
    public EmployerManagerTemplates(String alias) {
        this(alias, EMPLOYER_MANAGER_TEMPLATES);
    }

    private EmployerManagerTemplates(String alias, Table<EmployerManagerTemplatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerManagerTemplates(String alias, Table<EmployerManagerTemplatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerManagerTemplatesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_MANAGER_TEMPLATES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerManagerTemplatesRecord> getPrimaryKey() {
        return Keys.EMPLOYER_MANAGER_TEMPLATES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerManagerTemplatesRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerManagerTemplatesRecord>>asList(Keys.EMPLOYER_MANAGER_TEMPLATES_PKEY, Keys.EMPLOYER_MANAGER_TEMPLATES_EMPLOYER_MANAGER_ID_TYPE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerManagerTemplatesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerManagerTemplatesRecord, ?>>asList(Keys.EMPLOYER_MANAGER_TEMPLATES__EMPLOYER_MANAGER_TEMPLATES_EMPLOYER_MANAGER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManagerTemplates as(String alias) {
        return new EmployerManagerTemplates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerManagerTemplates rename(String name) {
        return new EmployerManagerTemplates(name, null);
    }
}
