/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.FavoriteVacancyRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FavoriteVacancy extends TableImpl<FavoriteVacancyRecord> {

    private static final long serialVersionUID = 1807995693;

    /**
     * The reference instance of <code>public.favorite_vacancy</code>
     */
    public static final FavoriteVacancy FAVORITE_VACANCY = new FavoriteVacancy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FavoriteVacancyRecord> getRecordType() {
        return FavoriteVacancyRecord.class;
    }

    /**
     * The column <code>public.favorite_vacancy.favorite_vacancy_id</code>.
     */
    public final TableField<FavoriteVacancyRecord, Integer> FAVORITE_VACANCY_ID = createField("favorite_vacancy_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('favorite_vacancy_favorite_vacancy_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.favorite_vacancy.vacancy_id</code>.
     */
    public final TableField<FavoriteVacancyRecord, Integer> VACANCY_ID = createField("vacancy_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.favorite_vacancy.user_id</code>.
     */
    public final TableField<FavoriteVacancyRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.favorite_vacancy</code> table reference
     */
    public FavoriteVacancy() {
        this("favorite_vacancy", null);
    }

    /**
     * Create an aliased <code>public.favorite_vacancy</code> table reference
     */
    public FavoriteVacancy(String alias) {
        this(alias, FAVORITE_VACANCY);
    }

    private FavoriteVacancy(String alias, Table<FavoriteVacancyRecord> aliased) {
        this(alias, aliased, null);
    }

    private FavoriteVacancy(String alias, Table<FavoriteVacancyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FavoriteVacancyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FAVORITE_VACANCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FavoriteVacancyRecord> getPrimaryKey() {
        return Keys.FAVORITE_VACANCY_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FavoriteVacancyRecord>> getKeys() {
        return Arrays.<UniqueKey<FavoriteVacancyRecord>>asList(Keys.FAVORITE_VACANCY_PK, Keys.FAVORITE_VACANCY_VACANCY_ID_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FavoriteVacancyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FavoriteVacancyRecord, ?>>asList(Keys.FAVORITE_VACANCY__FAVORITE_VACANCY_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FavoriteVacancy as(String alias) {
        return new FavoriteVacancy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FavoriteVacancy rename(String name) {
        return new FavoriteVacancy(name, null);
    }
}
