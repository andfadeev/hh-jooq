/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerManagerOperationStatusRecord;


/**
 * status of operation on employer manager
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerManagerOperationStatus extends TableImpl<EmployerManagerOperationStatusRecord> {

    private static final long serialVersionUID = -632124876;

    /**
     * The reference instance of <code>public.employer_manager_operation_status</code>
     */
    public static final EmployerManagerOperationStatus EMPLOYER_MANAGER_OPERATION_STATUS = new EmployerManagerOperationStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerManagerOperationStatusRecord> getRecordType() {
        return EmployerManagerOperationStatusRecord.class;
    }

    /**
     * The column <code>public.employer_manager_operation_status.employer_manager_operation_status_id</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, Integer> EMPLOYER_MANAGER_OPERATION_STATUS_ID = createField("employer_manager_operation_status_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_manager_operation_st_employer_manager_operation_st_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager_operation_status.type</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.employer_manager_operation_status.performing_user_id</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, Integer> PERFORMING_USER_ID = createField("performing_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_manager_operation_status.employer_manager_id</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, Integer> EMPLOYER_MANAGER_ID = createField("employer_manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.employer_manager_operation_status.creation_time</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, LocalDateTime> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.employer_manager_operation_status.change_time</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, LocalDateTime> CHANGE_TIME = createField("change_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.employer_manager_operation_status.errors_count</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, Integer> ERRORS_COUNT = createField("errors_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_manager_operation_status.target_entity_id</code>.
     */
    public final TableField<EmployerManagerOperationStatusRecord, Integer> TARGET_ENTITY_ID = createField("target_entity_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.employer_manager_operation_status</code> table reference
     */
    public EmployerManagerOperationStatus() {
        this("employer_manager_operation_status", null);
    }

    /**
     * Create an aliased <code>public.employer_manager_operation_status</code> table reference
     */
    public EmployerManagerOperationStatus(String alias) {
        this(alias, EMPLOYER_MANAGER_OPERATION_STATUS);
    }

    private EmployerManagerOperationStatus(String alias, Table<EmployerManagerOperationStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerManagerOperationStatus(String alias, Table<EmployerManagerOperationStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "status of operation on employer manager");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerManagerOperationStatusRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_MANAGER_OPERATION_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerManagerOperationStatusRecord> getPrimaryKey() {
        return Keys.EMPLOYER_MANAGER_OPERATION_STATUS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerManagerOperationStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerManagerOperationStatusRecord>>asList(Keys.EMPLOYER_MANAGER_OPERATION_STATUS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerManagerOperationStatus as(String alias) {
        return new EmployerManagerOperationStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerManagerOperationStatus rename(String name) {
        return new EmployerManagerOperationStatus(name, null);
    }
}
