/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.DeletedEventRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeletedEvent extends TableImpl<DeletedEventRecord> {

    private static final long serialVersionUID = 197400322;

    /**
     * The reference instance of <code>public.deleted_event</code>
     */
    public static final DeletedEvent DELETED_EVENT = new DeletedEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeletedEventRecord> getRecordType() {
        return DeletedEventRecord.class;
    }

    /**
     * The column <code>public.deleted_event.id</code>.
     */
    public final TableField<DeletedEventRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('deleted_event_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.deleted_event.entity_id</code>.
     */
    public final TableField<DeletedEventRecord, Integer> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.deleted_event.entity_type</code>.
     */
    public final TableField<DeletedEventRecord, Integer> ENTITY_TYPE = createField("entity_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.deleted_event</code> table reference
     */
    public DeletedEvent() {
        this("deleted_event", null);
    }

    /**
     * Create an aliased <code>public.deleted_event</code> table reference
     */
    public DeletedEvent(String alias) {
        this(alias, DELETED_EVENT);
    }

    private DeletedEvent(String alias, Table<DeletedEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeletedEvent(String alias, Table<DeletedEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DeletedEventRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DELETED_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeletedEventRecord> getPrimaryKey() {
        return Keys.DELETED_EVENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeletedEventRecord>> getKeys() {
        return Arrays.<UniqueKey<DeletedEventRecord>>asList(Keys.DELETED_EVENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeletedEvent as(String alias) {
        return new DeletedEvent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeletedEvent rename(String name) {
        return new DeletedEvent(name, null);
    }
}
