/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.ProductRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Product extends TableImpl<ProductRecord> {

    private static final long serialVersionUID = -2105606252;

    /**
     * The reference instance of <code>public.product</code>
     */
    public static final Product PRODUCT = new Product();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductRecord> getRecordType() {
        return ProductRecord.class;
    }

    /**
     * The column <code>public.product.product_id</code>.
     */
    public final TableField<ProductRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('product_product_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.product.deed_name</code>.
     */
    public final TableField<ProductRecord, String> DEED_NAME = createField("deed_name", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

    /**
     * The column <code>public.product.temporal</code>.
     */
    public final TableField<ProductRecord, Boolean> TEMPORAL = createField("temporal", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.product.code</code>.
     */
    public final TableField<ProductRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.product.period_length</code>.
     */
    public final TableField<ProductRecord, Integer> PERIOD_LENGTH = createField("period_length", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.product.bdzp_region_id</code>.
     */
    public final TableField<ProductRecord, Integer> BDZP_REGION_ID = createField("bdzp_region_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.product.bdzp_participant</code>. not used, can be dropped
     */
    public final TableField<ProductRecord, Boolean> BDZP_PARTICIPANT = createField("bdzp_participant", org.jooq.impl.SQLDataType.BOOLEAN, this, "not used, can be dropped");

    /**
     * The column <code>public.product.generated</code>.
     */
    public final TableField<ProductRecord, Boolean> GENERATED = createField("generated", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.product.allow_mobile</code>.
     */
    public final TableField<ProductRecord, Boolean> ALLOW_MOBILE = createField("allow_mobile", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.product.allow_desktop</code>.
     */
    public final TableField<ProductRecord, Boolean> ALLOW_DESKTOP = createField("allow_desktop", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.product.z6_page_type</code>.
     */
    public final TableField<ProductRecord, Integer> Z6_PAGE_TYPE = createField("z6_page_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.product.z6_region_id</code>.
     */
    public final TableField<ProductRecord, Integer> Z6_REGION_ID = createField("z6_region_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.product.z5_type</code>.
     */
    public final TableField<ProductRecord, Integer> Z5_TYPE = createField("z5_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.product.z5_template_count</code>.
     */
    public final TableField<ProductRecord, Integer> Z5_TEMPLATE_COUNT = createField("z5_template_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.product.custom_flag_1</code>. HH-56218 Used for custom product data (for JC it is agency flag)
     */
    public final TableField<ProductRecord, Boolean> CUSTOM_FLAG_1 = createField("custom_flag_1", org.jooq.impl.SQLDataType.BOOLEAN, this, "HH-56218 Used for custom product data (for JC it is agency flag)");

    /**
     * The column <code>public.product.code_1c</code>. HH-56822 Used for 1C code providing
     */
    public final TableField<ProductRecord, String> CODE_1C = createField("code_1c", org.jooq.impl.SQLDataType.VARCHAR.length(50).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "HH-56822 Used for 1C code providing");

    /**
     * The column <code>public.product.custom_int_field_1</code>. HH-58409 add common int field for products hierarchy
     */
    public final TableField<ProductRecord, Integer> CUSTOM_INT_FIELD_1 = createField("custom_int_field_1", org.jooq.impl.SQLDataType.INTEGER, this, "HH-58409 add common int field for products hierarchy");

    /**
     * Create a <code>public.product</code> table reference
     */
    public Product() {
        this("product", null);
    }

    /**
     * Create an aliased <code>public.product</code> table reference
     */
    public Product(String alias) {
        this(alias, PRODUCT);
    }

    private Product(String alias, Table<ProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private Product(String alias, Table<ProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductRecord> getPrimaryKey() {
        return Keys.PRODUCT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductRecord>>asList(Keys.PRODUCT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProductRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProductRecord, ?>>asList(Keys.PRODUCT__FK_PRODUCT_SERVICE_TYPE, Keys.PRODUCT__FK_PRODUCT_BDZP_REGION, Keys.PRODUCT__PRODUCT_Z6_REGION_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Product as(String alias) {
        return new Product(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Product rename(String name) {
        return new Product(name, null);
    }
}
