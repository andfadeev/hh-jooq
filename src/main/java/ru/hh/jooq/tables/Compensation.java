/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.CompensationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Compensation extends TableImpl<CompensationRecord> {

    private static final long serialVersionUID = -1716421680;

    /**
     * The reference instance of <code>public.compensation</code>
     */
    public static final Compensation COMPENSATION = new Compensation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompensationRecord> getRecordType() {
        return CompensationRecord.class;
    }

    /**
     * The column <code>public.compensation.compensation_id</code>.
     */
    public final TableField<CompensationRecord, Integer> COMPENSATION_ID = createField("compensation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('compensation_compensation_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.compensation.reason</code>.
     */
    public final TableField<CompensationRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.compensation.country_ids</code>.
     */
    public final TableField<CompensationRecord, String> COUNTRY_IDS = createField("country_ids", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.compensation.service_types</code>.
     */
    public final TableField<CompensationRecord, String> SERVICE_TYPES = createField("service_types", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.compensation.period</code>.
     */
    public final TableField<CompensationRecord, Integer> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.compensation.compensate_at</code>.
     */
    public final TableField<CompensationRecord, LocalDate> COMPENSATE_AT = createField("compensate_at", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>public.compensation.created_at</code>.
     */
    public final TableField<CompensationRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.compensation.result</code>.
     */
    public final TableField<CompensationRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.compensation.status</code>.
     */
    public final TableField<CompensationRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.compensation.service_period</code>.
     */
    public final TableField<CompensationRecord, Integer> SERVICE_PERIOD = createField("service_period", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.compensation</code> table reference
     */
    public Compensation() {
        this("compensation", null);
    }

    /**
     * Create an aliased <code>public.compensation</code> table reference
     */
    public Compensation(String alias) {
        this(alias, COMPENSATION);
    }

    private Compensation(String alias, Table<CompensationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Compensation(String alias, Table<CompensationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CompensationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMPENSATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompensationRecord> getPrimaryKey() {
        return Keys.COMPENSATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompensationRecord>> getKeys() {
        return Arrays.<UniqueKey<CompensationRecord>>asList(Keys.COMPENSATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Compensation as(String alias) {
        return new Compensation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Compensation rename(String name) {
        return new Compensation(name, null);
    }
}
