/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.VacancyBodyContactRecord;
import ru.hh.jooq.udt.records.PhoneEmbeddedRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancyBodyContact extends TableImpl<VacancyBodyContactRecord> {

    private static final long serialVersionUID = -272165199;

    /**
     * The reference instance of <code>public.vacancy_body_contact</code>
     */
    public static final VacancyBodyContact VACANCY_BODY_CONTACT = new VacancyBodyContact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacancyBodyContactRecord> getRecordType() {
        return VacancyBodyContactRecord.class;
    }

    /**
     * The column <code>public.vacancy_body_contact.vacancy_body_id</code>.
     */
    public final TableField<VacancyBodyContactRecord, Integer> VACANCY_BODY_ID = createField("vacancy_body_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.vacancy_body_contact.email</code>.
     */
    public final TableField<VacancyBodyContactRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.vacancy_body_contact.fio</code>.
     */
    public final TableField<VacancyBodyContactRecord, String> FIO = createField("fio", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.vacancy_body_contact.phone</code>.
     */
    public final TableField<VacancyBodyContactRecord, PhoneEmbeddedRecord> PHONE = createField("phone", ru.hh.jooq.udt.PhoneEmbedded.PHONE_EMBEDDED.getDataType(), this, "");

    /**
     * The column <code>public.vacancy_body_contact.additional_phone</code>.
     */
    public final TableField<VacancyBodyContactRecord, PhoneEmbeddedRecord> ADDITIONAL_PHONE = createField("additional_phone", ru.hh.jooq.udt.PhoneEmbedded.PHONE_EMBEDDED.getDataType(), this, "");

    /**
     * Create a <code>public.vacancy_body_contact</code> table reference
     */
    public VacancyBodyContact() {
        this("vacancy_body_contact", null);
    }

    /**
     * Create an aliased <code>public.vacancy_body_contact</code> table reference
     */
    public VacancyBodyContact(String alias) {
        this(alias, VACANCY_BODY_CONTACT);
    }

    private VacancyBodyContact(String alias, Table<VacancyBodyContactRecord> aliased) {
        this(alias, aliased, null);
    }

    private VacancyBodyContact(String alias, Table<VacancyBodyContactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VacancyBodyContactRecord> getPrimaryKey() {
        return Keys.VACANCY_CONTACT_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VacancyBodyContactRecord>> getKeys() {
        return Arrays.<UniqueKey<VacancyBodyContactRecord>>asList(Keys.VACANCY_CONTACT_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VacancyBodyContactRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VacancyBodyContactRecord, ?>>asList(Keys.VACANCY_BODY_CONTACT__VACANCY_BODY_CONTACT_VACANCY_BODY_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancyBodyContact as(String alias) {
        return new VacancyBodyContact(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VacancyBodyContact rename(String name) {
        return new VacancyBodyContact(name, null);
    }
}
