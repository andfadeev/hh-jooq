/*
 * This file is generated by jOOQ.
*/
package ru.hh.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.hh.jooq.Keys;
import ru.hh.jooq.Public;
import ru.hh.jooq.tables.records.EmployerPageRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerPage extends TableImpl<EmployerPageRecord> {

    private static final long serialVersionUID = -525728444;

    /**
     * The reference instance of <code>public.employer_page</code>
     */
    public static final EmployerPage EMPLOYER_PAGE = new EmployerPage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerPageRecord> getRecordType() {
        return EmployerPageRecord.class;
    }

    /**
     * The column <code>public.employer_page.employer_page_id</code>.
     */
    public final TableField<EmployerPageRecord, Integer> EMPLOYER_PAGE_ID = createField("employer_page_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('employer_page_employer_page_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.employer_page.subtitle</code>.
     */
    public final TableField<EmployerPageRecord, String> SUBTITLE = createField("subtitle", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.employer_page.color</code>.
     */
    public final TableField<EmployerPageRecord, String> COLOR = createField("color", org.jooq.impl.SQLDataType.VARCHAR.length(6), this, "");

    /**
     * The column <code>public.employer_page.employer_id</code>.
     */
    public final TableField<EmployerPageRecord, Integer> EMPLOYER_ID = createField("employer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.employer_page</code> table reference
     */
    public EmployerPage() {
        this("employer_page", null);
    }

    /**
     * Create an aliased <code>public.employer_page</code> table reference
     */
    public EmployerPage(String alias) {
        this(alias, EMPLOYER_PAGE);
    }

    private EmployerPage(String alias, Table<EmployerPageRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerPage(String alias, Table<EmployerPageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmployerPageRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMPLOYER_PAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerPageRecord> getPrimaryKey() {
        return Keys.EMPLOYER_PAGE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerPageRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerPageRecord>>asList(Keys.EMPLOYER_PAGE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmployerPageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmployerPageRecord, ?>>asList(Keys.EMPLOYER_PAGE__EMPLOYER_PAGE_EMPLOYER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerPage as(String alias) {
        return new EmployerPage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerPage rename(String name) {
        return new EmployerPage(name, null);
    }
}
